{"version":3,"sources":["shared/img/404/404.png","shared/prop-types/ReducerProps.js","containers/App/MainWrapper.jsx","containers/DefaultPage/404/index.jsx","configs/exports.js","containers/Account/LogIn/index.jsx","redux/actions/sidebarActions.js","redux/actions/customizerActions.js","redux/actions/roundBordersActions.js","redux/actions/blocksShadowsActions.js","containers/Layout/topbar/TopbarSidebarButton.jsx","containers/Layout/topbar/TopbarMenuLink.jsx","shared/components/auth/withAuth0.jsx","containers/Layout/topbar/TopbarProfile.jsx","containers/Layout/topbar/Topbar.jsx","containers/Layout/topbar_with_navigation/TopbarSidebarButton.jsx","containers/Layout/topbar_with_navigation/TopbarMenuLink.jsx","containers/Layout/topbar_with_navigation/TopbarProfile.jsx","containers/Layout/topbar_with_navigation/TopbarMail.jsx","containers/Layout/topbar_with_navigation/TopbarLanguage.jsx","containers/Layout/topbar_with_navigation/TopbarNotification.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavLink.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavDashboards.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavUIElements.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavCategory.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNavOtherPages.jsx","containers/Layout/topbar_with_navigation/tobar_nav/TopbarNav.jsx","containers/Layout/topbar_with_navigation/TopbarSearch.jsx","containers/Layout/topbar_with_navigation/TopbarWithNavigation.jsx","containers/Layout/sidebar/SidebarLink.jsx","containers/Layout/sidebar/SidebarCategory.jsx","containers/Layout/sidebar/SidebarContent.jsx","containers/Layout/sidebar/Sidebar.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarLink.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarCategory.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarContent.jsx","containers/Layout/topbar_with_navigation/sidebar_mobile/SidebarMobile.jsx","containers/Layout/customizer/ToggleTheme.jsx","containers/Layout/customizer/ToggleCollapsedMenu.jsx","containers/Layout/customizer/ToggleRoundBorders.jsx","containers/Layout/customizer/ToggleShadow.jsx","containers/Layout/customizer/ToggleTopMenu.jsx","containers/Layout/customizer/ToggleRTL.jsx","containers/Layout/customizer/Customizer.jsx","containers/Layout/index.jsx","redux/actions/themeActions.js","redux/actions/rtlActions.js","containers/Dashboards/Default/components/Visits.jsx","containers/Dashboards/Default/index.jsx","containers/Customers/usersearch.jsx","containers/Users/UsersStaffs.jsx","containers/Customers/Customer.jsx","shared/components/catalog/ProductItems.jsx","containers/Customers/CustomerDetails.jsx","shared/components/catalog/imageView.jsx","containers/SMSLogs/SMSlogs.jsx","containers/Reports/WithdrawRequests.jsx","containers/Loans/Loan.jsx","containers/Loans/CustomerStatement.jsx","containers/Countries/Countries.jsx","containers/Branches/Branches.jsx","containers/Roles/Roles.jsx","containers/Reports/SuspendAccount.jsx","containers/Reports/Deposits.jsx","containers/Customers/CustomerDeposit.jsx","containers/App/Router/WrappedRoutes/index.jsx","containers/App/Router/index.jsx","redux/reducers/themeReducer.js","redux/reducers/rtlReducer.js","redux/reducers/sidebarReducer.js","redux/reducers/roundBordersReducer.js","redux/reducers/blocksShadowsReducer.js","redux/reducers/cryptoTableReducer.js","redux/actions/cryptoTableActions.js","redux/reducers/newOrderTableReducer.js","redux/actions/newOrderTableActions.js","redux/reducers/customizerReducer.js","redux/reducers/todoReducer.js","redux/reducers/authReducer.js","redux/actions/authActions.js","containers/App/store.js","containers/App/ScrollToTop.jsx","translations/index.jsx","translations/resources.js","containers/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","func","PropTypes","shape","string","bool","MainWrapper","topNavigation","show","collapse","className","direction","roundBorders","blocksShadows","fullName","avatar","isAuthenticated","loading","user","name","picture","logout","this","props","theme","customizer","children","rtl","location","wrapperClass","classNames","wrapper","squaredCorners","withBoxShadow","pathname","dir","PureComponent","withRouter","connect","state","NotFound404","src","Image404","alt","to","baseURL","baseURL_PORTAL","USER","localStorage","getItem","JSON","parse","CONFIG","headers","formatCurrency","amount","parseInt","toLocaleString","minimumFractionDigits","maximumFractionDigits","replaceAll","useStyles","makeStyles","refresh","marginTop","cursor","margin","animation","pointerEvents","transform","ToastTable","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnFocusLoss","draggable","pauseOnHover","errorToast","statusMessage","toast","error","progress","undefined","successToast","success","React","useState","showPassword","setShowPassword","username","setUsername","password","setPassword","openPassword","isOpenPassword","isLoading","loggedin","isLoggedIn","useEffect","handleChangeUsername","event","target","value","closeModalReset","e","isOpen","onRequestClose","contentLabel","onAfterOpen","document","body","style","overflow","onAfterClose","removeAttribute","overlayClassName","closeTimeoutMS","onClick","Form","onSubmit","preventDefault","formData","require","generate","length","charset","capitalization","axios","post","then","response","data","status","window","setTimeout","message","catch","Control","autoFocus","type","color","borderColor","placeholder","onChange","Button","setItem","stringify","payload","token","href","htmlFor","id","required","toggle","data-toggle","data-target","changeMobileSidebarVisibility","toggleBoxShadow","createAction","toggleTopNavigation","changeRoundBordersToOnAction","changeRoundBordersToOffAction","changeBlocksShadowsToOnAction","changeBlocksShadowsToOffAction","icon","process","TopbarSidebarButton","changeSidebarVisibility","TopbarMenuLinks","title","path","Auth0Context","createContext","Auth0Provider","onRedirectCallback","domain","clientId","redirectUri","returnTo","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","a","createAuth0Client","client_id","redirect_uri","auth0FromHook","search","includes","handleRedirectCallback","appState","isAuth","getUser","currentUser","initAuth0","loginWithPopup","params","console","Provider","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","defaultProps","history","replaceState","WrappedComponent","Ava","TopbarProfile","setState","prevState","removeItem","auth0","Collapse","hookAuth0","useContext","Topbar","verticalAlign","TopbarMenuLink","notifications","ava","date","TopbarMail","map","notification","index","key","gb","fr","de","GbLng","FrLng","DeLng","TopbarLanguage","changeLanguage","lng","i18n","mainButtonContent","withTranslation","TopbarNotification","TopbarNavLink","newLink","route","Badge","TopbarNavDashboards","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","TopbarNavUIElements","TopbarNavCategory","TopbarNavOtherPages","TopbarNav","TopbarSearch","onInputOpen","inputOpen","searchClass","TopbarWithNavigation","new","SidebarLink","activeClassName","SidebarCategory","isNew","sidebarCollapse","isCollapsed","setIsCollapsed","categoryClass","SidebarContent","changeToLight","changeToDark","hideSidebar","Sidebar","sidebar","sidebarClass","aria-label","Component","ToggleTheme","checked","ToggleCollapsedMenu","ToggleRoundBorders","changeRoundBordersOn","changeRoundBordersOff","ToggleShadow","changeBlocksShadowsOn","changeBlocksShadowsOff","ToggleTopMenu","ToggleRTL","changeToLTR","changeToRTL","settings","Customizer","setIsOpen","customizerClass","customizer__wrap","handleOpen","hidden","dispatch","sidebarVisibility","mobileSidebarVisibility","layoutClass","layout","SidebarMobile","uv","Visits","handleClick","item","indexOf","activeIndex","all","get","spread","branchResponse","doc_name","doc_remain","remains","total","count","log","status_code","Col","lg","xs","Card","CardBody","fontSize","height","dataKey","entry","fill","compose","t","Row","md","role","UserSearch","handleChange","bind","phone_number","showError","farmerProps","userDetail","isShowError","submitted","farmer","country","international","withCountryCallingCode","outline","UsersStaffs","open","IsOpen","open_add","IsOpenAdd","edit_record","setEditRecord","setData","setLoad","user_name","randomstrng","setRandomString","res","new_data","Users","i","new_date","moment","created_on","format","push","Object","assign","err","columns","text","TrOnlyClassName","sortable","cell","record","marginRight","OpenModal","confirm","handleDelete","branch_name","closeModal","closeModalAdd","onChangeHandle","formatData","email","delete","Success","branch","country_name","msisdn","put","config","page_size","length_menu","show_filter","show_pagination","filename","button","excel","print","csv","records","Customers","setFarmer","setFarmerProps","datatotal","setDataTotal","queryString","setQueryString","farmerDetails","setFarmerDetails","activeTab","setActiveTab","spin","setSpin","refreshCanvas","classes","url","customerResponse","mname","memail","mcountry","magent","mbranch","agent_name","f_amount","parseFloat","balance","toFixed","dates","key_column","pagination","show_length_menu","language","loading_text","filter","no_data_text","next","previous","align","document_status","class","borderRadius","padding","loan_status","rowClickedHandler","Table","responsive","hover","Nav","tabs","NavItem","NavLink","classnames","active","background","border","Autorenew","clsx","dynamic","total_record","keys","encodeURIComponent","order","column","join","Sale","New","Catalog","items","url_src","is_open","sale","id_no","description","village","designation","price","oldPrice","colors","CustomerDetails","customer_data","setCustomer","open_limit","IsOpenLimit","customer_document","setCustomerDocuments","state_value","setDescription","setDocumentStatus","loans","setLoan","home","setHome","customer_statement","setStatement","statement_reference","setReference","customer_url","customer_info","customer_doc","total_amount","f_amount_interest","interest","f_amount_limit","loan_limit","enddate","enddates","end_date","loan_counts","Intl","NumberFormat","currency","columns_livestock","customerDetails","reference","closeModalLimit","customer_id","agent_id","user_id","reload","paddingTop","cols","rows","marginBottom","stock_amount","mpesa_statement","business_permit","kra_pin","farmer_name","farmer_id","check_status","TabContent","TabPane","ProductItems","id_front","id_back","b","filter_value","alert","width","ImageView","images","tapClose","SMSLogs","smsLog","setSMSLog","sms_url","smsResponse","WithdrawRequests","farmerResponse","Loan","loan","setloan","loanProps","setloanProps","loanDetails","setloanDetails","total_loans","setTotalLoans","loan_issued","setTotalIssued","loanResponse","mloan","valueExpected","valueCount","CuastomerStatement","URLSearchParams","p","unrow","row","m_credit","credit","m_debit","debit","Countries","Branches","option","setOption","setCountry","newOptions","d","options","label","onChangeHandlecountry","role_name","Roles","SuspendAccount","setIDNo","transaction_id","setTransactionID","setMSISDN","setAmount","setName","setID","fpaid_amount","Fragment","openModal","user_id_no","formData_id","DepositArchive","CustomerDeposit","component","Default","Router","exact","LogIn","WrappedRoutes","initialState","themeReducer","action","rtlReducer","handleActions","sidebarReducer","market_cap","volume","supply","change","chart","cryptoTableReducer","loadData","updatedItems","quantity","sold","img","newOrderTableReducer","todos","completed","priority","priorityFilter","getId","todo","reduce","maxId","Math","max","todoReducer","updated","authReducer","reducer","combineReducers","form","reduxFormReducer","cryptoTable","newOrder","customizerReducer","store","createStore","ScrollToTop","prevProps","scrollTo","interpolation","escapeValue","resources","en","common","common_fr","init","i18nextConfig","ConnectedThemeComponent","themeName","createMuiTheme","palette","ThemeProvider","App","setLoaded","idleTimer","addEventListener","targetUrl","I18nextProvider","ref","timeout","onActive","getRemainingTime","onIdle","getLastActiveTime","onAction","debounce","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c1bf443.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.537dd20a.png\";","import PropTypes from 'prop-types';\n\nconst {\n  func, shape, string, bool,\n} = PropTypes;\n\nexport const CustomizerProps = shape({\n  topNavigation: bool,\n});\n\nexport const SidebarProps = shape({\n  show: PropTypes.bool,\n  collapse: PropTypes.bool,\n});\n\nexport const ThemeProps = shape({\n  className: string,\n});\n\nexport const RTLProps = shape({\n  direction: string,\n});\n\nexport const RoundBordersProps = shape({\n  roundBorders: string,\n});\n\nexport const BlocksShadowsProps = shape({\n  blocksShadows: string,\n});\n\nexport const UserProps = shape({\n  fullName: string,\n  avatar: string,\n});\n\nexport const AuthOProps = shape({\n  isAuthenticated: bool,\n  loading: bool,\n  user: shape({\n    name: string,\n    picture: string,\n  }),\n  logout: func,\n});\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { CustomizerProps, ThemeProps, RTLProps } from '../../shared/prop-types/ReducerProps';\n\nclass MainWrapper extends PureComponent {\n  static propTypes = {\n    customizer: CustomizerProps.isRequired,\n    theme: ThemeProps.isRequired,\n    rtl: RTLProps.isRequired,\n    children: PropTypes.element.isRequired,\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }).isRequired,\n  };\n\n  render() {\n    const {\n      theme, customizer, children, rtl, location,\n    } = this.props;\n\n    const wrapperClass = classNames({\n      wrapper: true,\n      'squared-corner-theme': customizer.squaredCorners,\n      'blocks-with-shadow-theme': customizer.withBoxShadow,\n      'top-navigation': customizer.topNavigation,\n    });\n\n    const direction = location.pathname === '/' ? 'ltr' : rtl.direction;\n\n    return (\n      <div className={`${theme.className} ${direction}-support`} dir={direction}>\n        <div className={wrapperClass}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(state => ({\n  theme: state.theme,\n  rtl: state.rtl,\n  customizer: state.customizer,\n}))(MainWrapper));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Image404 from '../../../shared/img/404/404.png';\n\nconst NotFound404 = () => (\n  <div className=\"not-found\">\n    <div className=\"not-found__content\">\n      <img className=\"not-found__image\" src={Image404} alt=\"404\" />\n      <h3 className=\"not-found__info\">Ooops! The page you are looking for could not be found :(</h3>\n      <Link className=\"btn btn-primary\" to=\"/dashboard_default\">Back Home</Link>\n    </div>\n  </div>\n);\n\nexport default NotFound404;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n// export const baseURL = \"http://0.0.0.0:1400/\";\nexport const baseURL = \"https://api.stawishabiashara.com/\";\nexport const baseURL_PORTAL = \"https://portalapi.stawishabiashara.com/api/fulizia/\"\n\nexport const logout = () => {\n    window.location.href = \"/\";\n    // localStorage.removeItem(\"token\");\n}\n//isLogged In\nexport const isLoggedIn = localStorage.getItem('isLoggedIn') ? true : false;   // localstorage data retrieval\nexport const TOKEN = localStorage.getItem('token');\nexport const USER = JSON.parse(localStorage.getItem('user'));\n\n// header configurations\n\n\n\nexport const CONFIG = {\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'x-access-token': localStorage.getItem('token')\n    },\n};\n\n\n\nexport const CONFIG_FILES = {\n    headers: {\n        'Content-Type': 'multipart/form-data',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'x-access-token': localStorage.getItem('token')\n    },\n};\n\nexport const formatCurrency = amount => {\n    return (parseInt(amount)).toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).replaceAll('ABS', '');\n\n};\n\n// //currency\n// export const formatCurrency = amount => {\n//     return new Intl.NumberFormat('en-US', {\n//         style: 'currency',\n//         currency: \"ABS\",\n//         minimumFractionDigits: 2,\n//         maximumFractionDigits: 2\n//     }).format(amount).replaceAll('ABS', \"\");\n// };\n\n\nexport const useStyles = makeStyles((theme) => ({\n    refresh: {\n        marginTop: \"20px\",\n        cursor: \"pointer\",\n        margin: \"auto\",\n        \"&.spin\": {\n            animation: \"$spin 1s 1\",\n            pointerEvents: 'none'\n        }\n    },\n    \"@keyframes spin\": {\n        \"0%\": {\n            transform: \"rotate(0deg)\"\n        },\n        \"100%\": {\n            transform: \"rotate(360deg)\"\n        }\n    }\n}));\n// end of page refresh\n\nexport const ToastTable = () => {\n    return (<ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        theme=\"colored\"\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n    />\n    )\n}\n\nexport const errorToast = (statusMessage) => {\n    return (\n        toast.error(statusMessage, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        })\n    )\n}\n\nexport const successToast = (statusMessage) => {\n    return (\n        toast.success(statusMessage, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        })\n    )\n}\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'reactstrap';\nimport { MDBCloseIcon } from \"mdbreact\"\nimport { baseURL, baseURL_PORTAL, CONFIG, errorToast, successToast, ToastTable } from '../../../configs/exports';\nimport axios from 'axios';\nimport CardIcon from 'mdi-react/CardIcon';\nimport './style2.css';\n\nconst LogIn = () => {\n\n  // initialing hooks\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState(null);\n  const [openPassword, isOpenPassword] = React.useState(false);\n  const [loading, isLoading] = React.useState('');\n  const [loggedin, isLoggedIn] = React.useState(localStorage.getItem(\"isLoggedIn\") ? true : false);\n\n  useEffect(() => {\n    // check if user was logged in\n    if (loggedin) {\n      // window.location.href = \"find_customer\";\n    }\n  }, [loggedin]);\n\n  const handleChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handleChangePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const showPasswordToggle = () => {\n    // eslint-disable-next-line\n    if (showPassword == true) {\n      setShowPassword(false);\n    } else {\n      setShowPassword(true);\n    }\n  };\n\n\n  //submit function\n  const onSubmit = e => {\n    e.preventDefault();\n    isLoading(true);\n    if (username === \"\") {\n      errorToast(\"Username is required\")\n    } else if (password === \"\") {\n      errorToast(\"Password is required\")\n    }\n    else {\n      let formData = {\n        \"username\": username,\n        \"password\": password,\n      }\n      let url = baseURL_PORTAL + \"authentication/login\";\n      // calling login files\n      axios.post(url, formData, CONFIG).then((response) => {\n\n        if (response.data.success) {\n\n          localStorage.setItem(\"isLoggedIn\", true);\n          localStorage.setItem(\"user\", JSON.stringify(response.data.payload));\n          localStorage.setItem(\"token\", response.data.token);\n          isLoggedIn(true);\n          isLoading(false);\n          successToast(response.data.message);\n          window.setTimeout(() => {\n            window.location.href = \"find_customer\";\n          }, 3000);\n\n\n        } else {\n          errorToast(response.data.message);\n\n        }\n\n      }).catch(error => {\n\n        isLoading(false);\n\n\n        errorToast(error.response.data.message)\n\n      })\n\n\n\n    }\n  };\n\n  const closeModalReset = e => {\n    isOpenPassword(false);\n  };\n\n  const resetpasswordchange = e => {\n    isOpenPassword(true);\n  };\n\n\n  // reset password functions\n  const onSubmitPasswordReset = e => {\n    e.preventDefault();\n    isLoading(true);\n    let formData = {\n      \"username\": this.state.username,\n      \"password\": require(\"randomstring\").generate({\n        length: 5,\n        charset: 'alphanumeric',\n        capitalization: 'lowercase'\n      }),\n    }\n    axios.post(baseURL + 'updateUser', formData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then((response) => {\n      if (response.data.status) {\n        successToast(\"Password reset successful. Check your phone\")\n        // eslint-disable-next-line\n        window.setTimeout(() => {\n          // alert(response.data.user.role)\n          isOpenPassword(false);\n          isLoading(false)\n        }, 3000);\n      }\n      else {\n\n        errorToast(response.data.message)\n        window.setTimeout(() => {\n          // alert(response.data.user.role)\n          isLoading(false)\n        }, 5000);\n      }\n    }).catch(error => {\n\n      errorToast(error.data.message)\n      window.setTimeout(() => {\n        // alert(response.data.user.role)\n        isLoading(false)\n      }, 5000);\n    });\n  }\n\n\n  // return the UI\n  return (\n    <div className=\"elite-login\">\n\n      {ToastTable()}\n\n      <Modal\n        isOpen={openPassword}\n        onRequestClose={e => {\n          closeModalReset(e);\n        }}\n        contentLabel=\"My dialog\"\n        className=\"mymodal\"\n        onAfterOpen={() => {\n          document.body.style.overflow = 'hidden';\n        }}\n        onAfterClose={() => {\n          document.body.removeAttribute('style');\n        }}\n        overlayClassName=\"myoverlay\"\n        closeTimeoutMS={500}\n      >\n        <MDBCloseIcon onClick={closeModalReset} />\n        <h4><b>Reset Password</b></h4>\n        <>\n          <Form className=\"form login-form\" onSubmit={onSubmitPasswordReset}>\n            {/*n  <h5><b>Get Agent Number</b></h5> */}\n            <div className=\"form__form-group\">\n              <br></br>\n              <span className=\"form__form-group-label\">Username</span>\n              <div className=\"form__form-group-field\">\n                <div className=\"form__form-group-icon\">\n                  <CardIcon />\n                </div>\n                <Form.Control\n                  autoFocus\n                  type=\"text\"\n                  name=\"username\"\n                  style={{ color: \"black\", borderColor: \"hsl(0,0%,80%)\" }}\n                  placeholder=\"Enter your Username\"\n                  className=\"input-without-border-radius\"\n                  value={username}\n                  onChange={handleChangeUsername}\n                />\n              </div>\n              <br />\n            </div>\n            <div className=\"account__btns col-8 offset-2\">\n              <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                loading ? \"Please wait...\" : \"Proceed\"\n              }</Button>\n            </div>\n\n          </Form>\n        </>\n      </Modal>\n\n\n\n\n\n      <div className=\"elite-login-sec\">\n        <div className=\"row\">\n          <div className=\"col-md-6 elite-login-left\">\n            <div className=\"carousel-wrap\">\n              <div className=\"item\">\n                <div className=\"item-sec\">\n                  {/* <div className=\"login_slider_image\"><img src={img} alt=\"logo\" /></div> */}\n                  <p className=\"item-text\" style={{ color: \"white\" }}></p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 elite-login-right\">\n            <h1 className=\"elite-login-head\">Stawisha Biashara</h1>\n            <form className=\"elite-login-form\" onSubmit={onSubmit} >\n\n              <div className=\"elite-form-field\">\n                <label htmlFor=\"user_email\">Your username</label>\n                <input className=\"form-control\"\n                  placeholder=\"Enter Username\"\n                  id=\"elite-username\"\n                  required=\"required\"\n                  type=\"text\"\n                  onChange={handleChangeUsername}\n                  style={{ borderColor: \"grey\" }}\n                  value={username}\n                  name=\"username\" />\n              </div>\n\n\n\n              <div className=\"elite-form-field\">\n                <label htmlFor=\"user_email\">Password</label>\n                <input\n                  placeholder=\"Enter your password\"\n                  id=\"elite-email\"\n                  className=\"form-control\"\n                  required=\"required\"\n                  style={{ borderColor: \"grey\" }}\n                  value={password}\n                  onChange={handleChangePassword}\n                  type={showPassword === true ? \"text\" : \"password\"}\n                />\n                <input type=\"hidden\" name=\"user_timezone\" id=\"user_timezone\" />\n                <span toggle=\"#password-field\" onClick={showPasswordToggle} className=\"fa fa-fw fa-eye field-icon toggle-password\" />\n\n                <p className=\"elite-agent-pwd\" >\n                  <a href=\"hhtp\" onClick={resetpasswordchange}\n                    data-toggle=\"modal\" data-target=\"#specialist-forgotModal\">\n                    Forgot Password?\n                  </a></p>\n\n\n                <br /><br />\n\n                <br /><br />\n                <br /><br />\n\n              </div>\n\n              <button type=\"submit\" className=\"elite-form-btn\"> {\n                loading ? \"Please wait...\" : \"Sign In\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(state => ({ theme: state.theme }))(LogIn);\n","export const CHANGE_SIDEBAR_VISIBILITY = 'CHANGE_SIDEBAR_VISIBILITY';\nexport const CHANGE_MOBILE_SIDEBAR_VISIBILITY = 'CHANGE_MOBILE_SIDEBAR_VISIBILITY';\n\nexport function changeSidebarVisibility() {\n  return {\n    type: CHANGE_SIDEBAR_VISIBILITY,\n  };\n}\n\nexport function changeMobileSidebarVisibility() {\n  return {\n    type: CHANGE_MOBILE_SIDEBAR_VISIBILITY,\n  };\n}\n","import { createAction } from 'redux-actions';\n\nexport const toggleBoxShadow = createAction('TOGGLE_BOX_SHADOW');\nexport const toggleTopNavigation = createAction('TOGGLE_TOP_NAVIGATION');\n","import { createAction } from 'redux-actions';\n\nexport const changeRoundBordersToOnAction = createAction('CHANGE_ROUND_BORDERS_ON');\nexport const changeRoundBordersToOffAction = createAction('CHANGE_ROUND_BORDERS_OFF');\n","import { createAction } from 'redux-actions';\n\nexport const changeBlocksShadowsToOnAction = createAction('CHANGE_BLOCKS_SHADOWS_ON');\nexport const changeBlocksShadowsToOffAction = createAction('CHANGE_BLOCKS_SHADOWS_OFF');\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\n\nclass TopbarSidebarButton extends PureComponent {\n  static propTypes = {\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\n    changeSidebarVisibility: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\n\n    return (\n      <div>\n        <button className=\"topbar__button topbar__button--desktop\" type=\"button\" onClick={changeSidebarVisibility}>\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\n        </button>\n        <button className=\"topbar__button topbar__button--mobile\" type=\"button\" onClick={changeMobileSidebarVisibility}>\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default TopbarSidebarButton;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class TopbarMenuLinks extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      title, icon, path, onClick,\n    } = this.props;\n\n    return (\n      <Link className=\"topbar__link\" to={path} onClick={onClick}>\n        <span className={`topbar__link-icon lnr lnr-${icon}`} />\n        <p className=\"topbar__link-title\">{title}</p>\n      </Link>\n    );\n  }\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\n\nexport function hookAuth0(WrappedComponent) {\n  return function HockComponent(props) {\n    const auth0 = useAuth0();\n    return <WrappedComponent {...props} auth0={auth0} />;\n  };\n}\n\nconst Auth0Provider = ({\n  children, onRedirectCallback, domain, clientId, redirectUri, returnTo,\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client({\n        domain,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        returnTo,\n      });\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuth = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuth);\n\n      if (isAuth) {\n        const currentUser = await auth0FromHook.getUser();\n        setUser(currentUser);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n  }, [clientId, domain, onRedirectCallback, redirectUri, returnTo]);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      // eslint-disable-next-line\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const currentUser = await auth0Client.getUser();\n    setUser(currentUser);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const currentUser = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(currentUser);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n\nAuth0Provider.propTypes = {\n  children: PropTypes.node.isRequired,\n  onRedirectCallback: PropTypes.func,\n  domain: PropTypes.string,\n  clientId: PropTypes.string,\n  redirectUri: PropTypes.string,\n  returnTo: PropTypes.string,\n};\n\nAuth0Provider.defaultProps = {\n  onRedirectCallback: () => window.history.replaceState({}, document.title, window.location.pathname),\n  domain: null,\n  clientId: null,\n  redirectUri: null,\n  returnTo: null,\n};\n\nexport default Auth0Provider;\n","import React, { PureComponent } from 'react';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport { Collapse } from 'reactstrap';\nimport TopbarMenuLink from './TopbarMenuLink';\nimport { UserProps, AuthOProps } from '../../../shared/prop-types/ReducerProps';\nimport { hookAuth0 } from '../../../shared/components/auth/withAuth0';\nimport { USER } from '../../../configs/exports';\n\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\n\nclass TopbarProfile extends PureComponent {\n  static propTypes = {\n    user: UserProps.isRequired,\n    auth0: AuthOProps.isRequired,\n  }\n\n\n  constructor() {\n    super();\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  logout = () => {\n    window.location.href = \"/\";\n\n    localStorage.removeItem('token');\n  }\n\n  render() {\n    const { user, auth0 } = this.props;\n    const { collapse } = this.state;\n\n    return (\n      <div className=\"topbar__profile\">\n        <button className=\"topbar__avatar\" type=\"button\" onClick={this.toggle}>\n          <img\n            className=\"topbar__avatar-img\"\n            src={(auth0.user && auth0.user.picture) || user.avatar || Ava}\n            alt=\"avatar\"\n          />\n          <p className=\"topbar__avatar-name\">\n            {USER.name}\n          </p>\n          <DownIcon className=\"topbar__icon\" />\n\n        \n        </button>\n        {collapse && <button className=\"topbar__back\" type=\"button\" onClick={this.toggle} />}\n        <Collapse isOpen={collapse} className=\"topbar__menu-wrap\">\n          <div className=\"topbar__menu\">\n            {/* <TopbarMenuLink\n              title=\"My Profile\"\n              icon=\"user\"\n              path=\"/account/profile\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Calendar\"\n              icon=\"calendar-full\"\n              path=\"/default_pages/calendar\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Tasks\"\n              icon=\"list\"\n              path=\"/todo\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Inbox\"\n              icon=\"inbox\"\n              path=\"/mail\"\n              onClick={this.toggle}\n            />\n            <div className=\"topbar__menu-divider\" />\n            <TopbarMenuLink\n              title=\"Account Settings\"\n              icon=\"cog\"\n              path=\"/account/profile\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Lock Screen\"\n              icon=\"lock\"\n              path=\"/lock_screen\"\n              onClick={this.toggle}\n            /> */}\n            {auth0.isAuthenticated && (\n              <TopbarMenuLink\n                title=\"Log Out Auth0\"\n                icon=\"exit\"\n                path=\"/poral\"\n                onClick={auth0.logout}\n              />\n            )\n            }\n            <TopbarMenuLink\n              title=\"Log Out\"\n              icon=\"exit\"\n              path=\"/portal\"\n              onClick={this.logout}\n            />\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default hookAuth0(TopbarProfile);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\nimport { UserProps } from '../../../shared/prop-types/ReducerProps';\nimport TopbarSidebarButton from './TopbarSidebarButton';\nimport TopbarProfile from './TopbarProfile';\n// import TopbarMail from './TopbarMail';\n// import TopbarNotification from './TopbarNotification';\n// import TopbarSearch from './TopbarSearch';\n// import TopbarLanguage from './TopbarLanguage';\n\nconst Topbar = ({\n  changeMobileSidebarVisibility, changeSidebarVisibility, user,\n}) => (\n  <div className=\"topbar\">\n    <div className=\"topbar__left\">\n      <TopbarSidebarButton\n        changeMobileSidebarVisibility={changeMobileSidebarVisibility}\n        changeSidebarVisibility={changeSidebarVisibility}\n      />\n      <h4 className=\"topbar__log\" style={{ verticalAlign: 'center !important', marginTop: '20px', color: \"\" }} to=\"/dashboard\" >Stawisha Biashara</h4>\n      {/* \n      <Link className=\"topbar__log\" to=\"/online_marketing_dashboard\" /> */}\n    </div>\n    <div className=\"topbar__right\">\n      {/* <TopbarNotification />\n        <TopbarMail new /> */}\n      <TopbarProfile user={user} />\n      {/* <TopbarLanguage /> */}\n    </div>\n  </div>\n);\n\nTopbar.propTypes = {\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n  user: UserProps,\n};\n\nTopbar.defaultProps = {\n  user: {},\n};\n\nexport default Topbar;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\n\nclass TopbarSidebarButton extends PureComponent {\n  static propTypes = {\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { changeMobileSidebarVisibility } = this.props;\n\n    return (\n      <div>\n        <button className=\"topbar__button topbar__button--mobile\" type=\"button\" onClick={changeMobileSidebarVisibility}>\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default TopbarSidebarButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst TopbarMenuLinks = ({\n  title, icon, path, onClick,\n}) => (\n  <Link className=\"topbar__link\" to={path} onClick={onClick}>\n    <span className={`topbar__link-icon lnr lnr-${icon}`} />\n    <p className=\"topbar__link-title\">{title}</p>\n  </Link>\n);\n\nTopbarMenuLinks.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default TopbarMenuLinks;\n","import React, { PureComponent } from 'react';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport { Collapse } from 'reactstrap';\nimport TopbarMenuLink from './TopbarMenuLink';\n\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\n\nexport default class TopbarProfile extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  render() {\n    const { collapse } = this.state;\n\n    return (\n      <div className=\"topbar__profile\">\n        <button className=\"topbar__avatar\" type=\"button\" onClick={this.toggle}>\n          <img className=\"topbar__avatar-img\" src={Ava} alt=\"avatar\" />\n          <p className=\"topbar__avatar-name\">Roman Johanson</p>\n          <DownIcon className=\"topbar__icon\" />\n        </button>\n        {collapse && <button className=\"topbar__back\" type=\"button\" onClick={this.toggle} />}\n        <Collapse isOpen={collapse} className=\"topbar__menu-wrap\">\n          <div className=\"topbar__menu\">\n            <TopbarMenuLink\n              title=\"My Profile\"\n              icon=\"user\"\n              path=\"/account/profile\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Calendar\"\n              icon=\"calendar-full\"\n              path=\"/default_pages/calendar\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Tasks\"\n              icon=\"list\"\n              path=\"/todo\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Inbox\"\n              icon=\"inbox\"\n              path=\"/mail\"\n              onClick={this.toggle}\n            />\n            <div className=\"topbar__menu-divider\" />\n            <TopbarMenuLink\n              title=\"Account Settings\"\n              icon=\"cog\"\n              path=\"/account/profile\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Lock Screen\"\n              icon=\"lock\"\n              path=\"/lock_screen\"\n              onClick={this.toggle}\n            />\n            <TopbarMenuLink\n              title=\"Log Out\"\n              icon=\"exit\"\n              path=\"/portal\"\n              onClick={this.toggle}\n            />\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse } from 'reactstrap';\nimport MailIcon from 'mdi-react/MailIcon';\n\nconst notifications = [\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava.png`,\n    name: 'Cristopher Changer',\n    message: 'Good but communication was good e..',\n    date: '09:02',\n  },\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava2.png`,\n    name: 'Sveta Narry',\n    message: 'It is a long established fact that a read..',\n    date: '09:00',\n  },\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava3.png`,\n    name: 'Lory McQueen',\n    message: 'There are many variations of passages..',\n    date: '08:43',\n  },\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava2.png`,\n    name: 'Cristopher Changer',\n    message: 'Yas sent you an invitation to join proje..',\n    date: '08:43',\n  },\n];\n\nexport default class TopbarMail extends PureComponent {\n  state = {\n    collapse: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  render() {\n    const { collapse } = this.state;\n    return (\n      <div className=\"topbar__collapse\">\n        <button className=\"topbar__btn topbar__btn--mail topbar__btn--new\" type=\"button\" onClick={this.toggle}>\n          <MailIcon />\n          <div className=\"topbar__btn-new-label\">\n            <div />\n          </div>\n        </button>\n        {collapse && <button className=\"topbar__back\" type=\"button\" onClick={this.toggle} />}\n        <Collapse\n          isOpen={collapse}\n          className=\"topbar__collapse-content\"\n        >\n          <div className=\"topbar__collapse-title-wrap\">\n            <p className=\"topbar__collapse-title\">Unread messages</p>\n            <button className=\"topbar__collapse-button\" type=\"button\">Mark all as read</button>\n          </div>\n          {notifications.map((notification, index) => (\n            <div className=\"topbar__collapse-item\" key={index}>\n              <div className=\"topbar__collapse-img-wrap\">\n                <img className=\"topbar__collapse-img\" src={notification.ava} alt=\"\" />\n              </div>\n              <p className=\"topbar__collapse-name\">{notification.name}</p>\n              <p className=\"topbar__collapse-message topbar__collapse-message--mail\">{notification.message}</p>\n              <p className=\"topbar__collapse-date\">{notification.date}</p>\n            </div>\n          ))}\n          <Link className=\"topbar__collapse-link\" to=\"/mail\" onClick={this.toggle}>\n            See all messages\n          </Link>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Collapse } from 'reactstrap';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport PropTypes from 'prop-types';\n\nconst gb = `${process.env.PUBLIC_URL}/img/language/gb.png`;\nconst fr = `${process.env.PUBLIC_URL}/img/language/fr.png`;\nconst de = `${process.env.PUBLIC_URL}/img/language/de.png`;\n\nconst GbLng = () => (\n  <span className=\"topbar__language-btn-title\">\n    <img src={gb} alt=\"gb\" />\n    <span>EN</span>\n  </span>\n);\n\nconst FrLng = () => (\n  <span className=\"topbar__language-btn-title\">\n    <img src={fr} alt=\"fr\" />\n    <span>FR</span>\n  </span>\n);\n\nconst DeLng = () => (\n  <span className=\"topbar__language-btn-title\">\n    <img src={de} alt=\"de\" />\n    <span>DE</span>\n  </span>\n);\n\nclass TopbarLanguage extends PureComponent {\n  static propTypes = {\n    i18n: PropTypes.shape({ changeLanguage: PropTypes.func }).isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      collapse: false,\n      mainButtonContent: <GbLng />,\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  changeLanguage = (lng) => {\n    const { i18n } = this.props;\n    i18n.changeLanguage(lng);\n    switch (lng) {\n      case 'en':\n        this.setState({ mainButtonContent: <GbLng /> });\n        break;\n      case 'fr':\n        this.setState({ mainButtonContent: <FrLng /> });\n        break;\n      case 'de':\n        this.setState({ mainButtonContent: <DeLng /> });\n        break;\n      default:\n        this.setState({ mainButtonContent: <GbLng /> });\n        break;\n    }\n  };\n\n  render() {\n    const { mainButtonContent, collapse } = this.state;\n\n    return (\n      <div className=\"topbar__collapse topbar__collapse--language\">\n        <button className=\"topbar__btn\" type=\"button\" onClick={this.toggle}>\n          {mainButtonContent}\n          <DownIcon className=\"topbar__icon\" />\n        </button>\n        {collapse && <button className=\"topbar__back\" type=\"button\" onClick={this.toggle} />}\n        <Collapse\n          isOpen={collapse}\n          className=\"topbar__collapse-content topbar__collapse-content--language\"\n        >\n          <button\n            className=\"topbar__language-btn\"\n            type=\"button\"\n            onClick={() => this.changeLanguage('en')}\n          >\n            <GbLng />\n          </button>\n          <button\n            className=\"topbar__language-btn\"\n            type=\"button\"\n            onClick={() => this.changeLanguage('fr')}\n          >\n            <FrLng />\n          </button>\n          <button\n            className=\"topbar__language-btn\"\n            type=\"button\"\n            onClick={() => this.changeLanguage('de')}\n          >\n            <DeLng />\n          </button>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('common')(TopbarLanguage);\n","/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Collapse } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport NotificationsIcon from 'mdi-react/NotificationsIcon';\n\nconst notifications = [\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava.png`,\n    name: 'Cristopher Changer',\n    message: ' has started a new project',\n    date: '09:02',\n  },\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava2.png`,\n    name: 'Sveta Narry',\n    message: ' has closed a project',\n    date: '09:00',\n  },\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava3.png`,\n    name: 'Lory McQueen',\n    message: ' has started a new project as a Project Managert',\n    date: '08:43',\n  },\n  {\n    ava: `${process.env.PUBLIC_URL}/img/topbar/ava2.png`,\n    name: 'Cristopher Changer',\n    message: ' has closed a project',\n    date: '08:43',\n  },\n];\n\nexport default class TopbarNotification extends PureComponent {\n  state = {\n    collapse: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  render() {\n    const { collapse } = this.state;\n    return (\n      <div className=\"topbar__collapse\">\n        <button className=\"topbar__btn\" type=\"button\" onClick={this.toggle}>\n          <NotificationsIcon />\n        </button>\n        {collapse && <button className=\"topbar__back\" type=\"button\" onClick={this.toggle} />}\n        <Collapse\n          isOpen={collapse}\n          className=\"topbar__collapse-content\"\n        >\n          <div className=\"topbar__collapse-title-wrap\">\n            <p className=\"topbar__collapse-title\">Notifications</p>\n            <button className=\"topbar__collapse-button\" type=\"button\">Mark all as read</button>\n          </div>\n          {notifications.map((notification, index) => (\n            <div className=\"topbar__collapse-item\" key={index}>\n              <div className=\"topbar__collapse-img-wrap\">\n                <img className=\"topbar__collapse-img\" src={notification.ava} alt=\"\" />\n              </div>\n              <p className=\"topbar__collapse-message\">\n                <span className=\"topbar__collapse-name\">{notification.name}</span>\n                {notification.message}\n              </p>\n              <p className=\"topbar__collapse-date\">{notification.date}</p>\n            </div>\n          ))}\n          <Link className=\"topbar__collapse-link\" to=\"/dashboard_default\" onClick={this.toggle}>\n            See all notifications\n          </Link>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Badge } from 'reactstrap';\n\nconst TopbarNavLink = ({\n  title, icon, newLink, route,\n}) => (\n  <Link className=\"topbar__link\" to={route}>\n    {icon ? <span className={`topbar__link-icon lnr lnr-${icon}`} /> : ''}\n    <p className=\"topbar__link-title\">\n      {title}\n      {newLink ? <Badge className=\"topbar__link-badge\"><span>New</span></Badge> : ''}\n    </p>\n  </Link>\n);\n\n\nTopbarNavLink.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  newLink: PropTypes.bool,\n  route: PropTypes.string.isRequired,\n};\n\nTopbarNavLink.defaultProps = {\n  icon: '',\n  newLink: false,\n};\n\nexport default TopbarNavLink;\n","import React from 'react';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport {\n  DropdownItem, DropdownToggle, DropdownMenu, UncontrolledDropdown,\n} from 'reactstrap';\nimport TopbarNavLink from './TopbarNavLink';\n\nconst TopbarNavDashboards = () => (\n  <UncontrolledDropdown className=\"topbar__nav-dropdown\">\n    <DropdownToggle className=\"topbar__nav-dropdown-toggle\">\n      Dashboards <DownIcon />\n    </DropdownToggle>\n    <DropdownMenu className=\"topbar__nav-dropdown-menu dropdown__menu\">\n      <DropdownItem>\n        <TopbarNavLink title=\"Dashboard Default\" icon=\"home\" route=\"/dashboard_default\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Dashboard E-commerce\" icon=\"store\" route=\"/dashboard_e_commerce\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Dashboard Fitness\" icon=\"heart-pulse\" route=\"/dashboard_fitness\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Dashboard Crypto\" icon=\"rocket\" route=\"/dashboard_crypto\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Dashboard Booking\" icon=\"apartment\" newLink route=\"/dashboard_booking\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Dashboard MobileApp\" icon=\"smartphone\" newLink route=\"/dashboard_mobile_app\" />\n      </DropdownItem>\n    </DropdownMenu>\n  </UncontrolledDropdown>\n);\n\n\nexport default TopbarNavDashboards;\n","import React from 'react';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport {\n  DropdownItem, DropdownToggle, DropdownMenu, UncontrolledDropdown,\n} from 'reactstrap';\nimport TopbarNavLink from './TopbarNavLink';\n\nconst TopbarNavUIElements = () => (\n  <UncontrolledDropdown className=\"topbar__nav-dropdown\">\n    <DropdownToggle className=\"topbar__nav-dropdown-toggle\">\n      UI elements<DownIcon />\n    </DropdownToggle>\n    <DropdownMenu className=\"topbar__nav-dropdown-menu dropdown__menu\">\n      <DropdownItem>\n        <TopbarNavLink title=\"Alerts\" route=\"/ui/alerts\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Buttons\" route=\"/ui/buttons\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Carousel\" route=\"/ui/carousel\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Collapse\" route=\"/ui/collapse\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Grids\" route=\"/ui/grids\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Modals\" route=\"/ui/modals\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Notifications\" route=\"/ui/notifications\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Panels\" route=\"/ui/panels\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Progress Bars\" route=\"/ui/progress_bars\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Range Sliders\" route=\"/ui/range_sliders\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Tabs\" route=\"/ui/tabs\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Timeline\" route=\"/ui/timeline\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Tooltips & Popovers\" route=\"/ui/tooltips\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Typography\" route=\"/ui/typography\" />\n      </DropdownItem>\n    </DropdownMenu>\n  </UncontrolledDropdown>\n);\n\nexport default TopbarNavUIElements;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TopbarNavCategory = ({ title, icon, children }) => (\n  <div className=\"topbar__category-wrap\">\n    <div className=\"topbar__link topbar__category\">\n      {icon ? <span className={`topbar__link-icon lnr lnr-${icon}`} /> : ''}\n      <p className=\"topbar__link-title\">\n        {title}\n        <span className=\"topbar__category-icon lnr lnr-chevron-right\" />\n      </p>\n    </div>\n    <div className=\"topbar__submenu\">\n      {children}\n    </div>\n  </div>\n);\n\nTopbarNavCategory.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nexport default TopbarNavCategory;\n","import React from 'react';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport {\n  DropdownItem, DropdownToggle, DropdownMenu, UncontrolledDropdown,\n} from 'reactstrap';\nimport TopbarNavLink from './TopbarNavLink';\nimport TopbarNavCategory from './TopbarNavCategory';\n\nconst TopbarNavOtherPages = () => (\n  <UncontrolledDropdown className=\"topbar__nav-dropdown\">\n    <DropdownToggle className=\"topbar__nav-dropdown-toggle\">\n      Other pages <DownIcon />\n    </DropdownToggle>\n    <DropdownMenu className=\"topbar__nav-dropdown-menu dropdown__menu\">\n      <DropdownItem>\n        <TopbarNavLink title=\"Mail Application\" icon=\"envelope\" route=\"/mail\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Chat Application\" icon=\"bubble\" route=\"/chat\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Todo Application\" icon=\"book\" route=\"/todo\" />\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavCategory title=\"Forms\" icon=\"file-add\">\n          <TopbarNavLink title=\"Basic Form\" route=\"/forms/basic_form\" />\n          <TopbarNavLink title=\"Check Form Controls\" route=\"/forms/check_form_controls\" />\n          <TopbarNavLink title=\"File Upload\" route=\"/forms/file_upload\" />\n          <TopbarNavLink title=\"Floating Labels Form\" route=\"/forms/floating_labels_form\" />\n          <TopbarNavLink title=\"Form Dropzone\" route=\"/forms/form_dropzone\" />\n          <TopbarNavLink title=\"Form Layouts\" route=\"/forms/form_layouts\" />\n          <TopbarNavLink title=\"Form Picker\" route=\"/forms/form_picker\" />\n          <TopbarNavLink title=\"Form Validation\" route=\"/forms/form_validation\" />\n          <TopbarNavLink title=\"Mask Form\" route=\"/forms/mask_form\" />\n          <TopbarNavLink title=\"Material Form\" route=\"/forms/material_form\" />\n          <TopbarNavLink title=\"Wizard Form\" route=\"/forms/wizard_form\" />\n        </TopbarNavCategory>\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavCategory title=\"Tables\" icon=\"list\">\n          <TopbarNavLink title=\"Basic tables\" route=\"/tables/basic_tables\" />\n          <TopbarNavLink title=\"Data table\" route=\"/tables/data_table\" />\n          <TopbarNavLink title=\"Editable table\" route=\"/tables/editable_table\" />\n          <TopbarNavLink title=\"Material table\" route=\"/tables/material_table\" />\n        </TopbarNavCategory>\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavCategory title=\"Charts\" icon=\"chart-bars\">\n          <TopbarNavLink title=\"ChartsJS\" route=\"/charts/charts_js\" />\n          <TopbarNavLink title=\"React-vis\" route=\"/charts/react_vis\" />\n          <TopbarNavLink title=\"Recharts\" route=\"/charts/recharts\" />\n        </TopbarNavCategory>\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavCategory title=\"Maps\" icon=\"map\">\n          <TopbarNavLink title=\"Google map\" route=\"/maps/google_map\" />\n          <TopbarNavLink title=\"Vector map\" route=\"/maps/vector_map\" />\n        </TopbarNavCategory>\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavCategory title=\"Account\" icon=\"user\">\n          <TopbarNavLink title=\"Email Confirmation\" route=\"/account/email_confirmation\" />\n          <TopbarNavLink title=\"Lock Screen\" route=\"/lock_screen\" />\n          <TopbarNavLink title=\"Log In\" route=\"/log_in\" />\n          <TopbarNavLink title=\"Log In Photo\" route=\"/log_in_photo\" />\n          <TopbarNavLink title=\"Profile\" route=\"/account/profile\" />\n          <TopbarNavLink title=\"Register\" route=\"/register\" />\n          <TopbarNavLink title=\"Register Photo\" route=\"/register_photo\" />\n          <TopbarNavLink title=\"Reset Password\" route=\"/reset_password\" />\n          <TopbarNavLink title=\"Reset Password Photo\" route=\"/reset_password_photo\" />\n        </TopbarNavCategory>\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavCategory title=\"E-commerce\" icon=\"cart\">\n          <TopbarNavLink title=\"Cart\" route=\"/e-commerce/cart\" />\n          <TopbarNavLink title=\"Catalog\" route=\"/e-commerce/catalog\" />\n          <TopbarNavLink title=\"Orders List\" route=\"/e-commerce/orders_list\" />\n          <TopbarNavLink title=\"Payment\" route=\"/e-commerce/payment\" />\n          <TopbarNavLink title=\"Product Edit\" route=\"/e-commerce/product_edit\" />\n          <TopbarNavLink title=\"Product Page\" route=\"/e-commerce/product_page\" />\n          <TopbarNavLink title=\"Products List\" route=\"/e-commerce/products_list\" />\n        </TopbarNavCategory>\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavCategory title=\"Default Pages\" icon=\"file-empty\">\n          <TopbarNavLink title=\"404\" route=\"/404\" />\n          <TopbarNavLink title=\"Calendar\" route=\"/default_pages/calendar\" />\n          <TopbarNavLink title=\"FAQs\" route=\"/default_pages/faq\" />\n          <TopbarNavLink title=\"Gallery\" route=\"/default_pages/gallery\" />\n          <TopbarNavLink title=\"Invoice template\" route=\"/default_pages/invoice_template\" />\n          <TopbarNavLink title=\"Pricing Cards\" route=\"/default_pages/pricing_cards\" />\n          <TopbarNavLink title=\"Project Summary\" route=\"/default_pages/project_summary\" />\n          <TopbarNavLink title=\"Search Results\" route=\"/default_pages/search_results\" />\n          <TopbarNavLink title=\"Text Editor\" route=\"/default_pages/text_editor\" />\n        </TopbarNavCategory>\n      </DropdownItem>\n      <DropdownItem>\n        <TopbarNavLink title=\"Log Out\" icon=\"exit\" route=\"/log_in\" />\n      </DropdownItem>\n    </DropdownMenu>\n  </UncontrolledDropdown>\n);\n\nexport default TopbarNavOtherPages;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TopbarNavDashboards from './TopbarNavDashboards';\nimport TopbarNavUIElements from './TopbarNavUIElements';\nimport TopbarNavOtherPages from './TopbarNavOtherPages';\n\nconst TopbarNav = () => (\n  <nav className=\"topbar__nav\">\n    <TopbarNavDashboards />\n    <TopbarNavUIElements />\n    <TopbarNavOtherPages />\n    <Link className=\"topbar__nav-link\" to=\"/documentation/introduction\">Documentation</Link>\n  </nav>\n);\n\nexport default TopbarNav;\n","import React, { PureComponent } from 'react';\nimport SearchIcon from 'mdi-react/SearchIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport classNames from 'classnames';\n\nexport default class TopbarSearch extends PureComponent {\n  constructor() {\n    super();\n    this.state = { inputOpen: false };\n  }\n\n  onInputOpen = (e) => {\n    e.preventDefault();\n    this.setState(prevState => ({ inputOpen: !prevState.inputOpen }));\n  };\n\n  render() {\n    const { inputOpen } = this.state;\n\n    const searchClass = classNames({\n      'topbar__search-field': true,\n      'topbar__search-field--open': inputOpen,\n    });\n\n    return (\n      <form className=\"topbar__search\">\n        <input placeholder=\"Search...\" className={searchClass} />\n        <button className=\"topbar__btn topbar__search-btn\" type=\"button\" onClick={this.onInputOpen}>\n          {inputOpen ? <CloseIcon /> : <SearchIcon />}\n        </button>\n        {inputOpen && <button className=\"topbar__back\" type=\"button\" onClick={this.onInputOpen} />}\n      </form>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TopbarSidebarButton from './TopbarSidebarButton';\nimport TopbarProfile from './TopbarProfile';\nimport TopbarMail from './TopbarMail';\nimport TopbarLanguage from './TopbarLanguage';\nimport TopbarNotification from './TopbarNotification';\nimport TopbarNav from './tobar_nav/TopbarNav';\nimport TopbarSearch from './TopbarSearch';\n\nexport default class TopbarWithNavigation extends PureComponent {\n  static propTypes = {\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { changeMobileSidebarVisibility } = this.props;\n\n    return (\n      <div className=\"topbar topbar--navigation\">\n        <div className=\"topbar__wrapper\">\n          <div className=\"topbar__left\">\n            <TopbarSidebarButton changeMobileSidebarVisibility={changeMobileSidebarVisibility} />\n            <Link className=\"topbar__logo\" to=\"/dashboard_default\" />\n          </div>\n          <TopbarNav />\n          <div className=\"topbar__right\">\n            <TopbarSearch />\n            <TopbarNotification />\n            <TopbarMail new />\n            <TopbarProfile />\n            <TopbarLanguage />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nconst SidebarLink = ({\n  title, icon, newLink, route, onClick,\n}) => (\n  <NavLink\n    to={route}\n    onClick={onClick}\n    activeClassName=\"sidebar__link-active\"\n  >\n    <li className=\"sidebar__link\">\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\n      <p className=\"sidebar__link-title\">\n        {title}\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>New</span></Badge> : ''}\n      </p>\n    </li>\n  </NavLink>\n);\n\nSidebarLink.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  newLink: PropTypes.bool,\n  route: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nSidebarLink.defaultProps = {\n  icon: '',\n  newLink: false,\n  route: '/',\n  onClick: () => {},\n};\n\nexport default SidebarLink;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse } from 'reactstrap';\nimport classNames from 'classnames';\n\nconst SidebarCategory = ({\n  title, icon, isNew, children, sidebarCollapse,\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const categoryClass = classNames({\n    'sidebar__category-wrap': true,\n    'sidebar__category-wrap--open': isCollapsed,\n    'sidebar__link sidebar__category': true,\n  });\n\n  const collapseSidebar = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  return (\n    <div className={sidebarCollapse ? 'sidebar-collapse-wrapper' : ''}>\n      <button className={categoryClass} type=\"button\" onClick={collapseSidebar}>\n\n        {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} style={{ color: \"black\" }} /> : ''}\n        <p className=\"sidebar__link-title\" >{title}\n          {isNew && <span className=\"sidebar__category-new\" />}\n        </p>        <span className=\"sidebar__category-icon lnr lnr-chevron-right\" />\n      </button>\n      <Collapse isOpen={sidebarCollapse || isCollapsed} className=\"sidebar__submenu-wrap\">\n        <ul className=\"sidebar__submenu\">\n          <div>\n            {children}\n          </div>\n        </ul>\n      </Collapse>\n    </div>\n  );\n};\n\nSidebarCategory.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  isNew: PropTypes.bool,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  sidebarCollapse: PropTypes.bool.isRequired,\n};\n\nSidebarCategory.defaultProps = {\n  icon: '',\n  isNew: false,\n};\n\nexport default SidebarCategory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SidebarLink from './SidebarLink';\nimport SidebarCategory from './SidebarCategory';\n// import { USER } from '../../../configs/exports';\n\nconst SidebarContent = ({\n  onClick, changeToLight, changeToDark, sidebarCollapse,\n}) => {\n  const hideSidebar = () => {\n    onClick();\n  };\n\n  return (\n    <div className=\"sidebar__content\">\n\n      <ul className=\"sidebar__block\">\n\n        <SidebarLink\n          title=\"Search Customer\"\n          icon=\"user\"\n          route=\"/find_customer\"\n          onClick={hideSidebar}\n        />\n\n        <SidebarLink\n          title=\"Customers\"\n          icon=\"user\"\n          route=\"/customers\"\n          onClick={hideSidebar}\n        />\n\n      </ul>\n      <ul className=\"sidebar__block\">\n        <SidebarCategory title=\"Settings\" icon=\"cog\" sidebarCollapse={sidebarCollapse}>\n\n          <SidebarLink\n            title=\"Countries\"\n            route=\"/countries\"\n            onClick={hideSidebar}\n          />\n          <SidebarLink\n            title=\"Roles\"\n            route=\"/roles\"\n            onClick={hideSidebar}\n          />\n          <SidebarLink\n            title=\"Branches\"\n            route=\"/branches\"\n            onClick={hideSidebar}\n          />\n          <SidebarLink\n            title=\"Staffs\"\n            route=\"/staffs\"\n            onClick={hideSidebar}\n          />\n\n        </SidebarCategory>\n\n      </ul>\n      <ul className=\"sidebar__block\">\n        <SidebarLink\n          title=\"Loans\"\n          icon=\"briefcase\"\n          route=\"/loans\"\n          onClick={hideSidebar}\n        />\n      </ul>\n\n      <ul className=\"sidebar__block\">\n        <SidebarCategory title=\"Report\" icon=\"briefcase\" sidebarCollapse={sidebarCollapse}>\n          <SidebarLink\n            title=\"Widrawal Requests\"\n            route=\"/withdrawals\"\n            onClick={hideSidebar}\n          />\n          <SidebarLink\n            title=\"Deposits\"\n            route=\"/deposits\"\n            onClick={hideSidebar}\n          />\n          <SidebarLink\n            title=\"Suspend Account\"\n            route=\"/suspend_account\"\n            onClick={hideSidebar}\n          />\n        </SidebarCategory>\n      </ul>\n      <ul className=\"sidebar__block\">\n        <SidebarLink\n          title=\"Messages\"\n          icon=\"bubble\"\n          route=\"/messages\"\n          onClick={hideSidebar}\n        />\n      </ul>\n      <ul className=\"sidebar__block\">\n        <SidebarLink title=\"Log Out\" icon=\"exit\" route=\"/log_in\" />\n      </ul>\n    </div>\n  );\n};\n\nSidebarContent.propTypes = {\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  sidebarCollapse: PropTypes.bool,\n};\n\nSidebarContent.defaultProps = {\n  sidebarCollapse: false,\n};\n\nexport default SidebarContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Scrollbar from 'react-smooth-scrollbar';\nimport classNames from 'classnames';\nimport { SidebarProps } from '../../../shared/prop-types/ReducerProps';\nimport SidebarContent from './SidebarContent';\n\nconst Sidebar = ({\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\n}) => {\n  const sidebarClass = classNames({\n    sidebar: true,\n    'sidebar--show': sidebar.show,\n    'sidebar--collapse': sidebar.collapse,\n  });\n\n  return (\n    <div className={sidebarClass}>\n      <button\n        className=\"sidebar__back\"\n        type=\"button\"\n        aria-label=\"change mobile sidebar visibility button\"\n        onClick={changeMobileSidebarVisibility}\n      />\n      <Scrollbar className=\"sidebar__scroll scroll\">\n        <div className=\"sidebar__wrapper sidebar__wrapper--desktop\">\n          <SidebarContent\n            onClick={() => {}}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n            sidebarCollapse={sidebar.collapse}\n          />\n        </div>\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\n          <SidebarContent\n            onClick={changeMobileSidebarVisibility}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n          />\n        </div>\n      </Scrollbar>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nconst SidebarLink = ({\n  title, icon, newLink, route, onClick,\n}) => (\n  <NavLink\n    to={route}\n    onClick={onClick}\n    activeClassName=\"sidebar__link-active\"\n  >\n    <li className=\"sidebar__link\">\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\n      <p className=\"sidebar__link-title\">\n        {title}\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>New</span></Badge> : ''}\n      </p>\n    </li>\n  </NavLink>\n);\n\nSidebarLink.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  newLink: PropTypes.bool,\n  route: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nSidebarLink.defaultProps = {\n  icon: '',\n  newLink: false,\n  route: '/',\n  onClick: () => {},\n};\n\nexport default SidebarLink;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Collapse } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { RTLProps } from '../../../../shared/prop-types/ReducerProps';\n\nclass SidebarCategory extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string,\n    rtl: RTLProps.isRequired,\n    isNew: PropTypes.bool,\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  };\n\n  static defaultProps = {\n    icon: '',\n    isNew: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggle = () => {\n    const { collapse } = this.state;\n    this.setState({ collapse: !collapse });\n  };\n\n  render() {\n    const {\n      title, icon, isNew, children, rtl,\n    } = this.props;\n    const { collapse } = this.state;\n    const categoryClass = classNames({\n      'sidebar__category-wrap': true,\n      'sidebar__category-wrap--open': collapse,\n    });\n\n    return (\n      <div className={categoryClass}>\n        <button className=\"sidebar__link sidebar__category\" type=\"button\" onClick={this.toggle}>\n          {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\n          <p className=\"sidebar__link-title\">{title}\n            {isNew && <span className=\"sidebar__category-new\" />}\n          </p>\n          <span className={`sidebar__category-icon lnr lnr-chevron-${rtl.direction === 'rtl' ? 'left' : 'right'}`} />\n        </button>\n        <Collapse isOpen={collapse} className=\"sidebar__submenu-wrap\">\n          <ul className=\"sidebar__submenu\">\n            <div>\n              {children}\n            </div>\n          </ul>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({\n  rtl: state.rtl,\n}))(SidebarCategory);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SidebarLink from './SidebarLink';\nimport SidebarCategory from './SidebarCategory';\n\nclass SidebarContent extends Component {\n  static propTypes = {\n    changeToDark: PropTypes.func.isRequired,\n    changeToLight: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  hideSidebar = () => {\n    const { onClick } = this.props;\n    onClick();\n  };\n\n  render() {\n    const { changeToLight, changeToDark } = this.props;\n\n    return (\n      <div className=\"sidebar__content\">\n        <ul className=\"sidebar__block\">\n          <SidebarLink title=\"Dashboard Default\" icon=\"home\" route=\"/dashboard_default\" onClick={this.hideSidebar} />\n          <SidebarLink\n            title=\"Dashboard E-commerce\"\n            icon=\"store\"\n            route=\"/dashboard_e_commerce\"\n            onClick={this.hideSidebar}\n          />\n          <SidebarLink\n            title=\"Dashboard Fitness\"\n            icon=\"heart-pulse\"\n            newLink\n            route=\"/dashboard_fitness\"\n            onClick={this.hideSidebar}\n          />\n          <SidebarLink\n            title=\"Dashboard Crypto\"\n            icon=\"rocket\"\n            newLink\n            route=\"/dashboard_crypto\"\n            onClick={this.hideSidebar}\n          />\n          <SidebarLink\n            title=\"Dashboard Booking\"\n            icon=\"rocket\"\n            newLink\n            route=\"/dashboard_booking\"\n            onClick={this.hideSidebar}\n          />\n          <SidebarCategory title=\"Layout\" icon=\"layers\">\n            <button className=\"sidebar__link\" type=\"button\" onClick={changeToLight}>\n              <p className=\"sidebar__link-title\">Light Theme</p>\n            </button>\n            <button className=\"sidebar__link\" type=\"button\" onClick={changeToDark}>\n              <p className=\"sidebar__link-title\">Dark Theme</p>\n            </button>\n          </SidebarCategory>\n        </ul>\n        <ul className=\"sidebar__block\">\n          <SidebarCategory title=\"UI Elements\" icon=\"diamond\">\n            <SidebarLink title=\"Alerts\" route=\"/ui/alerts\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Buttons\" route=\"/ui/buttons\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Carousel\" route=\"/ui/carousel\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Collapse\" route=\"/ui/collapse\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Grids\" route=\"/ui/grids\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Modals\" route=\"/ui/modals\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Notifications\" route=\"/ui/notifications\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Panels\" route=\"/ui/panels\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Progress Bars\" route=\"/ui/progress_bars\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Range Sliders\" route=\"/ui/range_sliders\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Tabs\" route=\"/ui/tabs\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Timeline\" route=\"/ui/timeline\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Tooltips & Popovers\" route=\"/ui/tooltips\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Typography\" route=\"/ui/typography\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarLink title=\"Mail Application\" icon=\"envelope\" route=\"/mail\" onClick={this.hideSidebar} />\n          <SidebarLink title=\"Chat Application\" icon=\"bubble\" route=\"/chat\" onClick={this.hideSidebar} />\n          <SidebarLink title=\"Todo Application\" icon=\"book\" route=\"/todo\" onClick={this.hideSidebar} />\n          <SidebarCategory title=\"Forms\" icon=\"file-add\">\n            <SidebarLink title=\"Basic Form\" route=\"/forms/basic_form\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Check Form Controls\" route=\"/forms/check_form_controls\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"File Upload\" route=\"/forms/file_upload\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Floating Labels Form\" route=\"/forms/floating_labels_form\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Form Dropzone\" route=\"/forms/form_dropzone\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Form Layouts\" route=\"/forms/form_layouts\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Form Picker\" route=\"/forms/form_picker\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Form Validation\" route=\"/forms/form_validation\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Mask Form\" route=\"/forms/mask_form\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Material Form\" route=\"/forms/material_form\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Wizard Form\" route=\"/forms/wizard_form\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarCategory title=\"Tables\" icon=\"list\" isNew>\n            <SidebarLink title=\"Basic tables\" route=\"/tables/basic_tables\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Data table\" route=\"/tables/data_table\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Editable table\" route=\"/tables/editable_table\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Material table\" newLink route=\"/tables/material_table\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarCategory title=\"Charts\" icon=\"chart-bars\">\n            <SidebarLink title=\"ChartsJS\" route=\"/charts/charts_js\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"React-vis\" route=\"/charts/react_vis\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Recharts\" route=\"/charts/recharts\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarCategory title=\"Maps\" icon=\"map\">\n            <SidebarLink title=\"Google map\" route=\"/maps/google_map\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Vector map\" route=\"/maps/vector_map\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n        </ul>\n        <ul className=\"sidebar__block\">\n          <SidebarCategory title=\"Account\" icon=\"user\">\n            <SidebarLink title=\"Email Confirmation\" route=\"/account/email_confirmation\" />\n            <SidebarLink title=\"Lock Screen\" route=\"/lock_screen\" />\n            <SidebarLink title=\"Log In\" route=\"/log_in\" />\n            <SidebarLink title=\"Log In Photo\" route=\"/log_in_photo\" />\n            <SidebarLink title=\"Profile\" route=\"/account/profile\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Register\" route=\"/register\" />\n            <SidebarLink title=\"Register Photo\" route=\"/register_photo\" />\n            <SidebarLink title=\"Reset Password\" route=\"/reset_password\" />\n            <SidebarLink title=\"Reset Password Photo\" route=\"/reset_password_photo\" />\n          </SidebarCategory>\n          <SidebarCategory title=\"E-commerce\" icon=\"cart\">\n            <SidebarLink title=\"Cart\" route=\"/e-commerce/cart\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Catalog\" route=\"/e-commerce/catalog\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Orders List\" route=\"/e-commerce/orders_list\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Payment\" route=\"/e-commerce/payment\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Product Edit\" route=\"/e-commerce/product_edit\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Product Page\" route=\"/e-commerce/product_page\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Products List\" route=\"/e-commerce/products_list\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarCategory title=\"Default Pages\" icon=\"file-empty\">\n            <SidebarLink title=\"404\" route=\"/404\" />\n            <SidebarLink title=\"Calendar\" route=\"/default_pages/calendar\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"FAQs\" route=\"/default_pages/faq\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Gallery\" route=\"/default_pages/gallery\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Invoice template\" route=\"/default_pages/invoice_template\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Pricing Cards\" route=\"/default_pages/pricing_cards\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Project Summary\" route=\"/default_pages/project_summary\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Search Results\" route=\"/default_pages/search_results\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Text Editor\" route=\"/default_pages/text_editor\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarCategory title=\"Multilevel Menu \" icon=\"menu\">\n            <SidebarLink title=\"Second Level Item\" />\n            <SidebarCategory title=\"Second Level Item\">\n              <SidebarLink title=\"Third Level Item\" />\n              <SidebarLink title=\"Third Level Item\" />\n            </SidebarCategory>\n          </SidebarCategory>\n        </ul>\n        <ul className=\"sidebar__block\">\n          <SidebarLink title=\"Log Out\" icon=\"exit\" route=\"/log_in\" />\n        </ul>\n        <ul className=\"sidebar__block\">\n          <SidebarLink\n            title=\"Documentation\"\n            icon=\"text-align-justify\"\n            route=\"/documentation/introduction\"\n            onClick={this.hideSidebar}\n          />\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SidebarContent;\n","import React from 'react';\nimport Scrollbar from 'react-smooth-scrollbar';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport SidebarContent from './SidebarContent';\nimport { SidebarProps } from '../../../../shared/prop-types/ReducerProps';\n\nconst Sidebar = ({\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\n}) => {\n  const sidebarClass = classNames({\n    'sidebar sidebar--no-desktop': true,\n    'sidebar--show': sidebar.show,\n  });\n\n  return (\n    <div className={sidebarClass}>\n      <button className=\"sidebar__back\" type=\"button\" onClick={changeMobileSidebarVisibility} />\n      <Scrollbar className=\"sidebar__scroll scroll\">\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\n          <SidebarContent\n            onClick={changeMobileSidebarVisibility}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n          />\n        </div>\n      </Scrollbar>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n};\n\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProps } from '../../../shared/prop-types/ReducerProps';\n\nconst ToggleTheme = ({ theme, changeToLight, changeToDark }) => (\n  <label className=\"toggle-btn customizer__toggle\" htmlFor=\"theme_toggle\">\n    <input\n      className=\"toggle-btn__input\"\n      type=\"checkbox\"\n      name=\"theme_toggle\"\n      id=\"theme_toggle\"\n      checked={theme.className === 'theme-dark'}\n      onChange={theme.className === 'theme-dark' ? changeToLight : changeToDark}\n    />\n    <span className=\"toggle-btn__input-label\" />\n    <span>Dark Theme</span>\n  </label>\n);\n\nToggleTheme.propTypes = {\n  theme: ThemeProps.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n};\n\nexport default ToggleTheme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SidebarProps } from '../../../shared/prop-types/ReducerProps';\n\nconst ToggleCollapsedMenu = ({ changeSidebarVisibility, sidebar }) => (\n  <label className=\"toggle-btn customizer__toggle\" htmlFor=\"collapse_toggle\">\n    <input\n      className=\"toggle-btn__input\"\n      type=\"checkbox\"\n      name=\"collapse_toggle\"\n      id=\"collapse_toggle\"\n      checked={sidebar.collapse}\n      onChange={changeSidebarVisibility}\n    />\n    <span className=\"toggle-btn__input-label\" />\n    <span>Collapsed Menu</span>\n  </label>\n);\n\nToggleCollapsedMenu.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n};\n\nexport default ToggleCollapsedMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RoundBordersProps } from '../../../shared/prop-types/ReducerProps';\n\nconst ToggleRoundBorders = ({ roundBorders, changeRoundBordersOn, changeRoundBordersOff }) => (\n  <label className=\"toggle-btn customizer__toggle\" htmlFor=\"square_toggle\">\n    <input\n      className=\"toggle-btn__input\"\n      type=\"checkbox\"\n      name=\"square_toggle\"\n      id=\"square_toggle\"\n      // // checked={roundBorders.className === 'round-borders-on'}\n      // // onChange={roundBorders.className === 'round-borders-on'\n      //   ? changeRoundBordersOff : changeRoundBordersOn}\n    />\n    <span className=\"toggle-btn__input-label\" />\n    <span>Round Borders</span>\n  </label>\n);\n\nToggleRoundBorders.propTypes = {\n  roundBorders: RoundBordersProps.isRequired,\n  changeRoundBordersOn: PropTypes.func.isRequired,\n  changeRoundBordersOff: PropTypes.func.isRequired,\n};\n\nexport default ToggleRoundBorders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BlocksShadowsProps } from '../../../shared/prop-types/ReducerProps';\n\nconst ToggleShadow = ({ blocksShadows, changeBlocksShadowsOn, changeBlocksShadowsOff }) => (\n  <label className=\"toggle-btn customizer__toggle\" htmlFor=\"shadow_toggle\">\n    <input\n      className=\"toggle-btn__input\"\n      type=\"checkbox\"\n      name=\"shadow_toggle\"\n      id=\"shadow_toggle\"\n      // checked={blocksShadows.className === 'blocks-shadows-on'}\n      // onChange={blocksShadows.className === 'blocks-shadows-on'\n      //   ? changeBlocksShadowsOff : changeBlocksShadowsOn}\n    />\n    <span className=\"toggle-btn__input-label\" />\n    <span>{'Block\\'s Shadows'}</span>\n  </label>\n);\n\nToggleShadow.propTypes = {\n  blocksShadows: BlocksShadowsProps.isRequired,\n  changeBlocksShadowsOn: PropTypes.func.isRequired,\n  changeBlocksShadowsOff: PropTypes.func.isRequired,\n};\n\nexport default ToggleShadow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomizerProps } from '../../../shared/prop-types/ReducerProps';\n\nconst ToggleTopMenu = ({ toggleTopNavigation, customizer }) => (\n  <label className=\"toggle-btn customizer__toggle\" htmlFor=\"top_menu_toggle\">\n    <input\n      className=\"toggle-btn__input\"\n      type=\"checkbox\"\n      name=\"top_menu_toggle\"\n      id=\"top_menu_toggle\"\n      checked={customizer.topNavigation}\n      onChange={toggleTopNavigation}\n    />\n    <span className=\"toggle-btn__input-label\" />\n    <span>Top Menu</span>\n  </label>\n);\n\nToggleTopMenu.propTypes = {\n  customizer: CustomizerProps.isRequired,\n  toggleTopNavigation: PropTypes.func.isRequired,\n};\n\nexport default ToggleTopMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RTLProps } from '../../../shared/prop-types/ReducerProps';\n\nconst ToggleRTL = ({ rtl, changeToLTR, changeToRTL }) => (\n  <label className=\"toggle-btn customizer__toggle\" htmlFor=\"direction_toggle\">\n    <input\n      className=\"toggle-btn__input\"\n      type=\"checkbox\"\n      name=\"direction_toggle\"\n      id=\"direction_toggle\"\n      checked={rtl.direction === 'rtl'}\n      onChange={rtl.direction === 'rtl' ? changeToLTR : changeToRTL}\n    />\n    <span className=\"toggle-btn__input-label\" />\n    <span>RTL mode</span>\n  </label>\n);\n\nToggleRTL.propTypes = {\n  rtl: RTLProps.isRequired,\n  changeToRTL: PropTypes.func.isRequired,\n  changeToLTR: PropTypes.func.isRequired,\n};\n\nexport default ToggleRTL;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport {\n  CustomizerProps,\n  SidebarProps,\n  ThemeProps,\n  RTLProps,\n  RoundBordersProps,\n  BlocksShadowsProps,\n} from '../../../shared/prop-types/ReducerProps';\nimport ToggleTheme from './ToggleTheme';\nimport ToggleCollapsedMenu from './ToggleCollapsedMenu';\nimport ToggleRoundBorders from './ToggleRoundBorders';\nimport ToggleShadow from './ToggleShadow';\nimport ToggleTopMenu from './ToggleTopMenu';\nimport ToggleRTL from './ToggleRTL';\n\nconst settings = `${process.env.PUBLIC_URL}/img/settings.svg`;\n\nconst Customizer = ({\n  changeSidebarVisibility,\n  sidebar,\n  customizer,\n  theme,\n  rtl,\n  roundBorders,\n  blocksShadows,\n  toggleTopNavigation,\n  changeToDark,\n  changeToLight,\n  changeToRTL,\n  changeToLTR,\n  changeRoundBordersOn,\n  changeRoundBordersOff,\n  changeBlocksShadowsOn,\n  changeBlocksShadowsOff,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const customizerClass = classNames({\n    customizer__wrap: true,\n    'customizer__wrap--open': isOpen,\n  });\n\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"customizer\">\n      <button className=\"customizer__btn\" type=\"button\" onClick={handleOpen}>\n        <img className=\"customizer__btn-icon\" src={settings} alt=\"icon\" />\n      </button>\n      <div className={customizerClass} hidden={!isOpen}>\n        <div className=\"customizer__title-wrap\">\n          <h5>Theme Customizer</h5>\n          <button className=\"customizer__close-btn\" type=\"button\" onClick={handleOpen}>\n            <CloseIcon />\n          </button>\n        </div>\n        <p className=\"customizer__caption\">This customizer allows you to see the different variations of the ngombe.\n          Create your own visual style for every project you do!\n        </p>\n        <ToggleCollapsedMenu changeSidebarVisibility={changeSidebarVisibility} sidebar={sidebar} />\n        <ToggleTopMenu toggleTopNavigation={toggleTopNavigation} customizer={customizer} />\n        <ToggleTheme changeToDark={changeToDark} changeToLight={changeToLight} theme={theme} />\n        <ToggleRoundBorders\n          changeRoundBordersOn={changeRoundBordersOn}\n          changeRoundBordersOff={changeRoundBordersOff}\n          roundBorders={roundBorders}\n        />\n        <ToggleShadow\n          changeBlocksShadowsOn={changeBlocksShadowsOn}\n          changeBlocksShadowsOff={changeBlocksShadowsOff}\n          blocksShadows={blocksShadows}\n        />\n        <ToggleRTL changeToRTL={changeToRTL} changeToLTR={changeToLTR} rtl={rtl} />\n      </div>\n    </div>\n  );\n};\n\nCustomizer.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n  toggleTopNavigation: PropTypes.func.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  changeToRTL: PropTypes.func.isRequired,\n  changeToLTR: PropTypes.func.isRequired,\n  changeRoundBordersOn: PropTypes.func.isRequired,\n  changeRoundBordersOff: PropTypes.func.isRequired,\n  changeBlocksShadowsOn: PropTypes.func.isRequired,\n  changeBlocksShadowsOff: PropTypes.func.isRequired,\n};\n\nexport default Customizer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport {\n  CustomizerProps, SidebarProps, ThemeProps, RTLProps, UserProps, BlocksShadowsProps, RoundBordersProps,\n} from '../../shared/prop-types/ReducerProps';\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '../../redux/actions/sidebarActions';\nimport {\n  changeThemeToDark, changeThemeToLight,\n} from '../../redux/actions/themeActions';\nimport {\n  changeDirectionToRTL, changeDirectionToLTR,\n} from '../../redux/actions/rtlActions';\nimport { toggleTopNavigation } from '../../redux/actions/customizerActions';\nimport {\n  changeRoundBordersToOnAction, changeRoundBordersToOffAction,\n} from '../../redux/actions/roundBordersActions';\nimport {\n  changeBlocksShadowsToOnAction, changeBlocksShadowsToOffAction,\n} from '../../redux/actions/blocksShadowsActions';\nimport Topbar from './topbar/Topbar';\nimport TopbarWithNavigation from './topbar_with_navigation/TopbarWithNavigation';\nimport Sidebar from './sidebar/Sidebar';\nimport SidebarMobile from './topbar_with_navigation/sidebar_mobile/SidebarMobile';\nimport Customizer from './customizer/Customizer';\n// import WelcomeNotification from './components/WelcomeNotification';\n\nconst Layout = ({\n  dispatch, customizer, sidebar, theme, rtl, roundBorders, blocksShadows, user,\n}) => {\n  // const [isNotificationShown, setIsNotificationShown] = useState(false);\n\n  // useEffect(() => {\n  //   // if (!isNotificationShown) {\n  //   //   WelcomeNotification(theme, rtl, setIsNotificationShown, isNotificationShown);\n  //   // }\n  // }, [theme, rtl, isNotificationShown]);\n\n  const sidebarVisibility = () => {\n    dispatch(changeSidebarVisibility());\n  };\n\n  const mobileSidebarVisibility = () => {\n    dispatch(changeMobileSidebarVisibility());\n  };\n\n  const changeToDark = () => {\n    dispatch(changeThemeToDark());\n  };\n\n  const changeToLight = () => {\n    dispatch(changeThemeToLight());\n  };\n\n  const changeToRTL = () => {\n    dispatch(changeDirectionToRTL());\n  };\n\n  const changeToLTR = () => {\n    dispatch(changeDirectionToLTR());\n  };\n\n  const topNavigation = () => {\n    dispatch(toggleTopNavigation());\n  };\n\n  const changeRoundBordersOn = () => {\n    dispatch(changeRoundBordersToOnAction());\n  };\n\n  const changeRoundBordersOff = () => {\n    dispatch(changeRoundBordersToOffAction());\n  };\n\n  const changeBlocksShadowsOn = () => {\n    dispatch(changeBlocksShadowsToOnAction());\n  };\n\n  const changeBlocksShadowsOff = () => {\n    dispatch(changeBlocksShadowsToOffAction());\n  };\n\n  const layoutClass = classNames({\n    layout: true,\n    'layout--collapse': sidebar.collapse,\n    'layout--top-navigation': customizer.topNavigation,\n  });\n\n  return (\n    <div className={layoutClass}>\n      <Customizer\n        customizer={customizer}\n        sidebar={sidebar}\n        theme={theme}\n        rtl={rtl}\n        roundBorders={roundBorders}\n        blocksShadows={blocksShadows}\n        changeSidebarVisibility={sidebarVisibility}\n        toggleTopNavigation={topNavigation}\n        changeToDark={changeToDark}\n        changeToLight={changeToLight}\n        changeToRTL={changeToRTL}\n        changeToLTR={changeToLTR}\n        changeRoundBordersOn={changeRoundBordersOn}\n        changeRoundBordersOff={changeRoundBordersOff}\n        changeBlocksShadowsOn={changeBlocksShadowsOn}\n        changeBlocksShadowsOff={changeBlocksShadowsOff}\n      />\n      {customizer.topNavigation\n        ? (\n          <TopbarWithNavigation\n            changeMobileSidebarVisibility={mobileSidebarVisibility}\n          />\n        )\n        : (\n          <Topbar\n            changeMobileSidebarVisibility={mobileSidebarVisibility}\n            changeSidebarVisibility={sidebarVisibility}\n            user={user}\n          />\n        )}\n      {customizer.topNavigation\n        ? (\n          <SidebarMobile\n            sidebar={sidebar}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n            changeMobileSidebarVisibility={changeMobileSidebarVisibility}\n          />\n        )\n        : (\n          <Sidebar\n            sidebar={sidebar}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n            changeMobileSidebarVisibility={changeMobileSidebarVisibility}\n          />\n        )}\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired,\n  user: UserProps.isRequired,\n};\n\nexport default withRouter(connect(state => ({\n  customizer: state.customizer,\n  sidebar: state.sidebar,\n  theme: state.theme,\n  rtl: state.rtl,\n  roundBorders: state.roundBorders,\n  blocksShadows: state.blocksShadows,\n  user: state.user,\n}))(Layout));\n","export const CHANGE_THEME_TO_DARK = 'CHANGE_THEME_TO_DARK';\nexport const CHANGE_THEME_TO_LIGHT = 'CHANGE_THEME_TO_LIGHT';\n\nexport function changeThemeToDark() {\n  return {\n    type: CHANGE_THEME_TO_DARK,\n  };\n}\n\nexport function changeThemeToLight() {\n  return {\n    type: CHANGE_THEME_TO_LIGHT,\n  };\n}\n","export const CHANGE_DIRECTION_TO_LTR = 'CHANGE_DIRECTION_TO_LTR';\nexport const CHANGE_DIRECTION_TO_RTL = 'CHANGE_DIRECTION_TO_RTL';\n\nexport function changeDirectionToLTR() {\n  return {\n    type: CHANGE_DIRECTION_TO_LTR,\n  };\n}\n\nexport function changeDirectionToRTL() {\n  return {\n    type: CHANGE_DIRECTION_TO_RTL,\n  };\n}\n","/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  BarChart, Bar, Cell, ResponsiveContainer,\n} from 'recharts';\nimport TrendingUpIcon from 'mdi-react/TrendingUpIcon';\nimport TrendingDownIcon from 'mdi-react/TrendingDownIcon';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { baseURL, CONFIG } from '../../../../configs/exports';\n\nconst NO1 = localStorage.getItem('entity');\nconst NO7 = localStorage.getItem('branch');\nconst NO2 = localStorage.getItem('staffs');\nconst NO3 = localStorage.getItem('students');\nconst NO4 = localStorage.getItem('parents');\nconst NO5 = localStorage.getItem('nfc-tags');\nconst NO6 = localStorage.getItem('devices');\n\n\nconst data = [\n  { name: 'Entities', uv: NO1 },\n  { name: 'Branches', uv: NO7 },\n  { name: 'Staffs', uv: NO2 },\n  { name: 'Students', uv: NO3 },\n  { name: 'Parents', uv: NO4 },\n  { name: 'NFC-Tags', uv: NO5 },\n  { name: 'NFC-Devices', uv: NO6 },\n];\n\nclass Visits extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n    };\n  }\n\n\n  componentDidMount() {\n   \n    let url = baseURL + \"dashboard\"\n\n    axios.all([axios.get(url, CONFIG)]).then(axios.spread((branchResponse) => {\n      this.setState({\n        doc_name: branchResponse.data.data[0].doc_name,\n        doc_remain: branchResponse.data.data[0].remains,\n        total: branchResponse.data.data[0].count\n\n      })\n    })).catch(error => {\n      console.log('jwtcheck', error.response.data.status_code)\n\n      // window.location.href = \"/log_in\";\n    })\n  }\n  handleClick = (item) => {\n    const index = data.indexOf(item.payload);\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    const { activeIndex } = this.state;\n\n    return (\n\n      <Col lg={3} xs={12}>\n        <Card>\n          <CardBody className=\"dashboard__card-widget\">\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">{this.state.doc_name}</h5>\n            </div>\n\n            <div className=\"dashboard__total pull-left\" >\n              <TrendingDownIcon className=\"dashboard__trend-icon\" />\n              <p>Remaining</p>\n              <p className=\"dashboard__total-stat\" style={{ fontSize: \"20px\", color: \"red\" }}>\n                {this.state.doc_remain}\n              </p>\n              <div className=\"dashboard__chart-container\">\n                <ResponsiveContainer height={50}>\n                  <BarChart data={data}>\n                    <Bar dataKey=\"uv\" onClick={this.handleClick}>\n                      {\n                        data.map((entry, index) => (\n                          <Cell\n                            cursor=\"pointer\"\n                            fill={index === activeIndex ? '#4ce1b6' : '#4ce1b6'}\n                            key={`cell-${index}`}\n                          />\n                        ))\n                      }\n                    </Bar>\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n\n            <div className=\"dashboard__total pull-right\" >\n              <TrendingUpIcon className=\"dashboard__trend-icon\" />\n              <p>Submitted</p>\n              <p className=\"dashboard__total-stat\" style={{ fontSize: \"20px\", color: \"green\" }}>\n                {this.state.total}\n              </p>\n              <div className=\"dashboard__chart-container\">\n                <ResponsiveContainer height={50}>\n                  <BarChart data={data}>\n                    <Bar dataKey=\"uv\" onClick={this.handleClick}>\n                      {\n                        data.map((entry, index) => (\n                          <Cell\n                            cursor=\"pointer\"\n                            fill={index === activeIndex ? '#4ce1b6' : '#4ce1b6'}\n                            key={`cell-${index}`}\n                          />\n                        ))\n                      }\n                    </Bar>\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withTranslation('common')(Visits);\n","import React, { useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Visits from './components/Visits';\nimport { USER } from '../../../configs/exports';\n// import BreakingAdminnews from './components/breakingNews';\n// import ApplicantDocuSummary from './components/ApplicantDocuSummary';\n// import PassportDoc from './components/Passport_Doc';\n// import Medical1 from './components/Medical1';\n\n\nfunction DefaultDash({ t, rtl }) {\n\n  useEffect(() => { })\n\n  return (\n    <Col className=\"dashboard\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Dashboard</h3>\n        </Col>\n      </Row>\n      <Row >\n        {USER.role === 'admin' ?\n          <>\n            {/* <BreakingAdminnews /> */}\n\n            <Visits />\n            {/* <PassportDoc />\n\n            <Medical1 /> */}\n\n          </>\n          : null}\n\n          <>\n            {/* <BreakingAdminnews />\n\n            <Visits />\n            <PassportDoc />\n\n            <Medical1 /> */}\n\n          </>\n         \n\n      </Row>\n      <br />\n      {/* <ApplicantDocuSummary /> */ }\n    </Col >\n  )\n}\n\nDefaultDash.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default compose(withTranslation('common'), connect(state => ({\n  rtl: state.rtl,\n})))(DefaultDash);\n","import * as React from 'react';\nimport '../../_assets/css/file.css';\nimport axios from 'axios';\n\nimport { Card, CardBody, Col, Button } from 'reactstrap';\nimport PhoneOutlineIcon from 'mdi-react/PhoneOutlineIcon';\nimport Input from 'react-phone-number-input/input'\nimport { baseURL, CONFIG } from '../../configs/exports';\nimport { Redirect } from 'react-router-dom';\n\n\nexport class UserSearch extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            phone_number: '',\n            showError: false,\n            farmerProps: {},\n            userDetail: false,\n            isShowError: false,\n        }\n\n        localStorage.setItem(\"phone_2\", null);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({ isLoading: true });\n        axios.get(baseURL + 'customer_profile_msisdn?filter_value=' + this.state.phone_number.replaceAll(\"+\", \"\"), CONFIG).then((response) => {\n            console.log(\"bayo\", response.data)\n            if (response.data.data) {\n                this.setState({\n                    statusMessage: \"Success! Redirecting....\",\n                    farmerProps: response.data.data,\n                    isShowError: true, isLoading: false, showError: false,\n\n                });\n                setTimeout(() => {\n                    this.setState({\n                        statusMessage: response.data.message,\n                        phone_number: '',\n                        userDetail: true,\n                        isShowError: true, isLoading: false, showError: false,\n                    });\n                }, 1000);\n            } else {\n                this.setState({ statusMessage: \"Customer not found\", phone_number: '', userDetail: false, showError: true, isShowError: false, isLoading: false });\n            }\n        }).catch(error => {\n            console.log('bayoo', error.response)\n            this.setState({\n                showError: true,\n                isShowError: false,\n                phone_number: '',\n                userDetail: false,\n                statusMessage: error.response.data.message,\n                submitted: true,\n                isLoading: false\n            });\n        });\n\n\n    }\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { userDetail } = this.state;\n\n        return (\n            <div className=\"pcoded-main-container\">\n                {userDetail === true ?\n                    <Redirect\n                        to={{\n                            pathname: '/customer_details',\n                            state: {\n                                farmer: this.state.farmerProps\n                            }\n                        }}\n                    />\n                    :\n                    <>\n                        <Col md={12} lg={12}>\n                            <Card>\n                                <CardBody>\n                                    <div className=\"card__title\">\n                                        <h5 className=\"bold-text\">Fill the Below Field to Proceed </h5>\n                                    </div>\n                                    {this.state.showError ? <div style={{ color: 'red' }}>\n                                        {this.state.statusMessage}\n                                    </div> : null}<br></br>\n                                    {this.state.isShowError ? (\n                                        <div color=\"success\" style={{ fontSize: \"13px\", color: \"green\" }}>\n\n                                            {this.state.statusMessage}\n\n                                        </div>\n                                    ) : null}<br></br>\n                                    <form className=\"col-md-8 offset-md-2\" onSubmit={this.onSubmit}>\n\n\n                                        <span className=\"form__form-group-label\">Phone No.</span>\n\n                                        <div className=\"form__form-group-field\">\n                                            <div className=\"form__form-group-icon\">\n                                                <PhoneOutlineIcon />\n                                            </div>\n                                            <Input\n                                                country=\"KE\"\n                                                international\n                                                withCountryCallingCode\n                                                required\n                                                className=\"form-control\"\n                                                placeholder=\"Ваш телефон\"\n                                                name=\"phone_number\"\n                                                id=\"input\"\n                                                value={this.state.phone_number}\n                                                onChange={value => this.setState({ phone_number: value })} />\n                                        </div>\n                                        <br />\n\n\n                                        <div className=\"col-12\">\n                                            <br />\n                                            <Button type=\"submit\" outline color=\"primary\" className=\"float-right\" >\n                                                {this.state.isLoading ? \"Please Wait...\" : \"Search\"}  <i className=\"fa fa-search\"></i>\n                                            </Button> &nbsp;&nbsp;&nbsp;\n                                        </div>\n                                    </form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </>\n                }\n\n            </div>\n        )\n\n    }\n\n}\n","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { CardBody, Card, Button, Form } from 'reactstrap';\nimport { baseURL_PORTAL, CONFIG, errorToast, successToast, ToastTable } from '../../configs/exports';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport moment from 'moment';\nimport { MDBCloseIcon } from \"mdbreact\";\nimport Modal from 'react-modal';\n\nconst UsersStaffs = () => {\n\n    // hooks definations variables srtores\n    const [open, IsOpen] = useState(false);  // define open edit modal\n\n    const [open_add, IsOpenAdd] = useState(false);  // define open edit modal\n\n    const [edit_record, setEditRecord] = useState({}); // store the table row array\n    const [data, setData] = useState([]);  // array of objects for data table  \n    const [isLoading, setLoad] = useState(false); // loading state\n    const [state, setState] = useState({\n        user_name: '',\n    });\n    const [randomstrng, setRandomString] = useState(''); // random string for the api\n\n    // function being called once a component has been loaded\n    useEffect(() => {\n        setLoad(true);\n        axios.get(`${baseURL_PORTAL}user`, CONFIG).then(res => {\n            let new_data = []; // difine a new object\n            // console.log(\"Users\", res.data.Users[1])\n\n            if (res.data.Users.length > 0) {  \n                // looping  through the array for modifing the data\n                for (let i = 0; i < res.data.Users.length; i++) {\n                    let new_date = { new_date: moment(res.data.Users[i].created_on).format('DD-MM-YYYY') }\n                    new_data.push(Object.assign(new_date, res.data.Users[i]));\n                }\n\n                setLoad(false);\n            }\n            setData(new_data);\n            // console.log(\"Users\", res.data.Users);\n        }).catch(err => {\n            console.log(err) //log error\n            setLoad(false);\n            // if error on the api\n        })\n    }, [randomstrng])\n\n    // difine the table format\n    const columns = [\n        {\n            key: \"name\",\n            text: \"Name\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"username\",\n            text: \"Username\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"msisdn\",\n            text: \"Phone Number\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"email\",\n            text: \"Email\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"id_no\",\n            text: \"Id\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"role_id\",\n            text: \"Role\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"branch_id\",\n            text: \"Branch\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"new_date\",\n            text: \"Date Created\",\n            TrOnlyClassName: 'tsc',\n            className: \"tsc\",\n\n            sortable: true\n        },\n        {\n            key: \"action\",\n            text: \"Action\",\n            TrOnlyClassName: 'tsc',\n            cell: (record, index) => {\n                return (\n                    <Fragment>\n                        <button\n                            className=\"btn btn-primary btn-sm\"\n                            style={{ marginRight: '5px' }}\n                            onClick={() => OpenModal(record)}\n                        >\n                            Edit\n                        </button>\n                        <button\n                            className=\"btn btn-danger btn-sm\"\n                            onClick={() => { if (window.confirm('Are you sure you want to delete this branch?')) handleDelete(record) }}\n                        >\n                            Delete\n                        </button>\n                    </Fragment>\n                );\n            }\n        }\n    ]\n\n    // open the edit modal\n    const OpenModal = (e) => {\n        IsOpen(true);\n        setEditRecord(e);\n        setState({\n            branch_name: e.name\n        })\n    }\n\n    // table configs\n    const config = {\n        page_size: 100,\n        length_menu: [100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        filename: \"users\",\n        button: {\n            excel: true,\n            print: true,\n            csv: true\n        }\n    }\n\n    // closes the edit modal\n    const closeModal = () => {\n        IsOpen(false);\n    }\n\n    //  close add modal\n    const closeModalAdd = () => {\n        IsOpenAdd(false)\n    }\n\n    const onChangeHandle = (e) => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    // handle onsubmit for the edit action\n    const onSubmitHandleEdit = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            name: state.name,\n            user_name: state.user_name,\n            msisdn: state.msisdn,\n            email: state.email,\n            id: state.id,\n        }\n\n        axios.put(`${baseURL_PORTAL}branch/${edit_record.name}`, formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === 'True') {\n                successToast(\"Branch updated successfully\");\n                IsOpen(false);\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                }, 3000)\n            }\n\n        }).catch(err => {\n            setLoad(false);\n\n            errorToast(\"Branch not updated\");\n\n\n            // if error on the api\n            // alert(JSON.stringify(err));\n        })\n    }\n\n\n    // handle delete action\n    const handleDelete = (e) => {\n        setLoad(true);\n        let formatData = {\n            email: e.email,\n        }\n\n        axios.delete(`${baseURL_PORTAL}user`, \n        formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === 'True') {\n                successToast(\"User deleted successfully\");\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpen(false);\n                }, 3000)\n            }\n\n        }).catch(\n            err => {\n                errorToast(\"Not deleted\")\n            }\n        )\n    }\n\n    // add branch action point\n    const onSubmitHandleAdd = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            branch: state.branch_name,\n            country: state.country_name,\n        }\n        axios.post(`${baseURL_PORTAL}branch`, formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === 'True') {\n                successToast(\"Branch added successfully\");\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpenAdd(false);\n                }, 3000)\n            }\n\n        }).catch(err => {\n            errorToast(\"Error adding Branch\");\n        })\n    }\n\n    //return function of UI\n    return (\n        <div>\n\n            {ToastTable()}\n\n            <Modal\n                isOpen={open_add}\n                onRequestClose={e => {\n                    closeModalAdd(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModalAdd} />\n                <h4><b>Add Staff</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleAdd} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Staff</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"branch_name\" placeholder='Enter Staff Name'\n                                            value={state.branch_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Staff</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"country_name\" placeholder='Enter Staff Name'\n                                            value={state.country_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n            <Modal\n                isOpen={open}\n                onRequestClose={e => {\n                    closeModal(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModal} />\n                <h4><b>Modify details</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleEdit} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Staff</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"branch_name\" placeholder='Enter Staff Name'\n                                            value={state.branch_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n            <Card>\n                <CardBody>\n                    <div className='row'>\n                        <div className='col-10'>\n                            <h4><b>Staff</b></h4>\n                        </div>\n                        <div className='col-2 float-right'>\n                            <div className='3'>\n                                <Button className=\"account__btn\" color=\"success\" onClick={() => { IsOpenAdd(true) }}>Add Staff</Button>\n                            </div>\n                        </div>\n                        <br />\n                    </div>\n                    <ReactDatatable\n                        config={config}\n                        records={data}\n                        loading={isLoading}\n                        columns={columns}\n                        id=\"tsc\"\n                    />\n                </CardBody>\n\n            </Card>\n        </div>\n    )\n}\n\nexport default UsersStaffs;","import React, { useState, Fragment, useEffect } from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\n\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\n\nimport { Card, CardBody, Table, Nav, NavItem, NavLink } from 'reactstrap';\n\nimport { baseURL, CONFIG, formatCurrency, useStyles } from '../../configs/exports';\nimport * as moment from 'moment';\n// import FarmerDetails from './FarmerDetails';\nimport { Redirect } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Autorenew } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\n\n\n//farmer hooks\n\nconst Customers = () => {\n\n    const [farmer, setFarmer] = useState([])\n    const [farmerProps, setFarmerProps] = useState([])\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n    const [farmerDetails, setFarmerDetails] = useState(false)\n    const [activeTab, setActiveTab] = useState(\"1\")\n    const [spin, setSpin] = useState(false);\n    const refreshCanvas = () => {\n        setSpin(true);\n        setTimeout(() => {\n            setSpin(false);\n        }, 1000);\n    };\n    const classes = useStyles();\n\n\n    useEffect(() => {\n        setLoad(true)\n\n        let url;\n        if (activeTab === \"1\") {\n            url = baseURL + `customer?` + queryString;\n        } else if (activeTab === \"2\") {\n            url = baseURL + `to_upload_document?` + queryString;\n        } else {\n            url = baseURL + `customer_loans?` + queryString;\n        }\n        // alert(url)\n        axios.all([\n            axios.get(url, CONFIG)\n        ]).then(axios.spread((customerResponse) => {\n            let data = [];\n            if (customerResponse.data.data.length > 0) {\n                setDataTotal(customerResponse.data.data.length)\n                setLoad(false)\n                for (let i = 0; i < customerResponse.data.data.length; i++) {\n\n                    let mname, memail, mcountry, magent, mbranch;\n\n\n                    if (customerResponse.data.data[i].agent_name == null) {\n                        magent = { magent: \"_\" };\n                    } else {\n                        magent = { magent: customerResponse.data.data[i].agent_name };\n                    }\n\n                    if (customerResponse.data.data[i].branch_name == null) {\n                        mbranch = { mbranch: \"_\" };\n                    } else {\n                        mbranch = { mbranch: customerResponse.data.data[i].branch_name };\n                    }\n\n\n                    if (customerResponse.data.data[i].country == null) {\n                        mcountry = { mcountry: \"_\" };\n                    } else {\n                        mcountry = { mcountry: customerResponse.data.data[i].country };\n                    }\n\n                    if (customerResponse.data.data[i].name == null) {\n                        mname = { mname: \"_\" };\n                    } else {\n                        mname = { mname: customerResponse.data.data[i].name };\n                    }\n\n\n                    if (customerResponse.data.data[i].email == null) {\n                        memail = { memail: \"_\" };\n                    } else {\n                        memail = { memail: customerResponse.data.data[i].email };\n                    }\n\n                    let f_amount = { f_amount: formatCurrency(parseFloat(customerResponse.data.data[i].balance).toFixed(2)) };\n\n                    let date = { dates: (moment.utc(customerResponse.data.data[i].created_on).format('DD/MM/YYYY')) };\n                    data.push(Object.assign(date, mbranch, mcountry, magent, mname, memail, f_amount, customerResponse.data.data[i]));\n                    setLoad(false)\n                }\n                setDataTotal(customerResponse.data.total)\n                setFarmer(data)\n            } else {\n                setLoad(false)\n                setFarmer(data)\n            }\n        }))\n\n    }, [activeTab, queryString]);\n\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        pagination: 'advance',\n        page_size: 100,\n        button: {\n            csv: true\n        },\n        show_length_menu: true,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Search..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n    const columns = [\n        {\n            key: \"mname\",\n            TrOnlyClassName: 'cell',\n            text: \"Name\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"msisdn\",\n            TrOnlyClassName: 'cell',\n            text: \"Phone#\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"id_no\",\n            TrOnlyClassName: 'cell',\n            text: \"ID No\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n\n        {\n            key: \"location\",\n            TrOnlyClassName: 'cell',\n            text: \"Location\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n\n        {\n            key: \"f_amount\",\n            TrOnlyClassName: 'cell',\n            text: \"Balance#\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"action\",\n            text: \"Documents\",\n            TrOnlyClassName: 'tsc',\n            className: \"tsc\",\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n                        {record.document_status === 0 ?\n                            <span class=\"badge-danger\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                No\n                            </span>\n\n                            :\n                            <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                Yes\n                            </span>\n\n                        }\n\n\n                    </Fragment >\n                );\n            }\n        },\n\n        {\n            key: \"magent\",\n            TrOnlyClassName: 'cell',\n            text: \"Agent\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"mbranch\",\n            TrOnlyClassName: 'cell',\n            text: \"Branch\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"mcountry\",\n            TrOnlyClassName: 'cell',\n            text: \"Country\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"action\",\n            text: \"Active Loan\",\n            TrOnlyClassName: 'cell',\n            className: \"cell\",\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n                        {record.loan_status === 0 ?\n                            <span class=\"badge-danger\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                No\n                            </span>\n\n                            :\n                            <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                Yes\n                            </span>\n\n                        }\n\n\n                    </Fragment >\n                );\n            }\n        },\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'cell',\n            text: \"Date\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"action\",\n            text: \"Options\",\n            TrOnlyClassName: 'cell',\n            className: \"tsc\",\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n                        {/* <Link to=\"/farmer_details\" > */}\n\n                        <button className=\"btn btn-success btn-sm\"\n                            title=\"View More\"\n                            style={\n                                { marginRight: '10px' }}\n                            onClick={() => { rowClickedHandler(record) }} >\n\n                            More <i className=\"fa fa-plus\"></i>\n                        </button>\n                        {/* </Link> */}\n                    </Fragment>\n                )\n            }\n        }\n    ];\n\n    // row clickerd\n    const rowClickedHandler = (data) => {\n        setFarmerProps(data);\n        setFarmerDetails(true);\n    };\n\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n    const toggle = (activeTab) => {\n\n        setActiveTab(activeTab)\n\n    }\n\n\n    // return UI\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            < >\n                {farmerDetails === true ?\n                    <>\n                        <Redirect\n                            to={{\n                                pathname: '/customer_details',\n                                state: {\n                                    farmer: farmerProps\n                                }\n                            }}\n                        />\n                    </> :\n                    null}\n                < Card >\n                    <CardBody >\n                        <Table responsive hover>\n                            <div className=\"panel-body\" >\n\n                                <Nav tabs>\n\n                                    <NavItem className='tablayout'>\n                                        <NavLink\n                                            className={classnames({ active: activeTab === '1' })}\n                                            onClick={() => {\n                                                toggle('1');\n                                            }}\n                                        >\n                                            All Customers\n                                        </NavLink>\n                                    </NavItem>\n                                    <NavItem className='tablayout'>\n                                        <NavLink\n                                            className={classnames({ active: activeTab === '2' })}\n                                            onClick={() => {\n                                                toggle('2');\n                                            }}\n                                        >\n                                            Document not Submitted\n                                        </NavLink>\n                                    </NavItem>\n                                    <NavItem className='tablayout'>\n                                        <NavLink\n                                            className={classnames({ active: activeTab === '3' })}\n                                            onClick={() => {\n                                                toggle('3');\n                                            }}\n                                        >\n                                            Document Submitted\n                                        </NavLink>\n                                    </NavItem>\n\n                                </Nav>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n\n                                            onClick={\n                                                () => {\n                                                    refreshCanvas()\n                                                    setQueryString(require(\"randomstring\").generate({\n                                                        length: 1,\n                                                        charset: 'alphanumeric',\n                                                        capitalization: 'lowercase'\n                                                    }))\n                                                }}\n                                        >\n                                            Refresh\n                                            <Autorenew\n                                                className={clsx({\n                                                    [classes.refresh]: true,\n                                                    spin: spin\n                                                })}\n                                                onClick={\n                                                    () => {\n                                                        refreshCanvas()\n                                                        setQueryString(require(\"randomstring\").generate({\n                                                            length: 1,\n                                                            charset: 'alphanumeric',\n                                                            capitalization: 'lowercase'\n                                                        }))\n                                                    }}\n                                                spin={360}\n                                            />\n\n                                        </button>\n                                    </div>\n                                </div>\n                                <br />\n                                <ReactDatatable\n                                    config={config}\n                                    records={farmer}\n                                    columns={columns}\n                                    dynamic={true}\n                                    id=\"tsc\"\n                                    loading={isLoading}\n                                    total_record={datatotal}\n                                    onChange={tableChangeHandler} />\n                            </div>\n                        </Table>\n                    </CardBody>\n\n\n                </Card>\n\n            </>\n        </div>\n    )\n\n}\nexport default Customers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardBody } from 'reactstrap';\n// import ImageView from './imageView';\nimport { Link } from 'react-router-dom';\n\nconst Sale = `${process.env.PUBLIC_URL}/img/for_store/catalog/sale_lable.png`;\nconst New = `${process.env.PUBLIC_URL}/img/for_store/catalog/new_lable.png`;\n\n\n\nconst Catalog = ({ items }) => {\n\n  // const [change, setChange] = useState(false)\n  // const [value, setValue] = useState(\"\")\n\n  // useEffect(() => {\n  // }, [change]);\n\n  return (\n    <div className=\"catalog-items__wrap\">\n      {/* {change === true ?\n        <ImageView url_src={value} is_open={true} />\n        : null} */}\n      <div className=\"catalog-items\">\n        {items.map(item => (\n          <CardBody className=\"catalog-item\" key={item.i} >\n\n\n            <Link className=\"catalog-item__link\"\n\n              to={{\n                pathname: '/photo_view',\n                state: {\n                  url_src: item.src,\n                  is_open: true\n                }\n              }}>\n              {/* <a className=\"catalog-item__link\" href={# rel=\"noopener noreferrer\" target=\"_blank\"> */}\n              {item.new ? <img className=\"catalog-item__label\" src={New} alt=\"new\" /> : ''}\n              {item.sale ? <img className=\"catalog-item__label\" src={Sale} alt=\"sale\" /> : ''}\n              <div className=\"catalog-item__img-wrap\">\n                <img className=\"catalog-item__img\" src={item.src} alt=\"catalog-item-img\" />\n              </div>\n              <div className=\"catalog-item__info\">\n                <h4 className=\"catalog-item__title\">{item.title}</h4>\n                <p className=\"catalog-item__description\">{item.id_no}</p>\n                <p className=\"catalog-item__description\">{item.msisdn}</p>\n                <p className=\"catalog-item__description\">{item.description}</p>\n\n                <p className=\"catalog-item__description\">{item.village}</p>\n                <p className=\"catalog-item__description\">{item.designation}</p>\n\n                <h1 className=\"catalog-item__price\">{item.price}</h1>\n                {item.sale ? <p className=\"catalog-item__old-price\">{item.oldPrice}</p> : ''}\n                {item.colors.map(color => (\n                  <span\n                    key={color.i}\n                    className=\"catalog-item__color\"\n                    style={{ background: color }}\n                  />\n                ))}\n              </div>\n            </Link>\n            {/* </a> */}\n          </CardBody>\n\n        ))}\n      </div>\n    </div>\n  )\n};\n\nCatalog.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.string,\n    description: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string),\n    new: PropTypes.bool,\n  })),\n};\n\nCatalog.defaultProps = {\n  items: [],\n};\n\nexport default Catalog;\n","import React, { useState, Fragment, useEffect } from 'react';\n// import ReactDatatable from '@mkikets/react-datatable';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\nimport { baseURL, CONFIG, errorToast, successToast, ToastTable, USER } from '../../configs/exports';\nimport { Link, Redirect } from 'react-router-dom';\nimport Loader from \"react-loader-spinner\";\nimport \"../../_assets/css/csv.css\";\nimport ProductItems from '../../shared/components/catalog/ProductItems';\nimport * as moment from 'moment';\nimport {\n    Col, Row,\n    Card, CardBody, Table, Button, TabContent, TabPane,\n} from 'reactstrap';\n\nimport Modal from 'react-modal';\nimport { Form } from 'react-bootstrap';\nimport { MDBCloseIcon } from \"mdbreact\";\nimport Avatar from 'react-avatar';\n\nconst CustomerDetails = (state) => {\n\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState(0)\n    const [queryString, setQueryString] = useState(`&page_number=1&page_size=100&sort_order=false`)\n\n    // eslint-disable-next-line\n    const [customer_data, setCustomer] = useState({})\n    // eslint-disable-next-line\n\n\n    const [open, IsOpen] = useState(false);\n\n\n    const [open_limit, IsOpenLimit] = useState(false);\n\n    const [customer_document, setCustomerDocuments] = useState({})\n\n    const [state_value, setState] = useState({\n        amount: ''\n    })\n\n\n    const [description, setDescription] = useState('')\n\n    const [document_status, setDocumentStatus] = useState(false)\n\n    const [loans, setLoan] = useState([])\n\n\n    const [home, setHome] = useState(false)\n\n\n\n\n    const [customer_statement, setStatement] = useState(false)\n\n    const [statement_reference, setReference] = useState('')\n\n\n\n\n\n\n    // const [avatar, setAvatar] = useState(\"\") // set profile picture\n\n\n    useEffect(() => {\n\n        // consuming API based on active tab\n        let customer_url = baseURL + `customer_profile?filter_value=${state.location.state.farmer.id}&id_no=${state.location.state.farmer.id_no}` + queryString;\n\n\n        // tab 1 API call...\n        axios.all([\n            axios.get(customer_url, CONFIG),\n        ]).then(axios.spread((customerResponse) => {\n            let data = [];\n            if (customerResponse.data.status) {\n                // eslint-disable-next-line\n\n\n                setCustomer(customerResponse.data.customer_info)\n                setCustomerDocuments(customerResponse.data.customer_doc)\n\n\n                if (customerResponse.data.customer_doc.length === undefined) {\n                    setDocumentStatus(true)\n                }\n\n\n                if (customerResponse.data.data.length > 0) {\n\n\n                    for (let i = 0; i < customerResponse.data.data.length; i++) {\n\n                        // let mname, memail;\n\n                        // if (customerResponse.data.data[i].name == null) {\n                        //     mname = { mname: \"_\" };\n                        // } else {\n                        //     mname = { mname: customerResponse.data.data[i].name };\n                        // }\n\n\n                        // if (customerResponse.data.data[i].email == null) {\n                        //     memail = { memail: \"_\" };\n                        // } else {\n                        //     memail = { memail: customerResponse.data.data[i].email };\n                        // }\n\n                        let f_amount = { f_amount: formatCurrency(parseFloat(customerResponse.data.data[i].total_amount).toFixed(2)) };\n                        let f_amount_interest = { f_amount_interest: formatCurrency(parseFloat(customerResponse.data.data[i].interest).toFixed(2)) };\n\n                        let f_amount_limit = { f_amount_limit: formatCurrency(parseFloat(customerResponse.data.data[i].loan_limit).toFixed(2)) };\n                        let date = { dates: (moment.utc(customerResponse.data.data[i].created_on).format('DD/MM/YYYY')) };\n\n                        let enddate = { enddates: (moment.utc(customerResponse.data.data[i].end_date).format('DD/MM/YYYY')) };\n                        data.push(Object.assign(date, f_amount, f_amount_interest, f_amount_limit, enddate, customerResponse.data.data[i]));\n                    }\n\n                    setLoan(data)\n\n                    setLoad(false)\n\n                }\n                setDataTotal(customerResponse.data.loan_counts)\n\n                setLoad(false)\n\n            } else {\n                setLoad(false)\n                setLoan(data)\n            }\n        })).catch(error => {\n\n\n            // alert(JSON.stringify(error))\n        })\n    }, [queryString]);// eslint-disable-line react-hooks/exhaustive-deps\n\n    const locale = 'en-US';\n    const formatCurrency = amount => {\n        return new Intl.NumberFormat(locale, {\n            style: 'currency',\n            currency: \"ABS\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(amount).replaceAll('ABS', \"\");\n    };\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [100, 200, 500],\n        show_filter: false,\n        show_pagination: true,\n        pagination: 'advance',\n        page_size: 100,\n        button: {\n            csv: true,\n            excel: true,\n            print: true\n        },\n        show_length_menu: true,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Tag ID..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n\n\n    //livestock list\n\n    const columns_livestock = [\n        {\n            key: \"f_amount_limit\",\n            TrOnlyClassName: 'cell',\n            text: \"Limit\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"f_amount\",\n            TrOnlyClassName: 'cell',\n            text: \"Amount Issued\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"f_amount_interest\",\n            TrOnlyClassName: 'cell',\n            text: \"Interest\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n\n        {\n            key: \"action\",\n            text: \"Status\",\n            TrOnlyClassName: 'cell',\n            className: \"cell\",\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n\n                        {record.status === 1 ?\n                            <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                Applied\n                            </span>\n                            :\n                            record.status === 2 ?\n                                <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                    Paid\n                                </span>\n\n                                :\n                                <>\n                                    {\n                                        record.status === 3 ?\n                                            <span class=\"badge-danger\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                                Defaulted\n                                            </span>\n                                            : null\n                                    }\n                                </>\n                        }\n                    </Fragment >\n                );\n            }\n        },\n        {\n            key: \"enddates\",\n            TrOnlyClassName: 'tsc',\n            text: \"End Date\",\n            className: \"cell\",\n            align: \"left\"\n        },\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'tsc',\n            text: \"Date Created\",\n            className: \"cell\",\n            align: \"left\"\n        },\n\n        {\n            key: \"action\",\n            text: \"Options\",\n            TrOnlyClassName: 'cell',\n            className: \"cell\",\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n\n                        <button className=\"btn btn-success btn-sm\"\n                            title=\"View pics Details\"\n                            style={\n                                { marginRight: '10px' }}\n                            onClick={() => { customerDetails(record) }} >\n                            Statement\n                        </button>\n\n                    </Fragment>\n                );\n            }\n        }\n    ];\n\n\n\n\n\n\n    // handles paginations\n    const tableChangeHandler = data => {\n        const b = Object.assign({}, data, { filter_value: state.location.state.farmer.id });\n        // alert(\"Something\")\n        let queryString;\n        if (b.filter_value === null || b.filter_value === '') {\n            alert(JSON.stringify({ b }))\n\n            queryString = Object.keys(b).map((key) => {\n                if (key === \"sort_order\" && b[key]) {\n                    return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(b[key].order) + '&' +\n                        encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(b[key].column)\n                } else {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(b[key])\n                }\n            }).join('&');\n        }\n        else {\n            queryString = Object.keys(data).map((key) => {\n                if (key === \"sort_order\" && data[key]) {\n                    return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\")\n                        + '=' + encodeURIComponent(data[key].column)\n                } else {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n                }\n            }).join('&');\n            // delete data.filter_value; // or use => delete test['blue'];\n            // alert(JSON.stringify(data))\n        }\n        setQueryString(queryString)\n    }\n\n    const backHome = () => {\n        setHome(true)\n    }\n\n\n    const customerDetails = (record) => {\n        setStatement(true)\n        setReference(record.reference)\n    }\n\n\n\n\n    const handleChange = (e) => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const closeModal = () => {\n        IsOpen(false)\n    }\n    const openModal = () => {\n        IsOpen(true)\n    }\n\n\n    const closeModalLimit = (e) => {\n        IsOpenLimit(false)\n    }\n    const openModalLimit = () => {\n        IsOpenLimit(true)\n    }\n\n    const onSubmitLimit = (e) => {\n        e.preventDefault();\n        setLoad(true)\n        let formData = {\n            amount: state_value.amount,\n            customer_id: state.location.state.farmer.id,\n            description: description,\n            name: customer_data.name,\n            msisdn: customer_data.msisdn,\n\n        }\n        axios.post(`${baseURL}update_limit`, formData, CONFIG).then(res => {\n            setLoad(false)\n            if (res.data.success) {\n                successToast(res.data.message)\n                setState({\n                    ...state,\n                    amount: ''\n                })\n                setTimeout(() => {\n                    setQueryString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    window.location.reload()\n\n                }, 3000)\n                closeModal(false)\n            } else {\n                errorToast(res.data.message)\n                closeModal(false)\n                setQueryString(require(\"randomstring\").generate({\n                    length: 1,\n                    charset: 'alphanumeric',\n                    capitalization: 'lowercase'\n                }))\n            }\n        }).catch(err => {\n            setLoad(false)\n            closeModal(false)\n            errorToast(err.message)\n        })\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setLoad(true)\n        let formData = {\n            amount: state_value.amount,\n            customer_id: state.location.state.farmer.id,\n            agent_id: USER.user_id\n\n        }\n        axios.put(`${baseURL}customer_documents`, formData, CONFIG).then(res => {\n            setLoad(false)\n            if (res.data.success) {\n                successToast(res.data.message)\n                setState({\n                    ...state,\n                    amount: ''\n                })\n                setTimeout(() => {\n                    setQueryString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    window.location.reload()\n\n                }, 3000)\n\n                closeModal(false)\n            } else {\n                errorToast(res.data.message)\n                closeModal(false)\n                setQueryString(require(\"randomstring\").generate({\n                    length: 1,\n                    charset: 'alphanumeric',\n                    capitalization: 'lowercase'\n                }))\n\n\n            }\n        }).catch(err => {\n\n            setLoad(false)\n            closeModal(false)\n            errorToast(err.message)\n        })\n\n    }\n\n    //UI returned\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            {ToastTable()}\n            <Modal\n                isOpen={open}\n                onRequestClose={e => {\n                    closeModal(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModal} />\n                <h4><b>Set Stock Value</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Stock Value</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"number\" className=\"form-control\"\n                                            name=\"amount\" placeholder='Stock Value'\n                                            value={state_value.amount} onChange={handleChange} />\n                                    </div>\n                                </div>\n                                <br /><br />\n                            </div>\n\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <Button className=\"account__btn\" type='submit' onClick={onSubmit} color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                }</Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n\n            <Modal\n                isOpen={open_limit}\n                onRequestClose={e => {\n                    closeModalLimit(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModalLimit} />\n                <h4><b>Set Limit Value</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Loan Limit</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"number\" className=\"form-control\"\n                                            name=\"amount\" placeholder='Enter Amount'\n                                            value={state_value.amount} onChange={handleChange} />\n                                    </div>\n                                </div>\n                                <br /><br />\n                            </div>\n\n                            <div className=\"form-group\" >\n                                <div className=\"row\" >\n                                    <div className=\"col-md-12\" >\n                                        <textarea name=\"description\"\n                                            style={\n                                                { paddingTop: '20px' }}\n                                            onChange={e => {\n                                                setDescription(e.target.value)\n                                            }}\n                                            className=\"col-md-12\"\n                                            placeholder=\"type your reason here\"\n                                            id=\"description\"\n                                            cols=\"col-md-1\"\n                                            rows=\"20\" >\n                                        </textarea>\n                                    </div>\n                                </div>\n                            </div>\n                            <br />\n                            <br />\n\n\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <Button className=\"account__btn\" type='submit' onClick={onSubmitLimit} color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                }</Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n\n            {customer_statement ?\n                <Redirect\n                    to={{\n                        pathname: '/customer_statement',\n                        state: {\n                            reference: {\n                                reference: statement_reference,\n                                id: state.location.state.farmer.id,\n                                name: state.location.state.farmer.name,\n                                id_no: state.location.state.farmer.id_no\n                            }\n                        }\n                    }}\n                /> : null}\n\n            {\n                home === true ?\n                    <>\n                        <Redirect to=\"customers\" />\n                    </> :\n\n                    <Card>\n                        <CardBody className=\"profile__card\">\n                            <br />\n                            <div className=\"row col-12\">\n                                <div className=\"col-6\">\n\n                                    <div className=\"profile__information\">\n                                        <div className=\"profile__avatar\">\n                                            <Avatar name={state.location.state.farmer.name} />\n                                        </div>\n\n\n                                        <div className=\"profile__data\">\n                                            <br />\n                                            <p className=\"profile__name\" style={{ marginBottom: \"10px\" }}>Farmer Name: {customer_data.name}</p>\n                                            <p className=\"profile__name\" style={{ marginBottom: \"10px\" }}>ID No: {customer_data.id_no}</p>\n                                            <p className=\"profile__name\" style={{ marginBottom: \"10px\" }}>STOCK AMOUNT: <b style={{ color: 'green' }}> {formatCurrency(customer_data.stock_amount)}</b></p>\n                                            <p className=\"profile__name\" style={{ marginBottom: \"10px\" }}>LOAN LIMIT: <b style={{ color: 'green' }}> {formatCurrency(customer_data.loan_limit)}</b></p>\n\n                                            <p className=\"profile__name\" style={{ marginBottom: \"10px\" }}>\n\n\n                                                <Row>\n                                                    {document_status === true ?\n                                                        <>\n                                                            <a href={customer_document.mpesa_statement}>\n                                                                <Button className=\"pull-left btn-sm btn btn-primary\" style={{ color: \"white\" }}>\n                                                                    MPesa Statement\n                                                                </Button>\n                                                            </a>&nbsp;&nbsp;\n\n                                                            <a href={customer_document.business_permit} >\n                                                                <Button className=\"pull-left btn-sm btn btn-primary\" style={{ color: \"white\" }}>\n                                                                    Business Permit\n                                                                </Button>\n                                                            </a>&nbsp;&nbsp;\n\n                                                            <a href={customer_document.kra_pin}>\n                                                                <Button className=\"pull-left btn-sm btn btn-primary\" style={{ color: \"white\" }}>\n                                                                    KRA PIN\n                                                                </Button>\n                                                            </a>\n                                                            <Link to={{\n                                                                pathname: '/customer_deposits',\n                                                                state: {\n                                                                    farmer_name: state.location.state.farmer.name,\n                                                                    farmer_id: state.location.state.farmer.id,\n                                                                    id_no: state.location.state.farmer.id_no,\n                                                                }\n                                                            }}>\n                                                                <Button className=\"pull-left btn-sm btn btn-primary\" style={{ color: \"white\" }}>\n                                                                    Customer Deposits\n                                                                </Button>\n                                                            </Link>\n\n\n                                                        </>\n                                                        : <h4 style={{ color: \"red\" }}>Documents not uploaded</h4>\n                                                    }\n\n\n                                                </Row>\n\n                                            </p>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n\n                                <div className=\"col-4\">\n                                    {document_status === true ?\n                                        customer_data.check_status === 0 ?\n                                            USER.role === \"agent\" ?\n                                                <Button className=\"pull-left btn-sm btn btn-danger\" onClick={openModal} style={{ color: \"white\" }}>\n                                                    Record Stock Value\n                                                </Button>\n                                                : null\n                                            :\n                                            customer_data.check_status === 1 ?\n                                                USER.role === 'admin' ? <Button className=\"pull-left btn-sm btn btn-danger\" onClick={openModalLimit} style={{ color: \"white\" }}>\n                                                    Set Loan Limit\n                                                </Button> : <h4 style={{ color: \"green\" }}>Documents Verified!</h4>\n                                                : null\n                                        : null\n                                    }\n                                </div>\n                                <div className=\"col-2\">\n\n                                    <>\n                                        <Button className=\"pull-right btn-sm\" onClick={backHome} outline color=\"primary\">\n                                            Back to Customers\n                                        </Button>\n                                    </>\n                                </div>\n                            </div>\n                            <div className=\"tabs tabs--bordered-top\" >\n                                <div className=\"tabs__wrap\">\n\n                                    {isLoading === false ?\n                                        <TabContent>\n\n                                            <TabPane>\n                                                {document_status === true ?\n\n\n                                                    <Row>\n                                                        <Col md={12} lg={12}>\n                                                            <ProductItems items={\n                                                                [\n                                                                    {\n                                                                        id: 1,\n                                                                        src: `${customer_document.id_front}`,\n                                                                        title: 'ID Front',\n                                                                        colors: ['#00b3c6', '#50e3c2', '#fa4a86'],\n                                                                    },\n                                                                    {\n                                                                        id: 2,\n                                                                        src: `${customer_document.id_back}`,\n                                                                        title: 'ID Back Page',\n                                                                        colors: ['#d4d4d4', '#5ff4d3', '#f7a9c4'],\n                                                                    },\n                                                                ]\n                                                            } />\n                                                        </Col>\n                                                    </Row>\n                                                    : null}\n                                                <div >\n                                                    Your loans Total Loans: <b>{datatotal}</b>\n                                                </div>\n                                                <Table>\n\n                                                    <ReactDatatable\n                                                        config={config}\n                                                        records={loans}\n                                                        columns={columns_livestock}\n                                                        dynamic={true}\n                                                        id=\"tsc\"\n                                                        loading={isLoading}\n                                                        total_record={datatotal}\n                                                        onChange={tableChangeHandler} />\n                                                </Table>\n                                            </TabPane>\n                                        </TabContent>\n                                        :\n                                        <div className=\"text-center h-50\">\n                                            <Loader\n                                                type=\"Puff\"\n                                                color=\"#00BFFF\"\n                                                height={50}\n                                                width={50} //3 secs\n                                            />\n                                        </div>\n                                    }\n\n\n                                </div>\n                            </div >\n                        </CardBody >\n\n                    </Card >\n            }\n\n\n\n        </div >\n    );\n}\n\nexport default CustomerDetails;\n","import React from \"react\";\nimport Gallery from \"react-imageslides\";\n\nexport default function ImageView(state) {\n\n    return (\n        <div>\n            {/* <Gallery\n                isOpen ={state.is_open}\n                images={[state.url_src]}\n                tapClose={false}\n                index={0}\n                // onClick={() => {\n\n                //     alert(\"yes\")\n                //   }\n                //   }\n            /> */}\n\n            <Gallery\n                isOpen={state.location.state.is_open}\n                images={[state.location.state.url_src]}\n                tapClose={false}\n                index={0}\n            />\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\nimport { baseURL, CONFIG, useStyles } from '../../configs/exports';\nimport Loader from \"react-loader-spinner\";\nimport \"../../_assets/css/csv.css\";\nimport * as moment from 'moment';\nimport {\n    Card, CardBody, Table\n} from 'reactstrap';\n// import EditApplicant from './EditApplicant';\nimport { Autorenew } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport ReactDatatable from '@ashvin27/react-datatable';\n\n\n\n\nconst SMSLogs = () => {\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n    const [smsLog, setSMSLog] = useState([])\n    const [spin, setSpin] = useState(false);\n    const refreshCanvas = () => {\n        setSpin(true);\n        setTimeout(() => {\n            setSpin(false);\n        }, 1000);\n    };\n    const classes = useStyles();\n\n\n\n    // const [avatar, setAvatar] = useState(\"\") // set profile picture\n\n\n    useEffect(() => {\n        // consuming API based on active tab\n        let sms_url = baseURL + \"sms?\" + queryString;\n        // setLoad(true)\n        // tab 1 API call...\n        axios.all([\n            axios.get(sms_url, CONFIG),\n        ]).then(axios.spread((smsResponse) => {\n            let data = [];\n            if (smsResponse.data.data.length > 0) {\n                setLoad(false)\n                for (let i = 0; i < smsResponse.data.data.length; i++) {\n\n                    // format amount\n                    let date = { dates: (moment.utc(smsResponse.data.data[i].created_on).format('DD/MM/YYYY HH:mm:ss')) };\n                    data.push(Object.assign(date, smsResponse.data.data[i]));\n                    setLoad(false)\n                }\n                setDataTotal(smsResponse.data.total)\n                setSMSLog(data)\n            } else {\n                setLoad(false)\n                setSMSLog(data)\n            }\n        })).catch(error => {\n            // alert(JSON.stringify(error.response))\n        })\n    }, [queryString]);\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [100, 200, 500, 1000],\n        show_filter: false,\n        show_pagination: true,\n        pagination: 'advance',\n        page_size: 100,\n        button: {\n            csv: true\n        },\n        show_length_menu: true,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Filter here..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n\n\n    //sms columns list\n\n    const columns_sms = [\n        {\n            key: \"destination\",\n            TrOnlyClassName: 'cell', text: \"Destination\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"origin\",\n            TrOnlyClassName: 'cell', text: \"Origin\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        // {\n        //     key: \"status\",\n        //     TrOnlyClassName: 'cell', text: \"Send\",\n        //     className: \"tsc\",\n        //     align: \"left\"\n        // },\n        {\n            key: \"message\",\n            TrOnlyClassName: 'cell', text: \"Message\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'cell', text: \"Date Created\",\n            className: \"tsc\",\n            align: \"left\"\n        }\n    ];\n\n\n\n\n    // handles paginations\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\")\n                    + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n\n    //UI returned\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n\n            <Card>\n                <CardBody>\n                    <br />\n                    <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n\n                        onClick={\n                            () => {\n                                refreshCanvas()\n                                setQueryString(require(\"randomstring\").generate({\n                                    length: 1,\n                                    charset: 'alphanumeric',\n                                    capitalization: 'lowercase'\n                                }))\n                            }}\n                    >\n                        Refresh\n                        <Autorenew\n                            className={clsx({\n                                [classes.refresh]: true,\n                                spin: spin\n                            })}\n                            onClick={\n                                () => {\n                                    refreshCanvas()\n                                    setQueryString(require(\"randomstring\").generate({\n                                        length: 1,\n                                        charset: 'alphanumeric',\n                                        capitalization: 'lowercase'\n                                    }))\n                                }}\n                            spin={360}\n                        />\n\n                    </button>\n\n                    <div className=\"tabs tabs--bordered-top\" >\n                        <div className=\"tabs__wrap\">\n\n                            {isLoading === false ?\n\n                                <Table>\n\n\n                                    <div >\n                                        Total SMS: <b>{datatotal}</b>\n                                        <br /><br />\n                                    </div>\n\n                                    <ReactDatatable\n                                        config={config}\n                                        records={smsLog}\n                                        columns={columns_sms}\n                                        dynamic={true}\n                                        id=\"tsc\"\n                                        loading={isLoading}\n                                        total_record={datatotal}\n                                        onChange={tableChangeHandler} />\n\n                                </Table>\n\n                                :\n                                <div className=\"text-center h-50\">\n                                    <Loader\n                                        type=\"Puff\"\n                                        color=\"#00BFFF\"\n                                        height={50}\n                                        width={50} //3 secs\n                                    />\n                                </div>\n                            }\n\n\n                        </div>\n                    </div>\n                </CardBody>\n\n            </Card>\n\n\n        </div>\n    );\n}\n\nexport default SMSLogs;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { baseURL, CONFIG } from '../../configs/exports';\nimport RefreshIcon from 'mdi-react/RefreshCircleIcon';\nimport * as moment from 'moment';\nimport ReactDatatable from '@ashvin27/react-datatable';\n\n\n//farmer hooks\n\nconst WithdrawRequests = () => {\n\n    const [farmer, setFarmer] = useState([])\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n\n    useEffect(() => {\n        setLoad(true)\n\n        let url = baseURL + `withdrawals?` + queryString;\n        // alert(url)\n        axios.all([\n            axios.get(url, CONFIG)\n        ]).then(axios.spread((farmerResponse) => {\n            let data = [];\n            if (farmerResponse.data.data.length > 0) {\n                setDataTotal(farmerResponse.data.data.length)\n                setLoad(false)\n                for (let i = 0; i < farmerResponse.data.data.length; i++) {\n                    let date = { dates: (moment.utc(farmerResponse.data.data[i].created_on).format('DD/MM/YYYY HH:mm:ss')) };\n                    data.push(Object.assign(date, farmerResponse.data.data[i]));\n                    setLoad(false)\n                }\n                setDataTotal(farmerResponse.data.total)\n                setFarmer(data)\n            } else {\n                setLoad(false)\n                setFarmer(data)\n            }\n        }))\n\n    }, [queryString]);\n\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [20, 100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        pagination: 'advance',\n        page_size: 20,\n        button: {\n            csv: true,\n            excel: true\n        },\n        show_length_menu: true,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Search here..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n\n\n    const columns = [\n        {\n            key: \"name\",\n            TrOnlyClassName: 'cell',\n            text: \"Name\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"msisdn\",\n            TrOnlyClassName: 'cell',\n            text: \"Phone#\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"transaction_id\",\n            TrOnlyClassName: 'cell',\n            text: \"Transaction ID\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"action\",\n            text: \"Status\",\n            TrOnlyClassName: 'cell',\n            className: \"cell\",\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n\n                        {record.status === 'success' ?\n                            <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                success\n                            </span>\n                            :\n                            record.status === 'pending' ?\n                                <span class=\"badge-warning\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                    pending\n                                </span>\n\n                                :\n                                <>\n                                    {\n                                        record.status === 'failed' ?\n                                            <span class=\"badge-danger\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                                failed\n                                            </span>\n                                            : null\n                                    }\n                                </>\n                        }\n                    </Fragment >\n                );\n            }\n        },\n\n        {\n            key: \"reference\",\n            TrOnlyClassName: 'cell',\n            text: \"Ref#\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        // {\n        //     key: \"action\",\n        //     text: \"Loan Status\",\n        //     TrOnlyClassName: 'cell',\n        //    className: \"tsc\",\n        //     width: 250,\n        //     sortable: false,\n        //     cell: record => {\n        //         return (\n        //             <Fragment className=\"center\" >\n\n        //                 {record.status === 0 ?\n        //                     <div>\n        //                         <span class=\"badge-danger\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n        //                             Pending\n        //                         </span>\n        //                     </div>\n        //                     : null}\n        //                 {record.status === 1 ?\n        //                     <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n        //                         Success\n        //                     </span>\n        //                     : null\n        //                 }\n        //             </Fragment >\n        //         );\n        //     }\n        // },\n        {\n            key: \"amount\",\n            TrOnlyClassName: 'cell', text: \"Amount\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'cell', text: \"Date\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n    ];\n\n    // row clickerd\n    // const rowClickedHandler = (data) => {\n    //     setFarmerProps(data);\n    //     setFarmerDetails(true);\n    // };\n\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n\n\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            < >\n                < Card >\n                    <CardBody >\n                        <Table responsive hover>\n                            <div className=\"panel-body\" >\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4> <b>Withdrawal Requests</b></h4>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n                                            onClick={\n                                                () => {\n                                                    setQueryString(require(\"randomstring\").generate({\n                                                        length: 1,\n                                                        charset: 'alphanumeric',\n                                                        capitalization: 'lowercase'\n                                                    }))\n                                                }} >\n                                            <RefreshIcon />\n                                        </button>\n                                    </div>\n                                </div>\n                                <br />\n                                <div >\n                                    Total Requests: <b>{datatotal}</b>\n                                    <br /><br />\n                                </div>\n                                <ReactDatatable\n                                    config={config}\n                                    records={farmer}\n                                    columns={columns}\n                                    dynamic={true}\n                                    id=\"tsc\"\n                                    loading={isLoading}\n                                    total_record={datatotal}\n                                    onChange={tableChangeHandler} />\n                            </div>\n                        </Table>\n                    </CardBody>\n\n\n                </Card>\n            </>\n        </div>\n    )\n\n}\nexport default WithdrawRequests;\n","import React, { useState, Fragment, useEffect } from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\n\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\n\nimport { Card, CardBody, Table, Nav, NavItem, NavLink } from 'reactstrap';\n\nimport { baseURL, CONFIG, formatCurrency, useStyles } from '../../configs/exports';\nimport * as moment from 'moment';\n// import loanDetails from './loanDetails';\nimport { Redirect } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Autorenew } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\n\n\n//loan hooks\n\nconst Loan = () => {\n    const [loan, setloan] = useState([])\n    const [loanProps, setloanProps] = useState([])\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n    const [loanDetails, setloanDetails] = useState(false)\n    const [activeTab, setActiveTab] = useState(\"1\")\n    const [spin, setSpin] = useState(false);\n    const refreshCanvas = () => {\n        setSpin(true);\n        setTimeout(() => {\n            setSpin(false);\n        }, 1000);\n    };\n    const [total_loans, setTotalLoans] = useState(0)\n\n    const [loan_issued, setTotalIssued] = useState(0)\n\n    const classes = useStyles();\n\n\n\n    useEffect(() => {\n        setLoad(true)\n\n        let url;\n        url = baseURL + `loan?` + queryString;\n\n        axios.all([\n            axios.get(url, CONFIG)\n        ]).then(axios.spread((loanResponse) => {\n\n\n            let mloan = loanResponse.data.data.filter(item => item.status === parseInt(activeTab))\n\n            let data = [];\n            if (mloan.length > 0) {\n                setDataTotal(mloan.length)\n                setLoad(false)\n                let valueExpected = 0\n                let countExpected = 0\n\n                let valueCount = 0\n                let countCount = 0\n\n\n                for (let i = 0; i < mloan.length; i++) {\n\n                    let mname, memail, mcountry, magent, mbranch;\n                    countCount = 1\n                    valueCount += countCount //count loans issued\n\n\n                    countExpected = (mloan[i].total_amount)\n                    valueExpected += countExpected //expected\n\n\n                    if (mloan[i].agent_name == null) {\n                        magent = { magent: \"_\" };\n                    } else {\n                        magent = { magent: mloan[i].agent_name };\n                    }\n\n                    if (mloan[i].branch_name == null) {\n                        mbranch = { mbranch: \"_\" };\n                    } else {\n                        mbranch = { mbranch: mloan[i].branch_name };\n                    }\n\n\n                    if (mloan[i].country == null) {\n                        mcountry = { mcountry: \"_\" };\n                    } else {\n                        mcountry = { mcountry: mloan[i].country };\n                    }\n\n                    if (mloan[i].name == null) {\n                        mname = { mname: \"_\" };\n                    } else {\n                        mname = { mname: mloan[i].name };\n                    }\n\n\n                    if (mloan[i].email == null) {\n                        memail = { memail: \"_\" };\n                    } else {\n                        memail = { memail: mloan[i].email };\n                    }\n\n                    let f_amount = { f_amount: formatCurrency(parseFloat(mloan[i].total_amount).toFixed(2)) };\n                    let f_amount_interest = { f_amount_interest: formatCurrency(mloan[i].interest) };\n\n                    let f_amount_limit = { f_amount_limit: formatCurrency(parseFloat(mloan[i].loan_limit).toFixed(2)) };\n                    let enddate = { enddates: (moment.utc(mloan[i].end_date).format('DD/MM/YYYY')) };\n\n                    let date = { dates: (moment.utc(mloan[i].created_on).format('DD/MM/YYYY')) };\n\n                    data.push(Object.assign(date, enddate, f_amount_interest, f_amount_limit, mbranch, mcountry, magent, mname, memail, f_amount, mloan[i]));\n                    setLoad(false)\n                }\n\n                setTotalLoans(valueCount)\n                setTotalIssued(formatCurrency(valueExpected))\n                setDataTotal(loanResponse.data.total)\n                setloan(data)\n            } else {\n                setLoad(false)\n                setloan(data)\n            }\n        }))\n\n    }, [activeTab, queryString]);\n\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        pagination: 'advance',\n        page_size: 100,\n        button: {\n            csv: true\n        },\n        show_length_menu: true,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Search..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n    const columns = [\n        {\n            key: \"mname\",\n            TrOnlyClassName: 'cell',\n            text: \"Name\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"msisdn\",\n            TrOnlyClassName: 'cell',\n            text: \"Phone#\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n\n        {\n            key: \"location\",\n            TrOnlyClassName: 'cell',\n            text: \"Location\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"f_amount_limit\",\n            TrOnlyClassName: 'cell',\n            text: \"Limit\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"f_amount\",\n            TrOnlyClassName: 'cell',\n            text: \"Amount Issued\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"interest\",\n            TrOnlyClassName: 'cell',\n            text: \"Interest\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n\n        {\n            key: \"action\",\n            text: \"Status\",\n            TrOnlyClassName: 'cell',\n            className: \"cell\",\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n\n                        {record.status === 1 ?\n                            <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                Applied\n                            </span>\n                            :\n                            record.status === 2 ?\n                                <span class=\"badge-success\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                    Paid\n                                </span>\n\n                                :\n                                <>\n                                    {\n                                        record.status === 3 ?\n                                            <span class=\"badge-danger\" style={{ borderRadius: \"5px\", padding: \"2px\" }}>\n                                                Defauled\n                                            </span>\n                                            : null\n                                    }\n                                </>\n                        }\n                    </Fragment >\n                );\n            }\n        },\n        {\n            key: \"enddates\",\n            TrOnlyClassName: 'tsc',\n            text: \"End Date\",\n            className: \"cell\",\n            align: \"left\"\n        },\n        {\n            key: \"agent_name\",\n            TrOnlyClassName: 'cell',\n            text: \"Agent\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"branch_name\",\n            TrOnlyClassName: 'cell',\n            text: \"Branch\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"country_name\",\n            TrOnlyClassName: 'cell',\n            text: \"Country\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n\n\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'tsc',\n            text: \"Date Created\",\n            className: \"cell\",\n            align: \"left\"\n        },\n\n        {\n            key: \"action\",\n            text: \"Options\",\n            TrOnlyClassName: 'cell',\n            className: \"cell\",\n            width: 250,\n            sortable: false,\n            cell: record => {\n                return (\n                    <Fragment className=\"center\" >\n\n                        <button className=\"btn btn-primary btn-sm\"\n                            title=\"View pics Details\"\n                            style={\n                                { marginRight: '10px' }}\n                            onClick={() => {rowClickedHandler(record)}} >\n                            Statement\n                        </button>\n\n                    </Fragment>\n                );\n            }\n        }\n    ];\n\n\n    // row clickerd\n    const rowClickedHandler = (data) => {\n        setloanProps(data);\n        setloanDetails(true);\n    };\n\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n    const toggle = (activeTab) => {\n\n        setActiveTab(activeTab)\n\n    }\n\n\n    // return UI\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            < >\n                {loanDetails === true ?\n                    <>\n                        <Redirect\n                            to={{\n                                pathname: '/customer_statement',\n                                state: {\n                                    reference: {\n                                        reference:  loanProps.reference,\n                                        id: loanProps.customer_id,\n                                        name: loanProps.name,\n                                        id_no: loanProps.id_no\n                                    }\n\n                                }\n                            }}\n                        />\n                    </> :\n                    null}\n                < Card >\n                    <CardBody >\n                        <h4><b>Loans</b></h4><br />\n                        <Table responsive hover>\n                            <div className=\"panel-body\" >\n\n                                <Nav tabs>\n\n                                    <NavItem className='tablayout'>\n                                        <NavLink\n                                            className={classnames({ active: activeTab === '1' })}\n                                            onClick={() => {\n                                                toggle('1');\n                                            }}\n                                        >\n                                            Active\n                                        </NavLink>\n                                    </NavItem>\n                                    <NavItem className='tablayout'>\n                                        <NavLink\n                                            className={classnames({ active: activeTab === '2' })}\n                                            onClick={() => {\n                                                toggle('2');\n                                            }}\n                                        >\n                                            Paid\n                                        </NavLink>\n                                    </NavItem>\n                                    <NavItem className='tablayout'>\n                                        <NavLink\n                                            className={classnames({ active: activeTab === '3' })}\n                                            onClick={() => {\n                                                toggle('3');\n                                            }}\n                                        >\n                                            Defaulted\n                                        </NavLink>\n                                    </NavItem>\n\n                                </Nav>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4>Total Loan Issued: <b>{formatCurrency(loan_issued)}</b></h4>\n                                        <h4>Loan Count: <b>{total_loans}</b></h4>\n\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n\n                                            onClick={\n                                                () => {\n                                                    refreshCanvas()\n                                                    setQueryString(require(\"randomstring\").generate({\n                                                        length: 1,\n                                                        charset: 'alphanumeric',\n                                                        capitalization: 'lowercase'\n                                                    }))\n                                                }}\n                                        >\n                                            Refresh\n                                            <Autorenew\n                                                className={clsx({\n                                                    [classes.refresh]: true,\n                                                    spin: spin\n                                                })}\n                                                onClick={\n                                                    () => {\n                                                        refreshCanvas()\n                                                        setQueryString(require(\"randomstring\").generate({\n                                                            length: 1,\n                                                            charset: 'alphanumeric',\n                                                            capitalization: 'lowercase'\n                                                        }))\n                                                    }}\n                                                spin={360}\n                                            />\n\n                                        </button>\n                                    </div>\n                                </div>\n                                <br />\n                                <ReactDatatable\n                                    config={config}\n                                    records={loan}\n                                    columns={columns}\n                                    dynamic={true}\n                                    id=\"tsc\"\n                                    loading={isLoading}\n                                    total_record={datatotal}\n                                    onChange={tableChangeHandler} />\n                            </div>\n                        </Table>\n                    </CardBody>\n\n\n                </Card>\n\n            </>\n        </div>\n    )\n\n}\nexport default Loan;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\nimport { Button, Card, CardBody, Table } from 'reactstrap';\nimport { baseURL, CONFIG, formatCurrency, useStyles } from '../../configs/exports';\nimport * as moment from 'moment';\nimport { Autorenew } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { Link } from 'react-router-dom';\nimport ReactDatatable from '@ashvin27/react-datatable';\n\n\n//loan hooks\n\nconst CuastomerStatement = (state) => {\n\n\n\n    const [loan, setloan] = useState([])\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n\n    // alert(JSON.stringifystate.location.state.loan_id)\n    const [spin, setSpin] = useState(false);\n    const refreshCanvas = () => {\n        setSpin(true);\n        setTimeout(() => {\n            setSpin(false);\n        }, 1000);\n    };\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        setLoad(true)\n\n        let url = baseURL + `customer_statement?filter_value=` + state.location.state.reference.reference;\n        // alert(url)\n        axios.all([\n            axios.get(url, CONFIG)\n        ]).then(axios.spread((loanResponse) => {\n            let data = [];\n            if (loanResponse.data.data.length > 0) {\n                /**\n               * @description If list is\n               */\n                let params = new URLSearchParams(queryString)\n\n                let id = parseInt(params.get(\"page_number\"))\n\n                let p = 0;\n                if (id > 1) {\n                    p = (((id - 1) * parseInt(params.get(\"page_size\"))))\n                }\n\n                setDataTotal(loanResponse.data.data.length)\n                setLoad(false)\n                for (let i = 0; i < loanResponse.data.data.length; i++) {\n                    p++;\n                    let unrow = { row: p }\n\n                    let m_credit = { m_credit: formatCurrency(loanResponse.data.data[i].credit) };\n                    let m_debit = { m_debit: formatCurrency(loanResponse.data.data[i].debit + loanResponse.data.data[i].interest) };\n                    let m_balance = { m_balance: formatCurrency(loanResponse.data.data[i].balance) };\n                    let date = { dates: (moment.utc(loanResponse.data.data[i].created_on).format('DD/MM/YYYY HH:mm:ss')) };\n                    data.push(Object.assign(date, unrow, m_debit, m_credit, loanResponse.data.data[i]));\n                    setLoad(false)\n                }\n                setDataTotal(loanResponse.data.total)\n                setloan(data)\n            } else {\n                setLoad(false)\n                setloan(data)\n            }\n        }))\n\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\n\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [20, 100, 200, 500],\n        show_filter: false,\n        show_pagination: false,\n        pagination: 'advance',\n        page_size: 20,\n        button: {\n            csv: true,\n            excel: true,\n            print: true\n        },\n        show_length_menu: false,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Transaction ID/Reference..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n\n    const columns = [\n        {\n            key: \"row\",\n            TrOnlyClassName: 'cell',\n            text: \"#\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"m_debit\",\n            TrOnlyClassName: 'cell',\n            text: \"Debit\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"m_credit\",\n            TrOnlyClassName: 'cell',\n            text: \"Credit\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"m_debit\",\n            TrOnlyClassName: 'cell',\n            text: \"Balance\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"description\",\n            TrOnlyClassName: 'cell',\n            text: \"Narrative\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'cell', text: \"Date\",\n            className: \"tsc\",\n            align: \"left\"\n        }\n    ];\n\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n\n\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            < >\n                < Card >\n                    <CardBody >\n                        <Table responsive hover>\n                            <div className=\"panel-body\" >\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4> <b>Customer Statement</b> {state.location.state.reference.name}</h4>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <Link\n                                            to={{\n                                                pathname: '/customer_details',\n                                                state: {\n                                                    farmer: {\n                                                        id: state.location.state.reference.id,\n                                                        name: state.location.state.reference.name,\n                                                        id_no: state.location.state.reference.id_no\n                                                    }\n                                                }\n                                            }}>\n                                            <Button className=\"pull-right btn-sm\" outline color=\"primary\">\n                                                Swtich back\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                    <div className=\"col-3\">\n\n                                        <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n\n                                            onClick={\n                                                () => {\n                                                    refreshCanvas()\n                                                    setQueryString(require(\"randomstring\").generate({\n                                                        length: 1,\n                                                        charset: 'alphanumeric',\n                                                        capitalization: 'lowercase'\n                                                    }))\n                                                }}\n                                        >\n                                            Refresh\n                                            <Autorenew\n                                                className={clsx({\n                                                    [classes.refresh]: true,\n                                                    spin: spin\n                                                })}\n                                                onClick={\n                                                    () => {\n                                                        refreshCanvas()\n                                                        setQueryString(require(\"randomstring\").generate({\n                                                            length: 1,\n                                                            charset: 'alphanumeric',\n                                                            capitalization: 'lowercase'\n                                                        }))\n                                                    }}\n                                                spin={360}\n                                            />\n\n                                        </button>\n                                    </div>\n                                </div>\n                                <br />\n                                <ReactDatatable\n                                    config={config}\n                                    records={loan}\n                                    columns={columns}\n                                    dynamic={true}\n                                    id=\"tsc\"\n                                    loading={isLoading}\n                                    total_record={datatotal}\n                                    onChange={tableChangeHandler} />\n                            </div>\n                        </Table>\n                    </CardBody>\n\n\n                </Card>\n\n            </>\n        </div >\n    )\n\n}\nexport default CuastomerStatement;","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { CardBody, Card, Button, Form } from 'reactstrap';\nimport { baseURL_PORTAL, CONFIG, errorToast, successToast, ToastTable } from '../../configs/exports';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport moment from 'moment';\nimport { MDBCloseIcon } from \"mdbreact\";\nimport Modal from 'react-modal';\n\nconst Countries = () => {\n\n    // hooks definations variables srtores\n    const [open, IsOpen] = useState(false);  // define open edit modal\n\n    const [open_add, IsOpenAdd] = useState(false);  // define open edit modal\n\n    const [edit_record, setEditRecord] = useState({}); // store the table row array\n    const [data, setData] = useState([]);  // array of objects for data table  \n    const [isLoading, setLoad] = useState(false); // loading state\n    const [state, setState] = useState({\n        country_name: '',\n    });\n    const [randomstrng, setRandomString] = useState(''); // random string for the api\n\n\n    // const [country_name, setCountryName] = useState(''); // store the country name\n\n\n    // function being called once a component has been loaded\n    useEffect(() => {\n        setLoad(true);\n        axios.get(`${baseURL_PORTAL}country`, CONFIG).then(res => {\n            let new_data = []; // difine a new object\n\n            if (res.data.Countries.length > 0) {  // looping  through the array for modifing the data\n                for (let i = 0; i < res.data.Countries.length; i++) {\n                    let new_date = { new_date: moment(res.data.Countries[i].created_on).format('DD-MM-YYYY') }\n                    new_data.push(Object.assign(new_date, res.data.Countries[i]));\n                }\n\n                setLoad(false);\n            }\n            setData(new_data);\n            console.log(\"countires\", res.data.Countries);\n        }).catch(err => {\n            setLoad(false);\n            // if error on the api\n        })\n    }, [randomstrng])\n\n    // difine the table format\n    const columns = [\n        {\n            key: \"name\",\n            text: \"Country\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"new_date\",\n            text: \"Date Created\",\n            TrOnlyClassName: 'tsc',\n            className: \"tsc\",\n\n            sortable: true\n        },\n        {\n            key: \"action\",\n            text: \"Action\",\n            TrOnlyClassName: 'tsc',\n            cell: (record, index) => {\n                return (\n                    <Fragment>\n                        <button\n                            className=\"btn btn-primary btn-sm\"\n                            style={{ marginRight: '5px' }}\n                            onClick={() => OpenModal(record)}\n                        >\n                            Edit\n                        </button>\n                        <button\n                            className=\"btn btn-danger btn-sm\"\n                            onClick={() => { if (window.confirm('Are you sure you want to delete this country?')) handleDelete(record) }}\n                        >\n                            Delete\n                        </button>\n                    </Fragment>\n                );\n            }\n        }\n    ]\n\n    // open the edit modal\n    const OpenModal = (e) => {\n        IsOpen(true);\n        setEditRecord(e);\n        setState({\n            country_name: e.name\n        })\n    }\n\n    // table configs\n    const config = {\n        page_size: 100,\n        length_menu: [100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        filename: \"countires\",\n        button: {\n            excel: true,\n            print: true,\n            csv: true\n        }\n    }\n\n    // closes the edit modal\n    const closeModal = () => {\n        IsOpen(false);\n    }\n\n    //  close add modal\n    const closeModalAdd = () => {\n        IsOpenAdd(false)\n    }\n\n    const onChangeHandle = (e) => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    // handle onsubmit for the edit action\n    const onSubmitHandleEdit = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            name: state.country_name\n        }\n\n        axios.put(`${baseURL_PORTAL}country/${edit_record.name}`, formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Country updated successfully\");\n                IsOpen(false);\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                }, 3000)\n            }\n\n        }).catch(err => {\n            setLoad(false);\n            IsOpen(false)\n            errorToast(\"Country not updated\");\n\n\n            // if error on the api\n            // alert(JSON.stringify(err));\n        })\n    }\n\n\n    // handle delete action\n    const handleDelete = (e) => {\n        setLoad(true);\n        axios.delete(`${baseURL_PORTAL}country/${e.name}`, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Country deleted successfully\");\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpen(false);\n                }, 3000)\n            }\n\n        }).catch(\n            err => {setLoad(false)\n                errorToast(\"Not deleted\")\n            }\n        )\n    }\n\n\n    // add country action point\n\n    const onSubmitHandleAdd = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            name: state.country_name\n        }\n        axios.post(`${baseURL_PORTAL}country`, formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Country added successfully\");\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpenAdd(false);\n                }, 3000)\n            }\n\n        }).catch(err => {\n            errorToast(\"Error adding Country\");\n        })\n\n\n\n    }\n\n\n    //return function of UI\n    return (\n        <div>\n\n            {ToastTable()}\n\n            <Modal\n                isOpen={open_add}\n                onRequestClose={e => {\n                    closeModalAdd(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModalAdd} />\n                <h4><b>Add Country</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleAdd} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Name</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"country_name\" placeholder='Enter Country Name'\n                                            value={state.country_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n            <Modal\n                isOpen={open}\n                onRequestClose={e => {\n                    closeModal(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModal} />\n                <h4><b>Modify details</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleEdit} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Name</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"country_name\" placeholder='Enter Country Name'\n                                            value={state.country_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n            <Card>\n                <CardBody>\n                    <div className='row'>\n                        <div className='col-10'>\n                            <h4><b>Countries</b></h4>\n                        </div>\n                        <div className='col-2 float-right'>\n                            <div className='3'>\n                                <Button className=\"account__btn\" color=\"success\" onClick={() => { IsOpenAdd(true) }}>Add Country</Button>\n                            </div>\n                        </div>\n                        <br />\n                    </div>\n                    <ReactDatatable\n                        config={config}\n                        records={data}\n                        loading={isLoading}\n                        columns={columns}\n                        id=\"tsc\"\n                    />\n                </CardBody>\n\n            </Card>\n        </div>\n    )\n}\n\nexport default Countries;","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { CardBody, Card, Button, Form } from 'reactstrap';\nimport { baseURL_PORTAL, CONFIG, errorToast, successToast, ToastTable } from '../../configs/exports';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport moment from 'moment';\nimport { MDBCloseIcon } from \"mdbreact\";\nimport Modal from 'react-modal';\nimport Select from 'react-select';\n// import { SelectFetch } from 'react-select-fetch';\n\nconst Branches = () => {\n\n    // hooks definations variables srtores\n    const [open, IsOpen] = useState(false);  // define open edit modal\n\n    const [open_add, IsOpenAdd] = useState(false);  // define open edit modal\n\n    const [option, setOption] = useState()\n    const [edit_record, setEditRecord] = useState({}); // store the table row array\n    const [data, setData] = useState([]);  // array of objects for data table  \n    const [isLoading, setLoad] = useState(false); // loading state\n    const [state, setState] = useState({\n        branch_name: '',\n        country_name: '',\n    });\n    const [country, setCountry] = useState('');\n    const [randomstrng, setRandomString] = useState(''); // random string for the api\n\n\n    // const [branch_name, setBranchName] = useState(''); // store the branch name\n\n\n    // function being called once a component has been loaded\n    useEffect(() => {\n        setLoad(true);\n        axios.get(`${baseURL_PORTAL}branch`, CONFIG).then(res => {\n            let new_data = []; // difine a new object\n\n            if (res.data.Branches.length > 0) {  \n                // looping  through the array for modifing the data\n                for (let i = 0; i < res.data.Branches.length; i++) {\n                    // console.log(res.data.Branches)\n                    let new_date = { new_date: moment(res.data.Branches[i].created_on).format('DD-MM-YYYY') }\n                    new_data.push(Object.assign(new_date, res.data.Branches[i]));\n                }\n\n                setLoad(false);\n            }\n            \n            setData(new_data);\n            console.log(\"Branches\", res.data.Branches);\n        }).catch(err => {\n            console.log(err) //log error\n            setLoad(false);\n            // if error on the api\n        })\n\n         // get countries\n        axios.get(`${baseURL_PORTAL}country`, CONFIG).then (res => {\n            let data = res.data.Countries\n            // console.log(data)\n            let newOptions = data.map(d => ({\n                \"value\" : d.id,\n                \"label\" : d.name\n            }))\n\n            setTimeout(() => {\n                setOption(newOptions)\n            }, 300);\n        })\n    }, [randomstrng])\n\n    // difine the table format\n    const columns = [\n        {\n            key: \"name\",\n            text: \"Branch\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"country\",\n            text: \"Country\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"new_date\",\n            text: \"Date Created\",\n            TrOnlyClassName: 'tsc',\n            className: \"tsc\",\n\n            sortable: true\n        },\n        {\n            key: \"action\",\n            text: \"Action\",\n            TrOnlyClassName: 'tsc',\n            cell: (record, index) => {\n                return (\n                    <Fragment>\n                        <button\n                            className=\"btn btn-primary btn-sm\"\n                            style={{ marginRight: '5px' }}\n                            onClick={() => OpenModal(record)}\n                        >\n                            Edit\n                        </button>\n                        <button\n                            className=\"btn btn-danger btn-sm\"\n                            onClick={() => { if (window.confirm('Are you sure you want to delete this branch?')) handleDelete(record) }}\n                        >\n                            Delete\n                        </button>\n                    </Fragment>\n                );\n            }\n        }\n    ]\n\n    // open the edit modal\n    const OpenModal = (e) => {\n        IsOpen(true);\n        setEditRecord(e);\n        setState({\n            branch_name: e.name\n        })\n    }\n\n    // table configs\n    const config = {\n        page_size: 100,\n        length_menu: [100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        filename: \"countires\",\n        button: {\n            excel: true,\n            print: true,\n            csv: true\n        }\n    }\n\n    // closes the edit modal\n    const closeModal = () => {\n        IsOpen(false);\n    }\n\n    //  close add modal\n    const closeModalAdd = () => {\n        IsOpenAdd(false)\n    }\n\n    const onChangeHandle = (e) => {\n        setState({\n            branch_name : e.target.value,\n            // country_name : e.name\n        })\n        // setCountry(e.value)\n        // console.log(e.target.value,e.value)\n    }\n\n    const onChangeHandlecountry = (e) => {\n        setCountry(e.label)\n    }\n\n\n    // handle onsubmit for the edit action\n    const onSubmitHandleEdit = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            name: state.branch_name,\n            // country : state.country_name\n        }\n\n        axios.put(`${baseURL_PORTAL}branch/${edit_record.name}`, formatData, CONFIG).then(res => {\n            setLoad(true);\n            if (res.data.Success === true) {\n                successToast(\"Branch updated successfully\");\n                IsOpen(false);\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                }, 3000)\n            }\n\n        }).catch(err => {\n            setLoad(false);\n\n            errorToast(\"Branch not updated\");\n\n\n            // if error on the api\n            // alert(JSON.stringify(err));\n        })\n    }\n\n\n    // handle delete action\n    const handleDelete = (e) => {\n        setLoad(true);\n        axios.delete(`${baseURL_PORTAL}branch/${e.name}`, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Branch deleted successfully\");\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpen(false);\n                }, 3000)\n            }\n\n        }).catch(\n            err => {\n                errorToast(\"Not deleted\")\n            }\n        )\n    }\n\n\n    // add branch action point\n    const onSubmitHandleAdd = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            branch: state.branch_name,\n            country: country,\n        }\n        axios.post(`${baseURL_PORTAL}branch`, formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Branch added successfully\");\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpenAdd(false);\n                }, 3000)\n            }\n\n        }).catch(err => {\n            errorToast(\"Error adding Branch\");\n        })\n\n\n\n    }\n\n\n    //return function of UI\n    return (\n        <div>\n\n            {ToastTable()}\n\n\n\n\n\n            <Modal\n                isOpen={open_add}\n                onRequestClose={e => {\n                    closeModalAdd(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModalAdd} />\n                <h4><b>Add Branch</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleAdd} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Branch</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"branch_name\" placeholder='Enter Branch Name'\n                                            value={state.branch_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Country</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        {/* <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"country_name\" placeholder='Enter Country Name'\n                                            value={state.country_name} onChange={onChangeHandle} /> */}\n\n                                        <Select options={option} onChange={e => onChangeHandlecountry(e)} />\n\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n\n\n\n            <Modal\n                isOpen={open}\n                onRequestClose={e => {\n                    closeModal(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModal} />\n                <h4><b>Modify details</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleEdit} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Branch</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"branch_name\" placeholder='Enter Branch Name'\n                                            value={state.branch_name} onChange={onChangeHandle} />\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n\n\n            <Card>\n                <CardBody>\n                    <div className='row'>\n                        <div className='col-10'>\n                            <h4><b>Branches</b></h4>\n                        </div>\n                        <div className='col-2 float-right'>\n                            <div className='3'>\n                                <Button className=\"account__btn\" color=\"success\" onClick={() => { IsOpenAdd(true) }}>Add Branch</Button>\n                            </div>\n                        </div>\n                        <br />\n                    </div>\n                    <ReactDatatable\n                        config={config}\n                        records={data}\n                        loading={isLoading}\n                        columns={columns}\n                        id=\"tsc\"\n                    />\n                </CardBody>\n\n            </Card>\n        </div>\n    )\n\n\n}\n\n\nexport default Branches;","import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { CardBody, Card, Button, Form } from 'reactstrap';\nimport { baseURL_PORTAL, CONFIG, errorToast, successToast, ToastTable } from '../../configs/exports';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport moment from 'moment';\nimport { MDBCloseIcon } from \"mdbreact\";\nimport Modal from 'react-modal';\n\nconst Countries = () => {\n\n    // hooks definations variables srtores\n    const [open, IsOpen] = useState(false);  // define open edit modal\n\n    const [open_add, IsOpenAdd] = useState(false);  // define open edit modal\n\n    const [edit_record, setEditRecord] = useState({}); // store the table row array\n    const [data, setData] = useState([]);  // array of objects for data table  \n    const [isLoading, setLoad] = useState(false); // loading state\n    const [state, setState] = useState({\n    role_name: '',\n    });\n    const [randomstrng, setRandomString] = useState(''); // random string for the api\n\n\n    // const [country_name, setCountryName] = useState(''); // store the country name\n\n\n    // function being called once a component has been loaded\n    useEffect(() => {\n        setLoad(true);\n        axios.get(`${baseURL_PORTAL}role`, CONFIG).then(res => {\n            let new_data = []; // difine a new object\n\n            if (res.data.Roles.length > 0) {  // looping  through the array for modifing the data\n                for (let i = 0; i < res.data.Roles.length; i++) {\n                    let new_date = { new_date: moment(res.data.Roles[i].created_on).format('DD-MM-YYYY') }\n                    new_data.push(Object.assign(new_date, res.data.Roles[i]));\n                }\n\n                setLoad(false);\n            }\n            setData(new_data);\n            console.log(\"Roles\", res.data.Roles);\n        }).catch(err => {\n            setLoad(false);\n            // if error on the api\n        })\n    }, [randomstrng])\n\n    // difine the table format\n    const columns = [\n        {\n            key: \"name\",\n            text: \"Role\",\n            className: \"tsc\",\n            TrOnlyClassName: 'tsc',\n            sortable: true\n        },\n        {\n            key: \"new_date\",\n            text: \"Date Created\",\n            TrOnlyClassName: 'tsc',\n            className: \"tsc\",\n\n            sortable: true\n        },\n        {\n            key: \"action\",\n            text: \"Action\",\n            TrOnlyClassName: 'tsc',\n            cell: (record, index) => {\n                return (\n                    <Fragment>\n                        <button\n                            className=\"btn btn-primary btn-sm\"\n                            style={{ marginRight: '5px' }}\n                            onClick={() => OpenModal(record)}\n                        >\n                            Edit\n                        </button>\n                        <button\n                            className=\"btn btn-danger btn-sm\"\n                            onClick={() => { if (window.confirm('Are you sure you want to delete this role?')) handleDelete(record) }}\n                        >\n                            Delete\n                        </button>\n                    </Fragment>\n                );\n            }\n        }\n    ]\n\n    // open the edit modal\n    const OpenModal = (e) => {\n        IsOpen(true);\n        setEditRecord(e);\n        setState({\n            role_name: e.name\n        })\n    }\n\n    // table configs\n    const config = {\n        page_size: 100,\n        length_menu: [100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        filename: \"countires\",\n        button: {\n            excel: true,\n            print: true,\n            csv: true\n        }\n    }\n\n    // closes the edit modal\n    const closeModal = () => {\n        IsOpen(false);\n    }\n\n    //  close add modal\n    const closeModalAdd = () => {\n        IsOpenAdd(false)\n    }\n\n    const onChangeHandle = (e) => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    // handle onsubmit for the edit action\n    const onSubmitHandleEdit = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            name: state.role_name\n        }\n\n        axios.put(`${baseURL_PORTAL}role/${edit_record.name}`, formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Role updated successfully\");\n                IsOpen(false);\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                }, 3000)\n            }\n\n        }).catch(err => {\n            setLoad(false);\n            IsOpen(false)\n            errorToast(\"Role not updated\");\n\n\n            // if error on the api\n            // alert(JSON.stringify(err));\n        })\n    }\n\n\n    // handle delete action\n    const handleDelete = (e) => {\n        // e.preventDefault()\n        setLoad(true);\n        axios.delete(`${baseURL_PORTAL}role/${e.name}`, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Role deleted successfully\");\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpen(false);\n                }, 3000)\n            }\n\n        }).catch(\n            err => {\n                // setLoad(false)\n                errorToast(\"Not deleted\")\n            }\n        )\n    }\n\n\n    // add country action point\n\n    const onSubmitHandleAdd = (e) => {\n        e.preventDefault();\n        setLoad(true);\n        let formatData = {\n            name: state.role_name\n        }\n        \n        axios.post(`${baseURL_PORTAL}role`, formatData, CONFIG).then(res => {\n            setLoad(false);\n            if (res.data.Success === true) {\n                successToast(\"Role added successfully\");\n                // IsOpen(false)\n                // reload  after three sec0nd of success\n                setTimeout(() => {\n                    setRandomString(require(\"randomstring\").generate({\n                        length: 1,\n                        charset: 'alphanumeric',\n                        capitalization: 'lowercase'\n                    }))\n                    IsOpenAdd(false);\n                }, 3000)\n            }\n\n        }).catch(err => {\n            errorToast(\"Error adding Role\");\n        })\n    }\n\n\n    //return function of UI\n    return (\n        <div>\n\n            {ToastTable()}\n\n            <Modal\n                isOpen={open_add}\n                onRequestClose={e => {\n                    closeModalAdd(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModalAdd} />\n                <h4><b>Add Role</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleAdd} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Name</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"role_name\" placeholder='Enter Role Name'\n                                            value={state.role_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n\n\n\n            <Modal\n                isOpen={open}\n                onRequestClose={e => {\n                    closeModal(e);\n                }}\n\n                contentLabel=\"My dialog\"\n                className=\"mymodal\"\n                onAfterOpen={() => {\n                    document.body.style.overflow = 'hidden';\n                }}\n                onAfterClose={() => {\n                    document.body.removeAttribute('style');\n                }}\n                overlayClassName=\"myoverlay\"\n                closeTimeoutMS={500}\n            >\n                <MDBCloseIcon onClick={closeModal} />\n                <h4><b>Modify details</b></h4>\n                <br></br>\n                <>\n                    <Form className=\"form login-form\" onSubmit={onSubmitHandleEdit} >\n                        <div className=\"form__form-group\">\n                            <div className=\"col-md-10-offset-1\"><br />\n                                <div className=\"form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label className=\"form-label\">Name</label>\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <input id=\"input\" type=\"text\n                                                          \" className=\"form-control\"\n                                            name=\"role_name\" placeholder='Enter Role Name'\n                                            value={state.role_name} onChange={onChangeHandle} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"account__btns col-8 offset-2\" >\n                                <br />\n                                <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                    isLoading ? \"Please wait...\" : \"Submit\"\n                                } </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </>\n            </Modal>\n\n\n\n            <Card>\n                <CardBody>\n                    <div className='row'>\n                        <div className='col-10'>\n                            <h4><b>Roles</b></h4>\n                        </div>\n                        <div className='col-2 float-right'>\n                            <div className='3'>\n                                <Button className=\"account__btn\" color=\"success\" onClick={() => { IsOpenAdd(true) }}>Add Role</Button>\n                            </div>\n                        </div>\n                        <br />\n                    </div>\n                    <ReactDatatable\n                        config={config}\n                        records={data}\n                        loading={isLoading}\n                        columns={columns}\n                        id=\"tsc\"\n                    />\n                </CardBody>\n\n            </Card>\n        </div>\n    )\n\n\n}\n\n\nexport default Countries;","import React, { useState, useEffect } from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\n\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { baseURL, CONFIG, errorToast, formatCurrency, successToast, ToastTable, useStyles } from '../../configs/exports';\nimport * as moment from 'moment';\nimport { Autorenew } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport Modal from 'react-modal';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'reactstrap';\nimport { MDBCloseIcon } from \"mdbreact\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n//farmer hooks\n\nconst SuspendAccount = () => {\n\n    const [farmer, setFarmer] = useState([])\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n\n    const [open, isOpen] = React.useState(false);\n\n    const [spin, setSpin] = useState(false);\n\n\n    const [id_no, setIDNo] = useState(\"\")\n    const [transaction_id, setTransactionID] = useState(\"\")\n    const [msisdn, setMSISDN] = useState(\"\")\n    const [amount, setAmount] = useState(\"\")\n    const [name, setName] = useState(\"\")\n\n    const [id, setID] = useState(\"\")\n\n\n    const refreshCanvas = () => {\n        setSpin(true);\n        setTimeout(() => {\n            setSpin(false);\n        }, 1000);\n    };\n    const classes = useStyles();\n\n    useEffect(() => {\n        setLoad(true)\n\n        let url = baseURL + `suspend_account?` + queryString;\n        // alert(url)\n        axios.all([\n            axios.get(url, CONFIG)\n        ]).then(axios.spread((farmerResponse) => {\n            let data = [];\n            if (farmerResponse.data.data.length > 0) {\n                setDataTotal(farmerResponse.data.data.length)\n                setLoad(false)\n                for (let i = 0; i < farmerResponse.data.data.length; i++) {\n\n                    let fpaid_amount = { fpaid_amount: formatCurrency(parseFloat(farmerResponse.data.data[i].amount).toFixed(2)) };\n\n                    let date = { dates: (moment.utc(farmerResponse.data.data[i].created_on).format('DD/MM/YYYY HH:mm:ss')) };\n                    data.push(Object.assign(date, fpaid_amount, farmerResponse.data.data[i]));\n                    setLoad(false)\n                }\n                setDataTotal(farmerResponse.data.total)\n                setFarmer(data)\n            } else {\n                setLoad(false)\n                setFarmer(data)\n            }\n        }))\n\n    }, [queryString]);\n\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        pagination: 'advance',\n        page_size: 20,\n        button: {\n            csv: true,\n            excel: true,\n            print: true\n        },\n        show_length_menu: true,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Search here..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n\n\n\n    const columns = [\n        {\n            key: \"name\",\n            TrOnlyClassName: 'cell',\n            text: \"Name\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"user_id_no\",\n            TrOnlyClassName: 'cell',\n            text: \"ID NO.\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"fpaid_amount\",\n            TrOnlyClassName: 'cell',\n            text: \"Amount\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"transaction_id\",\n            TrOnlyClassName: 'cell',\n            text: \"Transaction ID\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'cell', text: \"Date\",\n            className: \"tsc\",\n            align: \"left\"\n        }\n        ,\n        {\n            key: \"action\",\n            text: \"Actions\",\n            TrOnlyClassName: 'cell',\n            className: \"cell\",\n            width: 250,\n            sortable: false,\n            cell: record => {\n                return (\n                    <React.Fragment className=\"center\" >\n                        <button className=\"btn btn-primary btn-sm\"\n                            title=\"View pics Details\"\n                            style={\n                                { marginRight: '10px' }}\n                            onClick={() => { openModal(record) }}\n                        >\n                            Reconcile\n                        </button>\n\n                    </React.Fragment >\n                );\n            }\n        },\n    ];\n\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n\n    const closeModal = e => {\n        isOpen(false);\n    };\n    const openModal = e => {\n        isOpen(true)\n\n        setIDNo(e.user_id_no)\n        setTransactionID(e.transaction_id)\n        setMSISDN(e.msisdn)\n        setAmount(e.amount)\n        setName(e.name)\n        setID(e.id)\n    };\n\n\n\n    // handle id no change\n    const handleChange = event => {\n        setIDNo(event.target.value);\n    };\n\n\n    // submit reconciliation\n    const onSubmit = e => {\n        e.preventDefault();\n        setLoad(true);\n        let formData =\n        {\n            \"TransID\": transaction_id,\n            \"FirstName\": name,\n            \"MiddleName\": \"\",\n            \"LastName\": \"\",\n            \"MSISDN\": msisdn,\n            \"BillRefNumber\": id_no,\n            \"TransAmount\": amount\n        }\n\n\n        let formData_id =\n        {\n            \"id\": id\n        }\n        axios.post(baseURL + 'confirmation_mobi', formData, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            }\n        }).then((response) => {\n\n            axios.post(baseURL + 'update_suspend', formData_id, CONFIG).then((response) => { }).catch(error => { });\n\n\n            setQueryString(require(\"randomstring\").generate({\n                length: 1,\n                charset: 'alphanumeric',\n                capitalization: 'lowercase'\n            }))\n            successToast(\"Successful\")\n            setLoad(false)\n            isOpen(false);\n\n\n\n        }).catch(error => {\n            setLoad(false)\n            errorToast(\"Error\")\n            setQueryString(require(\"randomstring\").generate({\n                length: 1,\n                charset: 'alphanumeric',\n                capitalization: 'lowercase'\n            }))\n\n        });\n    }\n\n\n\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            < >\n                < Card >\n\n                    {ToastTable()}\n\n                    <Modal\n                        isOpen={open}\n                        onRequestClose={e => {\n                            closeModal(e);\n                        }}\n                        contentLabel=\"My dialog\"\n                        className=\"mymodal\"\n                        onAfterOpen={() => {\n                            document.body.style.overflow = 'hidden';\n                        }}\n                        onAfterClose={() => {\n                            document.body.removeAttribute('style');\n                        }}\n                        overlayClassName=\"myoverlay\"\n                        closeTimeoutMS={500}\n                    >\n                        <MDBCloseIcon onClick={closeModal} />\n                        <h4><b>Confirm ID Number</b></h4>\n                        <>\n                            <Form className=\"form login-form\" onSubmit={onSubmit}>\n                                {/*n  <h5><b>Get Agent Number</b></h5> */}\n                                <div className=\"form__form-group\">\n                                    <br></br>\n\n                                    <span className=\"form__form-group-label\">ID No.</span>\n                                    <div className=\"form__form-group-field\">\n                                        <Form.Control\n                                            autoFocus\n                                            type=\"text\"\n                                            name=\"id_no\"\n                                            style={{ color: \"black\", borderColor: \"hsl(0,0%,80%)\" }}\n                                            placeholder=\"Enter ID No.\"\n                                            className=\"input-without-border-radius\"\n                                            value={id_no}\n                                            onChange={handleChange}\n                                        />\n                                    </div>\n                                    <br />\n                                </div>\n                                <div className=\"account__btns col-8 offset-2\">\n                                    <Button className=\"account__btn\" type='submit' color=\"success\"> {\n                                        isLoading ? \"Please wait...\" : \"Proceed\"\n                                    }</Button>\n                                </div>\n\n                            </Form>\n                        </>\n                    </Modal>\n\n                    <CardBody >\n                        <Table responsive hover>\n                            <div className=\"panel-body\" >\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4> <b>Suspense Account</b></h4>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n\n                                            onClick={\n                                                () => {\n                                                    refreshCanvas()\n                                                    setQueryString(require(\"randomstring\").generate({\n                                                        length: 1,\n                                                        charset: 'alphanumeric',\n                                                        capitalization: 'lowercase'\n                                                    }))\n                                                }}\n                                        >\n                                            Refresh\n                                            <Autorenew\n                                                className={clsx({\n                                                    [classes.refresh]: true,\n                                                    spin: spin\n                                                })}\n                                                onClick={\n                                                    () => {\n                                                        refreshCanvas()\n                                                        setQueryString(require(\"randomstring\").generate({\n                                                            length: 1,\n                                                            charset: 'alphanumeric',\n                                                            capitalization: 'lowercase'\n                                                        }))\n                                                    }}\n                                                spin={360}\n                                            />\n\n                                        </button>\n                                    </div>\n                                </div>\n                                <br />\n                                <div >\n                                    Total Deposits: <b>{datatotal}</b>\n                                    <br /><br />\n                                </div>\n                                <ReactDatatable\n                                    config={config}\n                                    records={farmer}\n                                    columns={columns}\n                                    dynamic={true}\n                                    id=\"tsc\"\n                                    loading={isLoading}\n                                    total_record={datatotal}\n                                    onChange={tableChangeHandler} />\n                            </div>\n                        </Table>\n                    </CardBody>\n\n\n                </Card>\n\n            </>\n        </div>\n    )\n\n}\nexport default SuspendAccount;","import React, { useState, useEffect } from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\n\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { baseURL, CONFIG, formatCurrency, useStyles } from '../../configs/exports';\nimport * as moment from 'moment';\nimport { Autorenew } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\n\n\n//farmer hooks\n\nconst DepositArchive = () => {\n\n    const [farmer, setFarmer] = useState([])\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n\n    const [spin, setSpin] = useState(false);\n    const refreshCanvas = () => {\n        setSpin(true);\n        setTimeout(() => {\n            setSpin(false);\n        }, 1000);\n    };\n    const classes = useStyles();\n\n    useEffect(() => {\n        setLoad(true)\n\n        let url = baseURL + `deposits?` + queryString;\n        // alert(url)\n        axios.all([\n            axios.get(url, CONFIG)\n        ]).then(axios.spread((farmerResponse) => {\n            let data = [];\n            if (farmerResponse.data.data.length > 0) {\n                setDataTotal(farmerResponse.data.data.length)\n                setLoad(false)\n                for (let i = 0; i < farmerResponse.data.data.length; i++) {\n\n                    let fpaid_amount = { fpaid_amount: formatCurrency(parseFloat(farmerResponse.data.data[i].amount).toFixed(2)) };\n\n                    let date = { dates: (moment.utc(farmerResponse.data.data[i].created_on).format('DD/MM/YYYY HH:mm:ss')) };\n                    data.push(Object.assign(date, fpaid_amount, farmerResponse.data.data[i]));\n                    setLoad(false)\n                }\n                setDataTotal(farmerResponse.data.total)\n                setFarmer(data)\n            } else {\n                setLoad(false)\n                setFarmer(data)\n            }\n        }))\n\n    }, [queryString]);\n\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [20, 100, 200, 500],\n        show_filter: true,\n        show_pagination: true,\n        pagination: 'advance',\n        page_size: 20,\n        button: {\n            csv: true\n        },\n        show_length_menu: true,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Transaction ID/Reference..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n\n    const columns = [\n        {\n            key: \"name\",\n            TrOnlyClassName: 'cell',\n            text: \"Name\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"user_id_no\",\n            TrOnlyClassName: 'cell',\n            text: \"ID NO.\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"fpaid_amount\",\n            TrOnlyClassName: 'cell',\n            text: \"Amount\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"transaction_id\",\n            TrOnlyClassName: 'cell',\n            text: \"Transaction ID\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'cell', text: \"Date\",\n            className: \"tsc\",\n            align: \"left\"\n        }\n    ];\n\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n\n\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            < >\n                < Card >\n                    <CardBody >\n                        <Table responsive hover>\n                            <div className=\"panel-body\" >\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4> <b>Deposits Archvies</b></h4>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n\n                                            onClick={\n                                                () => {\n                                                    refreshCanvas()\n                                                    setQueryString(require(\"randomstring\").generate({\n                                                        length: 1,\n                                                        charset: 'alphanumeric',\n                                                        capitalization: 'lowercase'\n                                                    }))\n                                                }}\n                                        >\n                                            Refresh\n                                            <Autorenew\n                                                className={clsx({\n                                                    [classes.refresh]: true,\n                                                    spin: spin\n                                                })}\n                                                onClick={\n                                                    () => {\n                                                        refreshCanvas()\n                                                        setQueryString(require(\"randomstring\").generate({\n                                                            length: 1,\n                                                            charset: 'alphanumeric',\n                                                            capitalization: 'lowercase'\n                                                        }))\n                                                    }}\n                                                spin={360}\n                                            />\n\n                                        </button>\n                                    </div>\n                                </div>\n                                <br />\n                                <div >\n                                    Total Deposits: <b>{datatotal}</b>\n                                    <br /><br />\n                                </div>\n                                <ReactDatatable\n                                    config={config}\n                                    records={farmer}\n                                    columns={columns}\n                                    dynamic={true}\n                                    id=\"tsc\"\n                                    loading={isLoading}\n                                    total_record={datatotal}\n                                    onChange={tableChangeHandler} />\n                            </div>\n                        </Table>\n                    </CardBody>\n\n\n                </Card>\n\n            </>\n        </div>\n    )\n\n}\nexport default DepositArchive;","import React, { useState, useEffect } from 'react';\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport axios from 'axios';\nimport \"../../_assets/css/file.css\"\nimport { Button, Card, CardBody, Table } from 'reactstrap';\nimport { baseURL, CONFIG, formatCurrency, useStyles } from '../../configs/exports';\nimport * as moment from 'moment';\nimport { Autorenew } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { Link } from 'react-router-dom';\n\n\n//farmer hooks\n\nconst CustomerDeposit = (state) => {\n\n    const [farmer, setFarmer] = useState([])\n    const [isLoading, setLoad] = useState(true)\n    const [datatotal, setDataTotal] = useState()\n    const [queryString, setQueryString] = useState(\"\")\n\n    // alert(state.location.state.farmer_id)\n    const [spin, setSpin] = useState(false);\n    const refreshCanvas = () => {\n        setSpin(true);\n        setTimeout(() => {\n            setSpin(false);\n        }, 1000);\n    };\n    const classes = useStyles();\n\n\n    useEffect(() => {\n        setLoad(true)\n\n        let url = baseURL + `loan_deposits?loan_id=` + state.location.state.farmer_id;\n        // alert(url)\n        axios.all([\n            axios.get(url, CONFIG)\n        ]).then(axios.spread((farmerResponse) => {\n            let data = [];\n            if (farmerResponse.data.data.length > 0) {\n\n                /**\n               * @description If list is\n               */\n                let params = new URLSearchParams(queryString)\n                let id = parseInt(params.get(\"page_number\"))\n\n                let p = 0;\n                if (id > 1) {\n                    p = (((id - 1) * parseInt(params.get(\"page_size\"))))\n                }\n\n                setDataTotal(farmerResponse.data.data.length)\n                setLoad(false)\n                for (let i = 0; i < farmerResponse.data.data.length; i++) {\n                    p++;\n                    let unrow = { row: p }\n                    let m_debit = { m_debit: formatCurrency(farmerResponse.data.data[i].amount) };\n                    let date = { dates: (moment.utc(farmerResponse.data.data[i].created_on).format('DD/MM/YYYY HH:mm:ss')) };\n                    data.push(Object.assign(date, unrow, m_debit, farmerResponse.data.data[i]));\n                    setLoad(false)\n                }\n                setDataTotal(farmerResponse.data.total)\n                setFarmer(data)\n            } else {\n                setLoad(false)\n                setFarmer(data)\n            }\n        }))\n\n    }, [queryString]);// eslint-disable-line react-hooks/exhaustive-deps\n\n\n    const config = {\n        key_column: \"tsc\",\n        length_menu: [20, 100, 200, 500],\n        show_filter: false,\n        show_pagination: false,\n        pagination: 'advance',\n        page_size: 20,\n        button: {\n            csv: true,\n            excel: true,\n            print: true\n        },\n        show_length_menu: false,\n        language: {\n            loading_text: \"Please be patient while data loads...\",\n            filter: \"Transaction ID/Reference..\",\n            no_data_text: \"There was no record found\",\n            pagination: {\n                next: <span>&#9658;</span>,\n                previous: <span>&#9668;</span>\n            }\n        }\n    }\n\n    const columns = [\n        {\n            key: \"row\",\n            TrOnlyClassName: 'cell',\n            text: \"#\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"m_debit\",\n            TrOnlyClassName: 'cell',\n            text: \"Amount\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n\n        {\n            key: \"transaction_id\",\n            TrOnlyClassName: 'cell',\n            text: \"Transaction ID\",\n            className: \"tsc\",\n            align: \"left\"\n        },\n        {\n            key: \"dates\",\n            TrOnlyClassName: 'cell', text: \"Date\",\n            className: \"tsc\",\n            align: \"left\"\n        }\n    ];\n\n\n\n    const tableChangeHandler = data => {\n        let queryString = Object.keys(data).map((key) => {\n            if (key === \"sort_order\" && data[key]) {\n                return encodeURIComponent(\"sort_order\") + '=' + encodeURIComponent(data[key].order) + '&' + encodeURIComponent(\"sort_column\") + '=' + encodeURIComponent(data[key].column)\n            } else {\n                return encodeURIComponent(key) + '=' + encodeURIComponent(data[key])\n            }\n        }).join('&');\n        setQueryString(queryString)\n    }\n\n\n\n    return (\n        <div style={{ marginTop: \"-20px\" }} >\n            < >\n                < Card >\n                    <CardBody >\n                        <Table responsive hover>\n                            <div className=\"panel-body\" >\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4> <b>Deposits</b> {state.location.state.farmer_name}</h4>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <Link\n                                            to={{\n                                                pathname: '/customer_details',\n                                                state: {\n                                                    farmer: {\n                                                        name: state.location.state.farmer_name,\n                                                        id: state.location.state.farmer_id,\n                                                        id_no: state.location.state.id_no\n                                                    }\n                                                }\n                                            }}>\n                                            <Button className=\"pull-right btn-sm\" outline color=\"primary\">\n                                                Swtich back\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                    <div className=\"col-3\">\n\n                                        <button className=\"float-right\" title=\"refresh\" style={{ background: \"white\", border: \"0px\" }}\n\n                                            onClick={\n                                                () => {\n                                                    refreshCanvas()\n                                                    setQueryString(require(\"randomstring\").generate({\n                                                        length: 1,\n                                                        charset: 'alphanumeric',\n                                                        capitalization: 'lowercase'\n                                                    }))\n                                                }}\n                                        >\n                                            Refresh\n                                            <Autorenew\n                                                className={clsx({\n                                                    [classes.refresh]: true,\n                                                    spin: spin\n                                                })}\n                                                onClick={\n                                                    () => {\n                                                        refreshCanvas()\n                                                        setQueryString(require(\"randomstring\").generate({\n                                                            length: 1,\n                                                            charset: 'alphanumeric',\n                                                            capitalization: 'lowercase'\n                                                        }))\n                                                    }}\n                                                spin={360}\n                                            />\n\n                                        </button>\n                                    </div>\n                                </div>\n                                <br />\n                                <ReactDatatable\n                                    config={config}\n                                    records={farmer}\n                                    columns={columns}\n                                    dynamic={true}\n                                    id=\"tsc\"\n                                    loading={isLoading}\n                                    total_record={datatotal}\n                                    onChange={tableChangeHandler} />\n                            </div>\n                        </Table>\n                    </CardBody>\n\n\n                </Card>\n\n            </>\n        </div>\n    )\n\n}\nexport default CustomerDeposit;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Layout from '../../../Layout/index';\nimport Default from '../../../Dashboards/Default';\nimport { UserSearch } from '../../../Customers/usersearch';\nimport UsersStaffs from '../../../Users/UsersStaffs';\n\nimport Customers from '../../../Customers/Customer';\nimport CustomerDetails from '../../../Customers/CustomerDetails';\nimport ImageView from '../../../../shared/components/catalog/imageView';\nimport SMSLogs from '../../../SMSLogs/SMSlogs';\nimport WithdrawRequests from '../../../Reports/WithdrawRequests';\nimport Loan from '../../../Loans/Loan';\nimport CuastomerStatement from '../../../Loans/CustomerStatement';\nimport Countries from '../../../Countries/Countries';\nimport Branches from '../../../Branches/Branches';\nimport Roles from '../../../Roles/Roles';\n\nimport SuspendAccount from '../../../Reports/SuspendAccount';\nimport DepositArchive from '../../../Reports/Deposits';\nimport CustomerDeposit from '../../../Customers/CustomerDeposit';\n\n\nexport default () => (\n  <div>\n    <Layout />\n    <div className=\"container__wrap\">\n      <Route path=\"/staffs\" component={UsersStaffs} />\n      <Route path=\"/find_customer\" component={UserSearch} />\n      <Route path=\"/dashboard\" component={Default} />\n      <Route path=\"/customers\" component={Customers} />\n      <Route path=\"/customer_details\" component={CustomerDetails} />\n      <Route path=\"/photo_view\" component={ImageView} />\n      <Route path=\"/messages\" component={SMSLogs} />\n      <Route path=\"/withdrawals\" component={WithdrawRequests} />\n      <Route path=\"/loans\" component={Loan} />\n      <Route path=\"/customer_statement\" component={CuastomerStatement} />\n\n\n\n      <Route path=\"/countries\" component={Countries} />\n      <Route path=\"/roles\" component={Roles} />\n      <Route path=\"/branches\" component={Branches} />\n\n      <Route path=\"/suspend_account\" component={SuspendAccount} />\n      <Route path=\"/deposits\" component={DepositArchive} />\n      <Route path=\"/customer_deposits\" component={CustomerDeposit} />\n\n\n\n\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport MainWrapper from '../MainWrapper';\nimport NotFound404 from '../../DefaultPage/404/index';\nimport LogIn from '../../Account/LogIn/index';\nimport WrappedRoutes from './WrappedRoutes';\n\nconst Router = () => (\n  <MainWrapper>\n    <main>\n      <Switch>\n        <Route path=\"/404\" component={NotFound404} />\n        <Route exact path=\"/\" component={LogIn} />\n        <Route path=\"/\" component={WrappedRoutes} />\n      </Switch>\n    </main>\n  </MainWrapper>\n);\n\nexport default Router;","import {\n  CHANGE_THEME_TO_DARK,\n  CHANGE_THEME_TO_LIGHT,\n} from '../actions/themeActions';\n\nconst initialState = {\n  className: 'theme-light',\n};\n\nconst themeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_THEME_TO_DARK:\n      return { className: 'theme-dark' };\n    case CHANGE_THEME_TO_LIGHT:\n      return { className: 'theme-light' };\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import {\n  CHANGE_DIRECTION_TO_LTR,\n  CHANGE_DIRECTION_TO_RTL,\n} from '../actions/rtlActions';\n\nconst initialState = {\n  direction: 'ltr',\n};\n\nconst rtlReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_DIRECTION_TO_LTR:\n      return { direction: 'ltr' };\n    case CHANGE_DIRECTION_TO_RTL:\n      return { direction: 'rtl' };\n    default:\n      return state;\n  }\n};\n\nexport default rtlReducer;\n","import {\n  CHANGE_SIDEBAR_VISIBILITY,\n  CHANGE_MOBILE_SIDEBAR_VISIBILITY,\n} from '../actions/sidebarActions';\n\nconst initialState = {\n  show: false,\n  collapse: false,\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_SIDEBAR_VISIBILITY:\n      return { ...state, collapse: !state.collapse };\n    case CHANGE_MOBILE_SIDEBAR_VISIBILITY:\n      return { ...state, show: !state.show };\n    default:\n      return state;\n  }\n};\n\nexport default sidebarReducer;\n","import { handleActions } from 'redux-actions';\nimport {\n  changeRoundBordersToOnAction,\n  changeRoundBordersToOffAction,\n} from '../actions/roundBordersActions';\n\nconst defaultState = {\n  className: 'round-borders-off',\n};\n\nexport default handleActions(\n  {\n    [changeRoundBordersToOnAction](state) {\n      return {\n        ...state,\n        className: 'round-borders-on',\n      };\n    },\n    [changeRoundBordersToOffAction](state) {\n      return {\n        ...state,\n        className: 'round-borders-off',\n      };\n    },\n  },\n  defaultState,\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  changeBlocksShadowsToOnAction,\n  changeBlocksShadowsToOffAction,\n} from '../actions/blocksShadowsActions';\n\nconst defaultState = {\n  className: 'blocks-shadows-off',\n};\n\nexport default handleActions(\n  {\n    [changeBlocksShadowsToOnAction](state) {\n      return {\n        ...state,\n        className: 'blocks-shadows-on',\n      };\n    },\n    [changeBlocksShadowsToOffAction](state) {\n      return {\n        ...state,\n        className: 'blocks-shadows-off',\n      };\n    },\n  },\n  defaultState,\n);\n","import {\n  CHANGE_CRYPTO_TABLE_DATA,\n  DELETE_CRYPTO_TABLE_DATA,\n  LOAD_CRYPTO_TABLE_DATA,\n} from '../actions/cryptoTableActions';\n\nconst initialState = {\n  items: [\n    {\n      id: 0,\n      name: 'Bitcoin',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'btc',\n    },\n    {\n      id: 1,\n      name: 'Ethereum',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'eth',\n    },\n    {\n      id: 2,\n      name: 'Ripple',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'xrp',\n    },\n    {\n      id: 3,\n      name: 'Bitcoin Cash',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'bch',\n    },\n    {\n      id: 4,\n      name: 'Eos',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'eos',\n    },\n    {\n      id: 5,\n      name: 'Litecoin',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'ltc',\n    },\n    {\n      id: 6,\n      name: 'Cardano',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'ada',\n    },\n    {\n      id: 7,\n      name: 'Stellar',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'xlm',\n    },\n    {\n      id: 8,\n      name: 'IOTA',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'iota',\n    },\n    {\n      id: 9,\n      name: 'NEO',\n      market_cap: '$ 131 131 454 444',\n      price: '$ 6 432,23',\n      volume: '$ 6 432 323 455',\n      supply: '$ 6 432 323',\n      change: '0,59%',\n      chart: 'neo',\n    },\n  ],\n  data: {},\n};\n\nconst cryptoTableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CRYPTO_TABLE_DATA: {\n      const loadData = state.items[action.index];\n      return { ...state, data: loadData };\n    }\n    case CHANGE_CRYPTO_TABLE_DATA: {\n      const updatedItems = [...state.items];\n      updatedItems[action.index] = action.data;\n      return { ...state, items: updatedItems };\n    }\n    case DELETE_CRYPTO_TABLE_DATA:\n      return { ...state, items: action.items };\n    default:\n      return state;\n  }\n};\n\nexport default cryptoTableReducer;\n","export const LOAD_CRYPTO_TABLE_DATA = 'LOAD_CRYPTO_TABLE_DATA';\nexport const CHANGE_CRYPTO_TABLE_DATA = 'CHANGE_CRYPTO_TABLE_DATA';\nexport const DELETE_CRYPTO_TABLE_DATA = 'DELETE_CRYPTO_TABLE_DATA';\n\nexport function loadCryptoTableData(index) {\n  return {\n    type: LOAD_CRYPTO_TABLE_DATA,\n    index,\n  };\n}\n\nexport function changeCryptoTableData(data, index) {\n  return {\n    type: CHANGE_CRYPTO_TABLE_DATA,\n    data,\n    index,\n  };\n}\n\nexport function deleteCryptoTableData(items) {\n  return {\n    type: DELETE_CRYPTO_TABLE_DATA,\n    items,\n  };\n}\n","import {\n  CHANGE_NEW_ORDER_TABLE_DATA,\n  DELETE_NEW_ORDER_TABLE_DATA,\n  LOAD_NEW_ORDER_TABLE_DATA,\n} from '../actions/newOrderTableActions';\n\nconst initialState = {\n  items: [\n    {\n      id: 0,\n      title: 'Nike Air Max',\n      quantity: 142,\n      sold: 124,\n      total: '$ 4 234',\n      img: `${process.env.PUBLIC_URL}/img/shoes/01.png`,\n    },\n    {\n      id: 1,\n      title: 'Reebok ZigTech',\n      quantity: 98,\n      sold: 53,\n      total: '$ 1 754',\n      img: `${process.env.PUBLIC_URL}/img/shoes/02.png`,\n    },\n    {\n      id: 2,\n      title: 'Puma Suede',\n      quantity: 23,\n      sold: 21,\n      total: '$ 1 572',\n      img: `${process.env.PUBLIC_URL}/img/shoes/03.png`,\n    },\n    {\n      id: 3,\n      title: 'Puma Basket Platform',\n      quantity: 2,\n      sold: 456,\n      total: '$ 989',\n      img: `${process.env.PUBLIC_URL}/img/shoes/04.png`,\n    },\n    {\n      id: 4,\n      title: 'Nike Jordan',\n      quantity: 189,\n      sold: 42,\n      total: '$ 542',\n      img: `${process.env.PUBLIC_URL}/img/shoes/05.png`,\n    },\n  ],\n  data: {},\n};\n\nconst newOrderTableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_NEW_ORDER_TABLE_DATA: {\n      const loadData = state.items[action.index];\n      return { ...state, data: loadData };\n    }\n    case CHANGE_NEW_ORDER_TABLE_DATA: {\n      const updatedItems = [...state.items];\n      updatedItems[action.index] = action.data;\n      return { ...state, items: updatedItems };\n    }\n    case DELETE_NEW_ORDER_TABLE_DATA:\n      return { ...state, items: action.items };\n    default:\n      return state;\n  }\n};\n\nexport default newOrderTableReducer;\n","export const LOAD_NEW_ORDER_TABLE_DATA = 'LOAD_NEW_ORDER_TABLE_DATA';\nexport const CHANGE_NEW_ORDER_TABLE_DATA = 'CHANGE_NEW_ORDER_TABLE_DATA';\nexport const DELETE_NEW_ORDER_TABLE_DATA = 'DELETE_NEW_ORDER_TABLE_DATA';\n\nexport function loadNewOrderTableData(index) {\n  return {\n    type: LOAD_NEW_ORDER_TABLE_DATA,\n    index,\n  };\n}\n\nexport function changeNewOrderTableData(data, index) {\n  return {\n    type: CHANGE_NEW_ORDER_TABLE_DATA,\n    data,\n    index,\n  };\n}\n\nexport function deleteNewOrderTableData(items) {\n  return {\n    type: DELETE_NEW_ORDER_TABLE_DATA,\n    items,\n  };\n}\n","import { handleActions } from 'redux-actions';\nimport {\n  toggleBoxShadow,\n  toggleTopNavigation,\n} from '../actions/customizerActions';\n\nconst defaultState = {\n  withBoxShadow: false,\n  topNavigation: false,\n};\n\nexport default handleActions(\n  {\n    [toggleBoxShadow](state) {\n      return { ...state, withBoxShadow: !state.withBoxShadow };\n    },\n    [toggleTopNavigation](state) {\n      return { ...state, topNavigation: !state.topNavigation };\n    },\n  },\n  defaultState,\n);\n","const initialState = {\n  todos: [{\n    id: 213,\n    title: 'Create the main page design',\n    description: 'Eldest father can design tastes did joy settle. Roused future he ye an marked. Arose mr rapid '\n      + 'in so vexed words. Gay welcome led add lasting chiefly say looking. ',\n    completed: false,\n    priority: 'high',\n  },\n  {\n    id: 214,\n    title: 'Write to Sarah',\n    description: 'Eldest father can design tastes did joy settle. Roused future he ye an marked. Arose mr rapid '\n        + 'in so vexed words. Gay welcome led add lasting chiefly say looking. ',\n    completed: false,\n    priority: 'low',\n  },\n  {\n    id: 215,\n    title: 'Make a mind-map',\n    description: 'Eldest father can design tastes did joy settle. Roused future he ye an marked. Arose mr rapid '\n        + 'in so vexed words. Gay welcome led add lasting chiefly say looking. ',\n    completed: false,\n    priority: 'medium',\n  },\n  {\n    id: 216,\n    title: 'Write a text',\n    description: 'Eldest father can design tastes did joy settle. Roused future he ye an marked. Arose mr rapid '\n        + 'in so vexed words. Gay welcome led add lasting chiefly say looking. ',\n    completed: true,\n    priority: 'low',\n  },\n  {\n    id: 217,\n    title: 'Make a blog post about marketing',\n    description: 'Eldest father can design tastes did joy settle. Roused future he ye an marked. Arose mr rapid '\n        + 'in so vexed words. Gay welcome led add lasting chiefly say looking. ',\n    completed: true,\n    priority: 'low',\n  }],\n  priorityFilter: '',\n};\n\nfunction getId(state) {\n  return state.todo.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1;\n}\nconst todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n ...state,\ntodos: [{\n          title: action.title,\n          description: action.description,\n          priority: action.priority,\n          completed: false,\n          id: getId(state),\n        }, ...state.todo],\n};\n    case 'COMPLETE_TODO':\n      return {\n        ...state,\n        todos: state.todo.map(todo => (todo.id === action.id\n        ? ({\n          ...todo,\n          updated: false,\n          completed: !todo.completed,\n        }) : todo)),\n      };\n    case 'DELETE_TODO':\n      return { ...state, todos: state.todo.filter(todo => todo.id !== action.id) };\n    case 'PRIORITY_FILTER':\n      return { ...state, priorityFilter: action.priorityFilter };\n    default:\n      return state;\n  }\n};\nexport default todoReducer;\n","import {\n  AUTHENTICATE,\n  AUTHENTICATE_ERROR_AUTH,\n} from '../actions/authActions';\n\nconst initialState = {\n  fullName: 'Roman Johanson',\n  avatar: '',\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return { fullName: action.user.name, avatar: action.user.avatar };\n    case AUTHENTICATE_ERROR_AUTH:\n      return { error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export const AUTHENTICATE = 'AUTHENTICATE';\nexport const AUTHENTICATE_ERROR_AUTH = 'AUTHENTICATE_ERROR_AUTH';\n\nexport function auth({ name, avatar }) {\n  return {\n    type: AUTHENTICATE,\n    user: { name, avatar },\n  };\n}\n\nexport function authError(error) {\n  return {\n    type: AUTHENTICATE_ERROR_AUTH,\n    error,\n  };\n}\n","import { combineReducers, createStore } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\nimport {\n  cryptoTableReducer,\n  newOrderTableReducer,\n  sidebarReducer,\n  themeReducer,\n  customizerReducer,\n  todoReducer,\n  rtlReducer,\n  authReducer,\n} from '../../redux/reducers/index';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\",\n  theme: themeReducer,\n  rtl: rtlReducer,\n  sidebar: sidebarReducer,\n  cryptoTable: cryptoTableReducer,\n  newOrder: newOrderTableReducer,\n  customizer: customizerReducer,\n  todos: todoReducer,\n  user: authReducer,\n});\nconst store = createStore(reducer);\n\nexport default store;\n","import { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ScrollToTop extends PureComponent {\n  static propTypes = {\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }).isRequired,\n    children: PropTypes.element.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    if (location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    return children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import resources from './resources';\n\nexport const config = {\n  interpolation: { escapeValue: false }, // React already does escaping\n  lng: 'en',\n  resources,\n};\n\nexport { resources };\n","/* eslint-disable camelcase */\nimport common_fr from './fr/common.json';\nimport common_en from './en/common.json';\nimport common_de from './de/common.json';\n\nexport default {\n  en: {\n    common: common_en,\n  },\n  fr: {\n    common: common_fr,\n  },\n  de: {\n    common: common_de,\n  },\n};\n","import React, { Fragment } from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from 'i18next';\nimport 'firebase/auth';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport '../../scss/app.scss';\nimport PropTypes from 'prop-types';\nimport Router from './Router';\nimport store from './store';\nimport ScrollToTop from './ScrollToTop';\nimport { config as i18nextConfig } from '../../translations';\nimport Auth0Provider from '../../shared/components/auth/withAuth0';\nimport IdleTimer from 'react-idle-timer'\n\ni18n.init(i18nextConfig);\n\nconst ThemeComponent = ({ children, themeName }) => {\n  const theme = createMuiTheme({\n    palette: {\n      type: themeName === 'theme-dark' ? 'dark' : 'light',\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  );\n};\nThemeComponent.propTypes = {\n  children: PropTypes.shape().isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nconst ConnectedThemeComponent = connect(state => ({ themeName: state.theme.className }))(ThemeComponent);\n\n\nconst App = () => {\n  // eslint-disable-next-line\n  const [loading, setLoading] = React.useState(true);\n  // eslint-disable-next-line\n  const [loaded, setLoaded] = React.useState(false);\n\n  let idleTimer = null;\n\n  React.useEffect(() => {\n    window.addEventListener('load', () => {\n      setLoading(false);\n      setTimeout(() => setLoaded(true), 100);\n    });\n  }, []);\n\n  const onRedirectCallbackAuth0 = (appState) => {\n    window.history.replaceState(\n      {},\n      document.title,\n      appState && appState.targetUrl\n        ? appState.targetUrl\n        : window.location.pathname,\n    );\n  }\n\n\n  const handleOnAction = (event) => {\n    console.log('user did something', event)\n  }\n\n  const handleOnActive = (event) => {\n    console.log('user is active', event)\n    console.log('time remaining', idleTimer.getRemainingTime())\n  }\n\n  const handleOnIdle = (event) => {\n    console.log('user is idle', event)\n    console.log('last active', idleTimer.getLastActiveTime())\n    window.location.href = \"/\";\n    localStorage.removeItem('token');\n  }\n  return (\n    <Provider store={store}>\n      <Auth0Provider\n        // domain={auth0Config.domain}\n        // clientId={auth0Config.clientId}\n        // redirectUri={`${window.location.origin}/luckybox/dashboard_default`}\n        // returnTo={`${window.location.origin}/luckybox/dashboard_default`}\n        onRedirectCallback={onRedirectCallbackAuth0}\n      >\n        <BrowserRouter >\n          <I18nextProvider>\n            <ScrollToTop>\n              <Fragment>\n                <ConnectedThemeComponent>\n                  <IdleTimer\n                    ref={ref => { idleTimer = ref }}\n                    timeout={1000 * 60 * 15}\n                    onActive={handleOnActive}\n                    onIdle={handleOnIdle}\n                    onAction={handleOnAction}\n                    debounce={250}\n                  />\n                  <Router />\n                </ConnectedThemeComponent>\n              </Fragment>\n            </ScrollToTop>\n          </I18nextProvider>\n        </BrowserRouter>\n      </Auth0Provider>\n    </Provider>\n  );\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);  \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}